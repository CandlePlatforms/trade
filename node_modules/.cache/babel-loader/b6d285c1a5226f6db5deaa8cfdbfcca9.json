{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/single/AddLiquiditySingleSpaceAvailable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport { useInterval } from 'hooks/useInterval';\nimport BigNumber from 'bignumber.js';\nimport { Tooltip } from 'components/tooltip/Tooltip';\nimport { ReactComponent as IconBell } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/bell.svg\";\nimport { useAppSelector } from 'redux/index';\nimport { getTokenById } from 'redux/bancor/bancor';\nimport { checkPriceDeviationTooHigh, fetchBntNeededToOpenSpace, getSpaceAvailable } from 'services/web3/liquidity/liquidity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLiquiditySingleSpaceAvailable = _ref => {\n  _s();\n\n  let {\n    pool,\n    token,\n    selectedToken,\n    setSelectedToken,\n    setAmount,\n    spaceAvailableBnt,\n    setSpaceAvailableBnt,\n    spaceAvailableTkn,\n    setSpaceAvailableTkn\n  } = _ref;\n  const bnt = useAppSelector(state => getTokenById(state, pool.reserves[1].address));\n  const [showPriceDeviationWarning, setShowPriceDeviationWarning] = useState(false);\n  const [bntNeeded, setBntNeeded] = useState('');\n  useInterval(async () => {\n    await fetchData();\n  }, 15000, false);\n  const fetchData = useCallback(async () => {\n    try {\n      const isPriceDeviationToHigh = await checkPriceDeviationTooHigh(pool, selectedToken);\n      setShowPriceDeviationWarning(isPriceDeviationToHigh);\n\n      if (isPriceDeviationToHigh) {\n        return;\n      }\n\n      const spaceAvailable = await getSpaceAvailable(pool.pool_dlt_id, token.decimals);\n      setSpaceAvailableBnt(spaceAvailable.bnt);\n      setSpaceAvailableTkn(spaceAvailable.tkn);\n\n      if (selectedToken.symbol !== 'BNT') {\n        const isSpaceAvailable = new BigNumber(spaceAvailable.tkn).gt(1);\n\n        if (!isSpaceAvailable) {\n          const bntNeeded = await fetchBntNeededToOpenSpace(pool);\n          setBntNeeded(bntNeeded);\n        } else {\n          setBntNeeded('');\n        }\n      }\n    } catch (e) {\n      console.error('failed to fetch space available with msg: ', e.message);\n    }\n  }, [pool, token.decimals, selectedToken, setSpaceAvailableBnt, setSpaceAvailableTkn]);\n  useEffect(() => {\n    void fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showPriceDeviationWarning ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-20 rounded bg-error font-medium my-20 text-white\",\n      children: \"Due to price volatility, protecting your tokens is currently not available. Please try again in a few minutes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-20 rounded bg-blue-0 dark:bg-blue-5 my-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between dark:text-grey-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: \"Space Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: selectedToken.symbol === 'BNT' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAmount(spaceAvailableBnt),\n            children: [prettifyNumber(spaceAvailableBnt), \" BNT\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setAmount(spaceAvailableTkn),\n              className: \"mr-4\",\n              children: [prettifyNumber(spaceAvailableTkn), \" \", token && token.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), new BigNumber(spaceAvailableTkn).lte(1) && /*#__PURE__*/_jsxDEV(Tooltip, {\n              content: \"Notify me when space opens up\",\n              button: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://9000.hal.xyz/recipes/bancor-pool-liquidity-protocol?pool=${pool.pool_dlt_id}&token=${token.symbol}&value=10000&currency=USD`,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(IconBell, {\n                  className: \"w-12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), bntNeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between dark:text-grey-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: \"BNT needed to open up space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSelectedToken(bnt);\n              setAmount(bntNeeded, bnt);\n            },\n            children: [prettifyNumber(bntNeeded), \" BNT\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLiquiditySingleSpaceAvailable, \"/UmRnKXFIHMmXyBxP5o66eWGy7Q=\", false, function () {\n  return [useAppSelector, useInterval];\n});\n\n_c = AddLiquiditySingleSpaceAvailable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquiditySingleSpaceAvailable\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/single/AddLiquiditySingleSpaceAvailable.tsx"],"names":["useCallback","useEffect","useState","prettifyNumber","useInterval","BigNumber","Tooltip","useAppSelector","getTokenById","checkPriceDeviationTooHigh","fetchBntNeededToOpenSpace","getSpaceAvailable","AddLiquiditySingleSpaceAvailable","pool","token","selectedToken","setSelectedToken","setAmount","spaceAvailableBnt","setSpaceAvailableBnt","spaceAvailableTkn","setSpaceAvailableTkn","bnt","state","reserves","address","showPriceDeviationWarning","setShowPriceDeviationWarning","bntNeeded","setBntNeeded","fetchData","isPriceDeviationToHigh","spaceAvailable","pool_dlt_id","decimals","tkn","symbol","isSpaceAvailable","gt","e","console","error","message","lte"],"mappings":"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","sourcesContent":["import { Pool, Token } from 'services/observables/tokens';\nimport { useCallback, useEffect, useState } from 'react';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport { useInterval } from 'hooks/useInterval';\nimport BigNumber from 'bignumber.js';\nimport { Tooltip } from 'components/tooltip/Tooltip';\nimport { ReactComponent as IconBell } from 'assets/icons/bell.svg';\nimport { useAppSelector } from 'redux/index';\nimport { getTokenById } from 'redux/bancor/bancor';\nimport {\n  checkPriceDeviationTooHigh,\n  fetchBntNeededToOpenSpace,\n  getSpaceAvailable,\n} from 'services/web3/liquidity/liquidity';\n\ninterface Props {\n  pool: Pool;\n  token: Token;\n  selectedToken: Token;\n  setSelectedToken: Function;\n  setAmount: Function;\n  spaceAvailableBnt: string;\n  setSpaceAvailableBnt: Function;\n  spaceAvailableTkn: string;\n  setSpaceAvailableTkn: Function;\n}\n\nexport const AddLiquiditySingleSpaceAvailable = ({\n  pool,\n  token,\n  selectedToken,\n  setSelectedToken,\n  setAmount,\n  spaceAvailableBnt,\n  setSpaceAvailableBnt,\n  spaceAvailableTkn,\n  setSpaceAvailableTkn,\n}: Props) => {\n  const bnt = useAppSelector<Token | undefined>((state: any) =>\n    getTokenById(state, pool.reserves[1].address)\n  );\n  const [showPriceDeviationWarning, setShowPriceDeviationWarning] =\n    useState(false);\n  const [bntNeeded, setBntNeeded] = useState('');\n\n  useInterval(\n    async () => {\n      await fetchData();\n    },\n    15000,\n    false\n  );\n\n  const fetchData = useCallback(async () => {\n    try {\n      const isPriceDeviationToHigh = await checkPriceDeviationTooHigh(\n        pool,\n        selectedToken\n      );\n      setShowPriceDeviationWarning(isPriceDeviationToHigh);\n      if (isPriceDeviationToHigh) {\n        return;\n      }\n      const spaceAvailable = await getSpaceAvailable(\n        pool.pool_dlt_id,\n        token.decimals\n      );\n      setSpaceAvailableBnt(spaceAvailable.bnt);\n      setSpaceAvailableTkn(spaceAvailable.tkn);\n      if (selectedToken.symbol !== 'BNT') {\n        const isSpaceAvailable = new BigNumber(spaceAvailable.tkn).gt(1);\n        if (!isSpaceAvailable) {\n          const bntNeeded = await fetchBntNeededToOpenSpace(pool);\n          setBntNeeded(bntNeeded);\n        } else {\n          setBntNeeded('');\n        }\n      }\n    } catch (e: any) {\n      console.error('failed to fetch space available with msg: ', e.message);\n    }\n  }, [\n    pool,\n    token.decimals,\n    selectedToken,\n    setSpaceAvailableBnt,\n    setSpaceAvailableTkn,\n  ]);\n\n  useEffect(() => {\n    void fetchData();\n  }, [fetchData]);\n\n  return (\n    <div>\n      {showPriceDeviationWarning ? (\n        <div className=\"p-20 rounded bg-error font-medium my-20 text-white\">\n          Due to price volatility, protecting your tokens is currently not\n          available. Please try again in a few minutes.\n        </div>\n      ) : (\n        <div className=\"p-20 rounded bg-blue-0 dark:bg-blue-5 my-20\">\n          <div className=\"flex justify-between dark:text-grey-0\">\n            <span className=\"font-medium\">Space Available</span>{' '}\n            <div className=\"text-right\">\n              {selectedToken.symbol === 'BNT' ? (\n                <button onClick={() => setAmount(spaceAvailableBnt)}>\n                  {prettifyNumber(spaceAvailableBnt)} BNT\n                </button>\n              ) : (\n                <div>\n                  <button\n                    onClick={() => setAmount(spaceAvailableTkn)}\n                    className=\"mr-4\"\n                  >\n                    {prettifyNumber(spaceAvailableTkn)} {token && token.symbol}\n                  </button>\n                  {new BigNumber(spaceAvailableTkn).lte(1) && (\n                    <Tooltip\n                      content=\"Notify me when space opens up\"\n                      button={\n                        <a\n                          href={`https://9000.hal.xyz/recipes/bancor-pool-liquidity-protocol?pool=${pool.pool_dlt_id}&token=${token.symbol}&value=10000&currency=USD`}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <IconBell className=\"w-12\" />\n                        </a>\n                      }\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          {bntNeeded && (\n            <div className=\"flex justify-between dark:text-grey-0\">\n              <span className=\"font-medium\">BNT needed to open up space</span>{' '}\n              <div className=\"text-right\">\n                <button\n                  onClick={() => {\n                    setSelectedToken(bnt);\n                    setAmount(bntNeeded, bnt);\n                  }}\n                >\n                  {prettifyNumber(bntNeeded)} BNT\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}