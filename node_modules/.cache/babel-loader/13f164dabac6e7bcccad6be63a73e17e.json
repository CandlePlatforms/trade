{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport numeral from 'numeral';\nimport { EthNetworks } from 'services/web3/types';\nimport dayjs from 'dayjs';\nimport { shrinkToken } from './formulas';\nconst oneMillion = new BigNumber(1000000);\nexport const ppmToDec = ppm => new BigNumber(ppm).div(oneMillion);\nexport const decToPpm = dec => new BigNumber(dec).times(oneMillion).toFixed(0);\nexport const prettifyNumber = function (num) {\n  let usd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const bigNum = new BigNumber(num);\n\n  if (usd) {\n    if (bigNum.lte(0)) return '$0.00';else if (bigNum.lt(0.01)) return '< $0.01';else if (bigNum.gt(100)) return numeral(bigNum).format('$0,0', Math.floor);else return numeral(bigNum).format('$0,0.00', Math.floor);\n  } else {\n    if (bigNum.lte(0)) return '0';else if (bigNum.gte(1000)) return numeral(bigNum).format('0,0', Math.floor);else if (bigNum.gte(2)) return numeral(bigNum).format('0,0.[00]', Math.floor);else if (bigNum.lt(0.000001)) return '< 0.000001';else return numeral(bigNum).format('0.[000000]', Math.floor);\n  }\n};\nexport const formatDuration = duration => {\n  let sentence = '';\n  const days = duration.days();\n  const minutes = duration.minutes();\n  const hours = duration.hours();\n  if (days > 0) sentence += days + ' Days';\n  if (hours > 0) sentence += ' ' + hours + ' Hours';\n  if (minutes > 0) sentence += ' ' + minutes + ' Minutes';\n  return sentence;\n};\nexport const formatTime = ms => {\n  const countdown = dayjs.duration(ms).format('HH mm ss');\n  let [hours, minutes, seconds] = countdown.split(' ').map(x => parseInt(x));\n  const days = Math.floor(ms / (1000 * 60 * 60 * 24));\n\n  if (!days && !hours && !minutes) {\n    return `${seconds}s`;\n  } else if (!days && !hours) {\n    return `${minutes}m ${seconds}s`;\n  } else if (!days) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  } else {\n    return `${days}d ${hours}h ${minutes}m ${seconds}s`;\n  }\n};\nexport const getNetworkName = network => {\n  switch (network) {\n    case EthNetworks.Mainnet:\n      return 'Ethereum Mainnet';\n\n    case EthNetworks.Ropsten:\n      return 'Ropsten Test Network';\n\n    default:\n      return 'Unsupported network';\n  }\n};\nexport const isUnsupportedNetwork = network => {\n  return network !== undefined && EthNetworks[network] === undefined;\n};\nexport const calculateBntNeededToOpenSpace = (bntBalance, tknBalance, networkTokensMinted, networkTokenMintingLimits) => {\n  return new BigNumber(bntBalance).div(tknBalance).plus(networkTokensMinted).minus(networkTokenMintingLimits).toString();\n};\nexport const calculatePriceDeviationTooHigh = (averageRate, primaryReserveBalance, secondaryReserveBalance, averageRateMaxDeviation) => {\n  const spotRate = primaryReserveBalance.dividedBy(secondaryReserveBalance);\n  const averageRateMaxDeviationBase = new BigNumber(oneMillion).minus(averageRateMaxDeviation);\n  const threshold = averageRate.dividedBy(spotRate);\n  const withinLowerThreshold = threshold.isGreaterThan(averageRateMaxDeviationBase.dividedBy(oneMillion));\n  const withinHigherThreshold = oneMillion.dividedBy(averageRateMaxDeviationBase).isGreaterThan(threshold);\n  return !(withinLowerThreshold && withinHigherThreshold);\n};\nexport const rewindBlocksByDays = function (currentBlock, days) {\n  let secondsPerBlock = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 13.3;\n  if (!Number.isInteger(currentBlock)) throw new Error('Current block should be an integer');\n  const secondsToRewind = dayjs.duration(days, 'days').asSeconds();\n  const blocksToRewind = parseInt(String(secondsToRewind / secondsPerBlock));\n  return currentBlock - blocksToRewind;\n};\nexport const calculateProgressLevel = (startTimeSeconds, endTimeSeconds) => {\n  if (endTimeSeconds < startTimeSeconds) throw new Error('End time should be greater than start time');\n  const totalWaitingTime = endTimeSeconds - startTimeSeconds;\n  const now = dayjs().unix();\n  if (now >= endTimeSeconds) return 1;\n  const timeWaited = now - startTimeSeconds;\n  return timeWaited / totalWaitingTime;\n};\nexport const calculateAPR = (roi, magnitude) => ppmToDec(roi).minus(1).times(magnitude);\nexport const calcUsdPrice = (amount, price, decimals) => new BigNumber(shrinkToken(amount, decimals)).times(price !== null && price !== void 0 ? price : 0).toString();\nexport const IS_IN_IFRAME = window.self !== window.top;\nexport const findPoolByConverter = (converter, pools, apiPools) => {\n  const poolExists = pools.find(x => x.converter_dlt_id === converter);\n\n  if (poolExists) {\n    return poolExists;\n  } else {\n    return apiPools.find(x => x.converter_dlt_id === converter);\n  }\n};","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/utils/helperFunctions.ts"],"names":["BigNumber","numeral","EthNetworks","dayjs","shrinkToken","oneMillion","ppmToDec","ppm","div","decToPpm","dec","times","toFixed","prettifyNumber","num","usd","bigNum","lte","lt","gt","format","Math","floor","gte","formatDuration","duration","sentence","days","minutes","hours","formatTime","ms","countdown","seconds","split","map","x","parseInt","getNetworkName","network","Mainnet","Ropsten","isUnsupportedNetwork","undefined","calculateBntNeededToOpenSpace","bntBalance","tknBalance","networkTokensMinted","networkTokenMintingLimits","plus","minus","toString","calculatePriceDeviationTooHigh","averageRate","primaryReserveBalance","secondaryReserveBalance","averageRateMaxDeviation","spotRate","dividedBy","averageRateMaxDeviationBase","threshold","withinLowerThreshold","isGreaterThan","withinHigherThreshold","rewindBlocksByDays","currentBlock","secondsPerBlock","Number","isInteger","Error","secondsToRewind","asSeconds","blocksToRewind","String","calculateProgressLevel","startTimeSeconds","endTimeSeconds","totalWaitingTime","now","unix","timeWaited","calculateAPR","roi","magnitude","calcUsdPrice","amount","price","decimals","IS_IN_IFRAME","window","self","top","findPoolByConverter","converter","pools","apiPools","poolExists","find","converter_dlt_id"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js';\nimport numeral from 'numeral';\nimport { EthNetworks } from 'services/web3/types';\nimport dayjs from 'dayjs';\nimport { shrinkToken } from './formulas';\nimport { APIPool } from '../services/api/bancor';\nimport { Pool } from '../services/observables/tokens';\n\nconst oneMillion = new BigNumber(1000000);\n\nexport const ppmToDec = (ppm: number | string | BigNumber) =>\n  new BigNumber(ppm).div(oneMillion);\n\nexport const decToPpm = (dec: number | string | BigNumber): string =>\n  new BigNumber(dec).times(oneMillion).toFixed(0);\n\nexport const prettifyNumber = (\n  num: number | string | BigNumber,\n  usd = false\n): string => {\n  const bigNum = new BigNumber(num);\n  if (usd) {\n    if (bigNum.lte(0)) return '$0.00';\n    else if (bigNum.lt(0.01)) return '< $0.01';\n    else if (bigNum.gt(100)) return numeral(bigNum).format('$0,0', Math.floor);\n    else return numeral(bigNum).format('$0,0.00', Math.floor);\n  } else {\n    if (bigNum.lte(0)) return '0';\n    else if (bigNum.gte(1000)) return numeral(bigNum).format('0,0', Math.floor);\n    else if (bigNum.gte(2))\n      return numeral(bigNum).format('0,0.[00]', Math.floor);\n    else if (bigNum.lt(0.000001)) return '< 0.000001';\n    else return numeral(bigNum).format('0.[000000]', Math.floor);\n  }\n};\n\nexport const formatDuration = (duration: plugin.Duration): string => {\n  let sentence = '';\n  const days = duration.days();\n  const minutes = duration.minutes();\n  const hours = duration.hours();\n  if (days > 0) sentence += days + ' Days';\n  if (hours > 0) sentence += ' ' + hours + ' Hours';\n  if (minutes > 0) sentence += ' ' + minutes + ' Minutes';\n  return sentence;\n};\n\nexport const formatTime = (ms: number): string => {\n  const countdown = dayjs.duration(ms).format('HH mm ss');\n  let [hours, minutes, seconds] = countdown.split(' ').map((x) => parseInt(x));\n  const days = Math.floor(ms / (1000 * 60 * 60 * 24));\n  if (!days && !hours && !minutes) {\n    return `${seconds}s`;\n  } else if (!days && !hours) {\n    return `${minutes}m ${seconds}s`;\n  } else if (!days) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  } else {\n    return `${days}d ${hours}h ${minutes}m ${seconds}s`;\n  }\n};\n\nexport const getNetworkName = (network: EthNetworks): string => {\n  switch (network) {\n    case EthNetworks.Mainnet:\n      return 'Ethereum Mainnet';\n    case EthNetworks.Ropsten:\n      return 'Ropsten Test Network';\n    default:\n      return 'Unsupported network';\n  }\n};\n\nexport const isUnsupportedNetwork = (\n  network: EthNetworks | undefined\n): boolean => {\n  return network !== undefined && EthNetworks[network] === undefined;\n};\n\nexport const calculateBntNeededToOpenSpace = (\n  bntBalance: string,\n  tknBalance: string,\n  networkTokensMinted: string,\n  networkTokenMintingLimits: string\n): string => {\n  return new BigNumber(bntBalance)\n    .div(tknBalance)\n    .plus(networkTokensMinted)\n    .minus(networkTokenMintingLimits)\n    .toString();\n};\n\nexport const calculatePriceDeviationTooHigh = (\n  averageRate: BigNumber,\n  primaryReserveBalance: BigNumber,\n  secondaryReserveBalance: BigNumber,\n  averageRateMaxDeviation: BigNumber\n): boolean => {\n  const spotRate = primaryReserveBalance.dividedBy(secondaryReserveBalance);\n\n  const averageRateMaxDeviationBase = new BigNumber(oneMillion).minus(\n    averageRateMaxDeviation\n  );\n\n  const threshold = averageRate.dividedBy(spotRate);\n\n  const withinLowerThreshold = threshold.isGreaterThan(\n    averageRateMaxDeviationBase.dividedBy(oneMillion)\n  );\n\n  const withinHigherThreshold = oneMillion\n    .dividedBy(averageRateMaxDeviationBase)\n    .isGreaterThan(threshold);\n\n  return !(withinLowerThreshold && withinHigherThreshold);\n};\n\nexport const rewindBlocksByDays = (\n  currentBlock: number,\n  days: number,\n  secondsPerBlock = 13.3\n) => {\n  if (!Number.isInteger(currentBlock))\n    throw new Error('Current block should be an integer');\n  const secondsToRewind = dayjs.duration(days, 'days').asSeconds();\n  const blocksToRewind = parseInt(String(secondsToRewind / secondsPerBlock));\n  return currentBlock - blocksToRewind;\n};\n\nexport const calculateProgressLevel = (\n  startTimeSeconds: number,\n  endTimeSeconds: number\n) => {\n  if (endTimeSeconds < startTimeSeconds)\n    throw new Error('End time should be greater than start time');\n  const totalWaitingTime = endTimeSeconds - startTimeSeconds;\n  const now = dayjs().unix();\n  if (now >= endTimeSeconds) return 1;\n  const timeWaited = now - startTimeSeconds;\n  return timeWaited / totalWaitingTime;\n};\n\nexport const calculateAPR = (\n  roi: number | string | BigNumber,\n  magnitude: number | string | BigNumber\n) => ppmToDec(roi).minus(1).times(magnitude);\n\nexport const calcUsdPrice = (\n  amount: number | string | BigNumber,\n  price: string | number | BigNumber | null,\n  decimals: number\n) => new BigNumber(shrinkToken(amount, decimals)).times(price ?? 0).toString();\n\nexport const IS_IN_IFRAME = window.self !== window.top;\n\nexport const findPoolByConverter = (\n  converter: string,\n  pools: Pool[],\n  apiPools: APIPool[]\n): APIPool | Pool | undefined => {\n  const poolExists = pools.find((x) => x.converter_dlt_id === converter);\n\n  if (poolExists) {\n    return poolExists;\n  } else {\n    return apiPools.find((x) => x.converter_dlt_id === converter);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}