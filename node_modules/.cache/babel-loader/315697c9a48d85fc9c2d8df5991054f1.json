{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/dual/AddLiquidityDualStakeAmount.tsx\",\n    _s = $RefreshSig$();\n\nimport { TokenInputField } from 'components/tokenInputField/TokenInputField';\nimport { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLiquidityDualStakeAmount = _ref => {\n  _s();\n\n  let {\n    bnt,\n    tkn,\n    tknAmount,\n    setTknAmount,\n    bntAmount,\n    setBntAmount,\n    bntTknRate,\n    errorBalanceBnt,\n    setErrorBalanceBnt,\n    errorBalanceTkn,\n    setErrorBalanceTkn\n  } = _ref;\n  const [bntAmountUsd, setBntAmountUsd] = useState('');\n  const [tknAmountUsd, setTknAmountUsd] = useState('');\n\n  const onBntAmountChange = amount => {\n    setBntAmount(amount);\n\n    if (amount === '') {\n      setTknAmount('');\n      setTknAmountUsd('');\n      return;\n    }\n\n    const tknAmount = new BigNumber(amount).times(bntTknRate).toString();\n    setTknAmount(tknAmount);\n    const tknAmountUsd = new BigNumber(tknAmount).times(tkn.usdPrice).toString();\n    setTknAmountUsd(tknAmountUsd);\n  };\n\n  const onTknAmountChange = amount => {\n    setTknAmount(amount);\n\n    if (amount === '') {\n      setBntAmount('');\n      setBntAmountUsd('');\n      return;\n    }\n\n    const bntAmount = new BigNumber(amount).div(bntTknRate).toString();\n    setBntAmount(bntAmount);\n    const bntAmountUsd = new BigNumber(bntAmount).times(bnt.usdPrice).toString();\n    setBntAmountUsd(bntAmountUsd);\n  };\n\n  useEffect(() => {\n    if (new BigNumber(bntAmount).gt(bnt.balance || 0)) {\n      setErrorBalanceBnt('Insufficient Balance');\n    } else {\n      setErrorBalanceBnt('');\n    }\n\n    if (new BigNumber(tknAmount).gt(tkn.balance || 0)) {\n      setErrorBalanceTkn('Insufficient Balance');\n    } else {\n      setErrorBalanceTkn('');\n    }\n  }, [bntAmount, bnt.balance, setErrorBalanceBnt, tknAmount, tkn.balance, setErrorBalanceTkn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-medium mb-20\",\n      children: \"Enter stake amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(TokenInputField, {\n        input: bntAmount,\n        setInput: amount => onBntAmountChange(amount),\n        amountUsd: bntAmountUsd,\n        setAmountUsd: setBntAmountUsd,\n        token: bnt,\n        selectable: false,\n        border: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), errorBalanceBnt && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 pl-[140px] text-error\",\n        children: errorBalanceBnt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(TokenInputField, {\n        input: tknAmount,\n        setInput: amount => onTknAmountChange(amount),\n        amountUsd: tknAmountUsd,\n        setAmountUsd: setTknAmountUsd,\n        token: tkn,\n        selectable: false,\n        border: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), errorBalanceTkn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 pl-[140px] text-error\",\n        children: errorBalanceTkn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLiquidityDualStakeAmount, \"CgnNkNL1WzEPVQq41rM6Uo7Hc6w=\");\n\n_c = AddLiquidityDualStakeAmount;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidityDualStakeAmount\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/dual/AddLiquidityDualStakeAmount.tsx"],"names":["TokenInputField","useEffect","useState","BigNumber","AddLiquidityDualStakeAmount","bnt","tkn","tknAmount","setTknAmount","bntAmount","setBntAmount","bntTknRate","errorBalanceBnt","setErrorBalanceBnt","errorBalanceTkn","setErrorBalanceTkn","bntAmountUsd","setBntAmountUsd","tknAmountUsd","setTknAmountUsd","onBntAmountChange","amount","times","toString","usdPrice","onTknAmountChange","div","gt","balance"],"mappings":"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","sourcesContent":["import { Token } from 'services/observables/tokens';\nimport { TokenInputField } from 'components/tokenInputField/TokenInputField';\nimport { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\n\ninterface Props {\n  bnt: Token;\n  tkn: Token;\n  tknAmount: string;\n  setTknAmount: Function;\n  bntAmount: string;\n  setBntAmount: Function;\n  bntTknRate: string;\n  errorBalanceBnt: string;\n  setErrorBalanceBnt: Function;\n  errorBalanceTkn: string;\n  setErrorBalanceTkn: Function;\n}\n\nexport const AddLiquidityDualStakeAmount = ({\n  bnt,\n  tkn,\n  tknAmount,\n  setTknAmount,\n  bntAmount,\n  setBntAmount,\n  bntTknRate,\n  errorBalanceBnt,\n  setErrorBalanceBnt,\n  errorBalanceTkn,\n  setErrorBalanceTkn,\n}: Props) => {\n  const [bntAmountUsd, setBntAmountUsd] = useState('');\n  const [tknAmountUsd, setTknAmountUsd] = useState('');\n\n  const onBntAmountChange = (amount: string) => {\n    setBntAmount(amount);\n    if (amount === '') {\n      setTknAmount('');\n      setTknAmountUsd('');\n      return;\n    }\n    const tknAmount = new BigNumber(amount).times(bntTknRate).toString();\n    setTknAmount(tknAmount);\n    const tknAmountUsd = new BigNumber(tknAmount)\n      .times(tkn.usdPrice!)\n      .toString();\n    setTknAmountUsd(tknAmountUsd);\n  };\n\n  const onTknAmountChange = (amount: string) => {\n    setTknAmount(amount);\n    if (amount === '') {\n      setBntAmount('');\n      setBntAmountUsd('');\n      return;\n    }\n    const bntAmount = new BigNumber(amount).div(bntTknRate).toString();\n    setBntAmount(bntAmount);\n    const bntAmountUsd = new BigNumber(bntAmount)\n      .times(bnt.usdPrice!)\n      .toString();\n    setBntAmountUsd(bntAmountUsd);\n  };\n\n  useEffect(() => {\n    if (new BigNumber(bntAmount).gt(bnt.balance || 0)) {\n      setErrorBalanceBnt('Insufficient Balance');\n    } else {\n      setErrorBalanceBnt('');\n    }\n\n    if (new BigNumber(tknAmount).gt(tkn.balance || 0)) {\n      setErrorBalanceTkn('Insufficient Balance');\n    } else {\n      setErrorBalanceTkn('');\n    }\n  }, [\n    bntAmount,\n    bnt.balance,\n    setErrorBalanceBnt,\n    tknAmount,\n    tkn.balance,\n    setErrorBalanceTkn,\n  ]);\n\n  return (\n    <div className=\"px-10\">\n      <div className=\"font-medium mb-20\">Enter stake amount</div>\n      <div className=\"mb-20\">\n        <TokenInputField\n          input={bntAmount}\n          setInput={(amount: string) => onBntAmountChange(amount)}\n          amountUsd={bntAmountUsd}\n          setAmountUsd={setBntAmountUsd}\n          token={bnt}\n          selectable={false}\n          border\n        />\n        {errorBalanceBnt && (\n          <div className=\"mt-5 pl-[140px] text-error\">{errorBalanceBnt}</div>\n        )}\n      </div>\n      <div className=\"mb-20\">\n        <TokenInputField\n          input={tknAmount}\n          setInput={(amount: string) => onTknAmountChange(amount)}\n          amountUsd={tknAmountUsd}\n          setAmountUsd={setTknAmountUsd}\n          token={tkn}\n          selectable={false}\n          border\n        />\n        {errorBalanceTkn && (\n          <div className=\"mt-5 pl-[140px] text-error\">{errorBalanceTkn}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}