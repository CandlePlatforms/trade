{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/countdownTimer/CountdownTimer.tsx\",\n    _s = $RefreshSig$();\n\nimport dayjs from 'dayjs';\nimport { useInterval } from 'hooks/useInterval';\nimport { useState } from 'react';\nimport { formatTime } from 'utils/helperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountdownTimer = _ref => {\n  _s();\n\n  let {\n    date,\n    msgEnded = '',\n    interval = 1000,\n    onEnded\n  } = _ref;\n  const now = dayjs().unix() * 1000;\n  const [countdown, setCountdown] = useState(date ? date - now : -1);\n  const timerEnded = countdown <= 0;\n  useInterval(() => {\n    setCountdown(countdown - interval);\n    if (onEnded && countdown <= interval) onEnded();\n  }, timerEnded ? null : interval);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timerEnded ? msgEnded : formatTime(countdown)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CountdownTimer, \"HrOyhdp/Nvf5o7FchN6Jd0+2YNs=\", false, function () {\n  return [useInterval];\n});\n\n_c = CountdownTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/countdownTimer/CountdownTimer.tsx"],"names":["dayjs","useInterval","useState","formatTime","CountdownTimer","date","msgEnded","interval","onEnded","now","unix","countdown","setCountdown","timerEnded"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AASA,OAAO,MAAMC,cAAc,GAAG,QAKH;AAAA;;AAAA,MALI;AAC7BC,IAAAA,IAD6B;AAE7BC,IAAAA,QAAQ,GAAG,EAFkB;AAG7BC,IAAAA,QAAQ,GAAG,IAHkB;AAI7BC,IAAAA;AAJ6B,GAKJ;AACzB,QAAMC,GAAG,GAAGT,KAAK,GAAGU,IAAR,KAAiB,IAA7B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACG,IAAI,GAAGA,IAAI,GAAGI,GAAV,GAAgB,CAAC,CAAtB,CAA1C;AACA,QAAMI,UAAU,GAAGF,SAAS,IAAI,CAAhC;AAEAV,EAAAA,WAAW,CACT,MAAM;AACJW,IAAAA,YAAY,CAACD,SAAS,GAAGJ,QAAb,CAAZ;AACA,QAAIC,OAAO,IAAIG,SAAS,IAAIJ,QAA5B,EAAsCC,OAAO;AAC9C,GAJQ,EAKTK,UAAU,GAAG,IAAH,GAAUN,QALX,CAAX;AAQA,sBAAO;AAAA,cAAMM,UAAU,GAAGP,QAAH,GAAcH,UAAU,CAACQ,SAAD;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBM;;GAAMP,c;UAUXH,W;;;KAVWG,c","sourcesContent":["import dayjs from 'dayjs';\nimport { useInterval } from 'hooks/useInterval';\nimport { useState } from 'react';\nimport { formatTime } from 'utils/helperFunctions';\n\ninterface CountdownTimerProps {\n  date?: number;\n  msgEnded?: string;\n  interval?: number;\n  onEnded?: () => void;\n}\n\nexport const CountdownTimer = ({\n  date,\n  msgEnded = '',\n  interval = 1000,\n  onEnded,\n}: CountdownTimerProps) => {\n  const now = dayjs().unix() * 1000;\n  const [countdown, setCountdown] = useState(date ? date - now : -1);\n  const timerEnded = countdown <= 0;\n\n  useInterval(\n    () => {\n      setCountdown(countdown - interval);\n      if (onEnded && countdown <= interval) onEnded();\n    },\n    timerEnded ? null : interval\n  );\n\n  return <div>{timerEnded ? msgEnded : formatTime(countdown)}</div>;\n};\n"]},"metadata":{},"sourceType":"module"}