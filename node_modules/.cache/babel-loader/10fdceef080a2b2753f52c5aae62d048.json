{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core';\nimport { UnsupportedNetwork } from 'pages/UnsupportedNetwork';\nimport { LayoutHeader } from 'elements/layoutHeader/LayoutHeader';\nimport { useAutoConnect } from 'services/web3/wallet/hooks';\nimport { setUser } from 'services/observables/user';\nimport { NotificationAlerts } from 'elements/notifications/NotificationAlerts';\nimport { setNetwork } from 'services/observables/network';\nimport { Sidebar } from 'elements/sidebar/Sidebar';\nimport { Slideover } from 'components/slideover/Slideover';\nimport { useDispatch } from 'react-redux';\nimport { setDarkMode, setSlippageTolerance, setUsdToggle } from 'redux/user/user';\nimport { setNotifications } from 'redux/notification/notification';\nimport { useAppSelector } from 'redux/index';\nimport { googleTagManager } from 'services/api/googleTagManager';\nimport { EthNetworks } from 'services/web3/types';\nimport { getDarkModeLS, getNotificationsLS, getSlippageToleranceLS, getUsdToggleLS, setNotificationsLS } from 'utils/localStorage';\nimport { subscribeToObservables } from 'services/observables/triggers';\nimport { isUnsupportedNetwork } from 'utils/helperFunctions';\nimport { MarketingBanner } from './elements/marketingBanner/MarketingBanner';\nimport { keepWSOpen } from 'services/web3';\nimport { Router } from 'pages/Router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    chainId,\n    account\n  } = useWeb3React();\n  useAutoConnect();\n  const unsupportedNetwork = isUnsupportedNetwork(chainId);\n  const [isSidebarMinimized, setIsSidebarMinimized] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const notifications = useAppSelector(state => state.notification.notifications);\n  useEffect(() => {\n    const usd = getUsdToggleLS();\n    if (usd) dispatch(setUsdToggle(usd));\n    const notify = getNotificationsLS();\n    if (notify) dispatch(setNotifications(notify));\n    const slippage = getSlippageToleranceLS();\n    if (slippage) dispatch(setSlippageTolerance(slippage));\n    subscribeToObservables(dispatch);\n    keepWSOpen();\n    const dark = getDarkModeLS();\n    if (dark) dispatch(setDarkMode(dark));\n  }, [dispatch]);\n  useEffect(() => {\n    setNotificationsLS(notifications);\n  }, [notifications]);\n  useEffect(() => {\n    if (chainId) setNetwork(chainId);else setNetwork(EthNetworks.Mainnet);\n  }, [chainId]);\n  useEffect(() => {\n    setUser(account, dispatch);\n    googleTagManager();\n  }, [account, dispatch]);\n  const showBanner = useAppSelector(state => state.user.showBanner);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: 'hidden md:block',\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        isMinimized: isSidebarMinimized,\n        setIsMinimized: setIsSidebarMinimized\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: 'md:hidden',\n      children: /*#__PURE__*/_jsxDEV(Slideover, {\n        isOpen: isSidebarOpen,\n        setIsOpen: setIsSidebarOpen,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full w-[200px]\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            isMinimized: isSidebarMinimized,\n            setIsMinimized: setIsSidebarMinimized,\n            setIsSidebarOpen: setIsSidebarOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LayoutHeader, {\n      isMinimized: isSidebarMinimized,\n      setIsSidebarOpen: setIsSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), unsupportedNetwork ? /*#__PURE__*/_jsxDEV(UnsupportedNetwork, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `md:mr-[30px] pt-[75px] transition-all duration-500 ${isSidebarMinimized ? 'md:ml-[96px] ' : 'md:ml-[230px] '}`,\n      children: [showBanner && /*#__PURE__*/_jsxDEV(MarketingBanner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: `max-w-[1400px] mx-auto mb-30 ${showBanner ? 'pt-40 md:pt-20' : 'pt-20'}`,\n        children: /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NotificationAlerts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"tEFE78j/cB4KXN+WPyH+gbvYi44=\", false, function () {\n  return [useDispatch, useWeb3React, useAutoConnect, useAppSelector, useAppSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/App.tsx"],"names":["useEffect","useState","BrowserRouter","useWeb3React","UnsupportedNetwork","LayoutHeader","useAutoConnect","setUser","NotificationAlerts","setNetwork","Sidebar","Slideover","useDispatch","setDarkMode","setSlippageTolerance","setUsdToggle","setNotifications","useAppSelector","googleTagManager","EthNetworks","getDarkModeLS","getNotificationsLS","getSlippageToleranceLS","getUsdToggleLS","setNotificationsLS","subscribeToObservables","isUnsupportedNetwork","MarketingBanner","keepWSOpen","Router","App","dispatch","chainId","account","unsupportedNetwork","isSidebarMinimized","setIsSidebarMinimized","isSidebarOpen","setIsSidebarOpen","notifications","state","notification","usd","notify","slippage","dark","Mainnet","showBanner","user"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core';\nimport { UnsupportedNetwork } from 'pages/UnsupportedNetwork';\nimport { LayoutHeader } from 'elements/layoutHeader/LayoutHeader';\nimport { useAutoConnect } from 'services/web3/wallet/hooks';\nimport { setUser } from 'services/observables/user';\nimport { NotificationAlerts } from 'elements/notifications/NotificationAlerts';\nimport { setNetwork } from 'services/observables/network';\nimport { Sidebar } from 'elements/sidebar/Sidebar';\nimport { Slideover } from 'components/slideover/Slideover';\nimport { useDispatch } from 'react-redux';\nimport {\n  setDarkMode,\n  setSlippageTolerance,\n  setUsdToggle,\n} from 'redux/user/user';\nimport {\n  Notification,\n  setNotifications,\n} from 'redux/notification/notification';\nimport { useAppSelector } from 'redux/index';\nimport { googleTagManager } from 'services/api/googleTagManager';\nimport { EthNetworks } from 'services/web3/types';\nimport {\n  getDarkModeLS,\n  getNotificationsLS,\n  getSlippageToleranceLS,\n  getUsdToggleLS,\n  setNotificationsLS,\n} from 'utils/localStorage';\nimport { subscribeToObservables } from 'services/observables/triggers';\nimport { isUnsupportedNetwork } from 'utils/helperFunctions';\nimport { MarketingBanner } from './elements/marketingBanner/MarketingBanner';\nimport { keepWSOpen } from 'services/web3';\nimport { Router } from 'pages/Router';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const { chainId, account } = useWeb3React();\n  useAutoConnect();\n  const unsupportedNetwork = isUnsupportedNetwork(chainId);\n  const [isSidebarMinimized, setIsSidebarMinimized] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const notifications = useAppSelector<Notification[]>(\n    (state) => state.notification.notifications\n  );\n\n  useEffect(() => {\n    const usd = getUsdToggleLS();\n    if (usd) dispatch(setUsdToggle(usd));\n\n    const notify = getNotificationsLS();\n    if (notify) dispatch(setNotifications(notify));\n\n    const slippage = getSlippageToleranceLS();\n    if (slippage) dispatch(setSlippageTolerance(slippage));\n\n    subscribeToObservables(dispatch);\n    keepWSOpen();\n\n    const dark = getDarkModeLS();\n    if (dark) dispatch(setDarkMode(dark));\n  }, [dispatch]);\n\n  useEffect(() => {\n    setNotificationsLS(notifications);\n  }, [notifications]);\n\n  useEffect(() => {\n    if (chainId) setNetwork(chainId);\n    else setNetwork(EthNetworks.Mainnet);\n  }, [chainId]);\n\n  useEffect(() => {\n    setUser(account, dispatch);\n    googleTagManager();\n  }, [account, dispatch]);\n\n  const showBanner = useAppSelector<boolean>((state) => state.user.showBanner);\n\n  return (\n    <BrowserRouter>\n      <nav className={'hidden md:block'}>\n        <Sidebar\n          isMinimized={isSidebarMinimized}\n          setIsMinimized={setIsSidebarMinimized}\n        />\n      </nav>\n      <nav className={'md:hidden'}>\n        <Slideover isOpen={isSidebarOpen} setIsOpen={setIsSidebarOpen}>\n          <div className=\"w-full w-[200px]\">\n            <Sidebar\n              isMinimized={isSidebarMinimized}\n              setIsMinimized={setIsSidebarMinimized}\n              setIsSidebarOpen={setIsSidebarOpen}\n            />\n          </div>\n        </Slideover>\n      </nav>\n\n      <LayoutHeader\n        isMinimized={isSidebarMinimized}\n        setIsSidebarOpen={setIsSidebarOpen}\n      />\n\n      {unsupportedNetwork ? (\n        <UnsupportedNetwork />\n      ) : (\n        <div\n          className={`md:mr-[30px] pt-[75px] transition-all duration-500 ${\n            isSidebarMinimized ? 'md:ml-[96px] ' : 'md:ml-[230px] '\n          }`}\n        >\n          {showBanner && <MarketingBanner />}\n          <main\n            className={`max-w-[1400px] mx-auto mb-30 ${\n              showBanner ? 'pt-40 md:pt-20' : 'pt-20'\n            }`}\n          >\n            <Router />\n          </main>\n        </div>\n      )}\n      <NotificationAlerts />\n    </BrowserRouter>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}