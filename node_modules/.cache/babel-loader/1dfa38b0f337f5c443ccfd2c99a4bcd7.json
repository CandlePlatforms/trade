{"ast":null,"code":"import BigNumber from 'bignumber.js';\nexport const calcReserve = (from, to, fee) => {\n  return new BigNumber(to).div(new BigNumber(from)).times(new BigNumber(1).minus(fee));\n};\nexport const expandToken = (amount, precision) => {\n  const trimmed = new BigNumber(amount).toFixed(precision, 1);\n  const inWei = new BigNumber(trimmed).times(new BigNumber(10).pow(precision)).toFixed(0);\n  return inWei;\n};\nexport const shrinkToken = function (amount, precision) {\n  let chopZeros = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const bigNumAmount = new BigNumber(amount);\n  if (bigNumAmount.isEqualTo(0)) return '0';\n  const res = bigNumAmount.div(new BigNumber(10).pow(precision)).toFixed(precision, BigNumber.ROUND_DOWN);\n  return chopZeros ? new BigNumber(res).toString() : res;\n};\nexport const usdByToken = function (token, amount) {\n  let isToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!token || !token.usdPrice || !amount && !token.balance) return '';\n  const input = Number(amount ? amount : token.balance);\n  const tokenPrice = Number(token.usdPrice);\n  return (isToken ? input * tokenPrice : input / tokenPrice).toString();\n};\nexport const calculatePercentageChange = (numberNow, numberBefore) => {\n  return Number(((numberNow / numberBefore - 1) * 100).toFixed(2));\n};\nexport const reduceBySlippage = (value, slippage) => {\n  const bigNumValue = new BigNumber(value);\n  const bigNumSlippage = new BigNumber(slippage);\n  const one = new BigNumber(1);\n  return bigNumValue.times(one.minus(bigNumSlippage)).toString();\n};","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/utils/formulas.ts"],"names":["BigNumber","calcReserve","from","to","fee","div","times","minus","expandToken","amount","precision","trimmed","toFixed","inWei","pow","shrinkToken","chopZeros","bigNumAmount","isEqualTo","res","ROUND_DOWN","toString","usdByToken","token","isToken","usdPrice","balance","input","Number","tokenPrice","calculatePercentageChange","numberNow","numberBefore","reduceBySlippage","value","slippage","bigNumValue","bigNumSlippage","one"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAGA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAeC,EAAf,EAA2BC,GAA3B,KAA8C;AACvE,SAAO,IAAIJ,SAAJ,CAAcG,EAAd,EACJE,GADI,CACA,IAAIL,SAAJ,CAAcE,IAAd,CADA,EAEJI,KAFI,CAEE,IAAIN,SAAJ,CAAc,CAAd,EAAiBO,KAAjB,CAAuBH,GAAvB,CAFF,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMI,WAAW,GAAG,CAACC,MAAD,EAA0BC,SAA1B,KAAgD;AACzE,QAAMC,OAAO,GAAG,IAAIX,SAAJ,CAAcS,MAAd,EAAsBG,OAAtB,CAA8BF,SAA9B,EAAyC,CAAzC,CAAhB;AACA,QAAMG,KAAK,GAAG,IAAIb,SAAJ,CAAcW,OAAd,EACXL,KADW,CACL,IAAIN,SAAJ,CAAc,EAAd,EAAkBc,GAAlB,CAAsBJ,SAAtB,CADK,EAEXE,OAFW,CAEH,CAFG,CAAd;AAGA,SAAOC,KAAP;AACD,CANM;AAQP,OAAO,MAAME,WAAW,GAAG,UACzBN,MADyB,EAEzBC,SAFyB,EAItB;AAAA,MADHM,SACG,uEADS,KACT;AACH,QAAMC,YAAY,GAAG,IAAIjB,SAAJ,CAAcS,MAAd,CAArB;AACA,MAAIQ,YAAY,CAACC,SAAb,CAAuB,CAAvB,CAAJ,EAA+B,OAAO,GAAP;AAC/B,QAAMC,GAAG,GAAGF,YAAY,CACrBZ,GADS,CACL,IAAIL,SAAJ,CAAc,EAAd,EAAkBc,GAAlB,CAAsBJ,SAAtB,CADK,EAETE,OAFS,CAEDF,SAFC,EAEUV,SAAS,CAACoB,UAFpB,CAAZ;AAIA,SAAOJ,SAAS,GAAG,IAAIhB,SAAJ,CAAcmB,GAAd,EAAmBE,QAAnB,EAAH,GAAmCF,GAAnD;AACD,CAZM;AAcP,OAAO,MAAMG,UAAU,GAAG,UACxBC,KADwB,EAExBd,MAFwB,EAIb;AAAA,MADXe,OACW,uEADQ,IACR;AACX,MAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACE,QAAjB,IAA8B,CAAChB,MAAD,IAAW,CAACc,KAAK,CAACG,OAApD,EAA8D,OAAO,EAAP;AAE9D,QAAMC,KAAK,GAAGC,MAAM,CAACnB,MAAM,GAAGA,MAAH,GAAYc,KAAK,CAACG,OAAzB,CAApB;AACA,QAAMG,UAAU,GAAGD,MAAM,CAACL,KAAK,CAACE,QAAP,CAAzB;AACA,SAAO,CAACD,OAAO,GAAGG,KAAK,GAAGE,UAAX,GAAwBF,KAAK,GAAGE,UAAxC,EAAoDR,QAApD,EAAP;AACD,CAVM;AAYP,OAAO,MAAMS,yBAAyB,GAAG,CACvCC,SADuC,EAEvCC,YAFuC,KAG5B;AACX,SAAOJ,MAAM,CAAC,CAAC,CAACG,SAAS,GAAGC,YAAZ,GAA2B,CAA5B,IAAiC,GAAlC,EAAuCpB,OAAvC,CAA+C,CAA/C,CAAD,CAAb;AACD,CALM;AAOP,OAAO,MAAMqB,gBAAgB,GAAG,CAC9BC,KAD8B,EAE9BC,QAF8B,KAG3B;AACH,QAAMC,WAAW,GAAG,IAAIpC,SAAJ,CAAckC,KAAd,CAApB;AACA,QAAMG,cAAc,GAAG,IAAIrC,SAAJ,CAAcmC,QAAd,CAAvB;AACA,QAAMG,GAAG,GAAG,IAAItC,SAAJ,CAAc,CAAd,CAAZ;AACA,SAAOoC,WAAW,CAAC9B,KAAZ,CAAkBgC,GAAG,CAAC/B,KAAJ,CAAU8B,cAAV,CAAlB,EAA6ChB,QAA7C,EAAP;AACD,CARM","sourcesContent":["import BigNumber from 'bignumber.js';\nimport { Token } from 'services/observables/tokens';\n\nexport const calcReserve = (from: string, to: string, fee: BigNumber) => {\n  return new BigNumber(to)\n    .div(new BigNumber(from))\n    .times(new BigNumber(1).minus(fee));\n};\n\nexport const expandToken = (amount: string | number, precision: number) => {\n  const trimmed = new BigNumber(amount).toFixed(precision, 1);\n  const inWei = new BigNumber(trimmed)\n    .times(new BigNumber(10).pow(precision))\n    .toFixed(0);\n  return inWei;\n};\n\nexport const shrinkToken = (\n  amount: string | number | BigNumber,\n  precision: number,\n  chopZeros = false\n) => {\n  const bigNumAmount = new BigNumber(amount);\n  if (bigNumAmount.isEqualTo(0)) return '0';\n  const res = bigNumAmount\n    .div(new BigNumber(10).pow(precision))\n    .toFixed(precision, BigNumber.ROUND_DOWN);\n\n  return chopZeros ? new BigNumber(res).toString() : res;\n};\n\nexport const usdByToken = (\n  token: Token,\n  amount?: string,\n  isToken: boolean = true\n): string => {\n  if (!token || !token.usdPrice || (!amount && !token.balance)) return '';\n\n  const input = Number(amount ? amount : token.balance);\n  const tokenPrice = Number(token.usdPrice);\n  return (isToken ? input * tokenPrice : input / tokenPrice).toString();\n};\n\nexport const calculatePercentageChange = (\n  numberNow: number,\n  numberBefore: number\n): number => {\n  return Number(((numberNow / numberBefore - 1) * 100).toFixed(2));\n};\n\nexport const reduceBySlippage = (\n  value: string | number | BigNumber,\n  slippage: string | number | BigNumber\n) => {\n  const bigNumValue = new BigNumber(value);\n  const bigNumSlippage = new BigNumber(slippage);\n  const one = new BigNumber(1);\n  return bigNumValue.times(one.minus(bigNumSlippage)).toString();\n};\n"]},"metadata":{},"sourceType":"module"}