{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useAppSelector } from 'redux/index';\nimport { useMemo, useState } from 'react';\nimport { ProtectedPositionTableCellLiquidity } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellLiquidity';\nimport { ProtectedPositionTableCellAmount } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellStake';\nimport { ProtectedPositionTableCellFees } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellFees';\nimport { ProtectedPositionTableCellRoi } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellRoi';\nimport { getGroupedPositions } from 'redux/liquidity/liquidity';\nimport { ProtectedPositionTableCellActions } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellActions';\nimport { ProtectedPositionTableCellClaimable } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellClaimable';\nexport const useProtectedPositions = () => {\n  _s();\n\n  const groupedPositions = useAppSelector(getGroupedPositions);\n  const [search, setSearch] = useState('');\n  const data = useMemo(() => groupedPositions.filter(pos => pos.reserveToken.symbol.toLowerCase().includes(search.toLowerCase())), [groupedPositions, search]);\n  const columns = useMemo(() => [{\n    id: 'liquidity',\n    Header: 'Liquidity',\n    accessor: 'pool',\n    Cell: cellData => ProtectedPositionTableCellLiquidity(cellData.row.original),\n    minWidth: 130,\n    sortDescFirst: true\n  }, {\n    id: 'initialStake',\n    accessor: 'initialStake',\n    Header: 'Initial Stake',\n    Cell: cellData => ProtectedPositionTableCellAmount({\n      tknAmount: cellData.value.tknAmount,\n      usdAmount: cellData.value.usdAmount,\n      symbol: cellData.row.original.reserveToken.symbol\n    }),\n    minWidth: 130,\n    sortDescFirst: true,\n    headerClassName: 'justify-center',\n    tooltip: 'Amount of tokens you originally staked in the pool'\n  }, {\n    id: 'protected',\n    accessor: 'protectedAmount',\n    Header: 'Protected',\n    Cell: cellData => ProtectedPositionTableCellAmount({\n      tknAmount: cellData.value.tknAmount,\n      usdAmount: cellData.value.usdAmount,\n      symbol: cellData.row.original.reserveToken.symbol\n    }),\n    minWidth: 130,\n    sortDescFirst: true,\n    headerClassName: 'justify-center',\n    tooltip: 'Amount of tokens you can withdraw with 100% protection + fees'\n  }, {\n    id: 'claimable',\n    accessor: 'claimableAmount',\n    Header: 'Claimable',\n    Cell: cellData => ProtectedPositionTableCellClaimable(cellData.row),\n    minWidth: 130,\n    sortDescFirst: true,\n    headerClassName: 'justify-center',\n    tooltip: 'Amount of tokens you can withdraw right now (assuming you have not earned full protection, this value will be lower than Protected Value)'\n  }, {\n    id: 'feesRewards',\n    accessor: 'rewardsMultiplier',\n    Header: 'Fees & Rewards',\n    Cell: cellData => ProtectedPositionTableCellFees(cellData.row.original),\n    minWidth: 130,\n    sortDescFirst: true,\n    headerClassName: 'justify-center',\n    tooltip: 'Fees and rewards earned by your stake since you entered the pool.'\n  }, {\n    id: 'roi',\n    accessor: 'roi',\n    Header: 'ROI',\n    Cell: cellData => ProtectedPositionTableCellRoi(cellData.row.original),\n    minWidth: 130,\n    disableSortBy: true,\n    headerClassName: 'justify-center',\n    tooltip: 'The ROI of your fully protected value vs. your initial stake.'\n  }, // {\n  //   id: 'apr',\n  //   Header: 'APR',\n  //   accessor: 'aprs',\n  //   Cell: (cellData) => {\n  //     return (\n  //       <div>\n  //         <div>Day {(Number(cellData.value.day) * 100).toFixed(2)} %</div>\n  //         <div>Week {(Number(cellData.value.week) * 100).toFixed(2)} %</div>\n  //       </div>\n  //     );\n  //   },\n  //   minWidth: 130,\n  //   sortDescFirst: true,\n  // },\n  {\n    id: 'expander',\n    accessor: 'subRows',\n    minWidth: 250,\n    width: 250,\n    Cell: cellData => ProtectedPositionTableCellActions(cellData)\n  }], []);\n  return {\n    search,\n    setSearch,\n    data,\n    columns\n  };\n};\n\n_s(useProtectedPositions, \"7pbBnBjAo9mnfUYl1/t6fqitkug=\", false, function () {\n  return [useAppSelector];\n});","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/portfolio/liquidityProtection/protectedPositions/useProtectedPositions.tsx"],"names":["useAppSelector","useMemo","useState","ProtectedPositionTableCellLiquidity","ProtectedPositionTableCellAmount","ProtectedPositionTableCellFees","ProtectedPositionTableCellRoi","getGroupedPositions","ProtectedPositionTableCellActions","ProtectedPositionTableCellClaimable","useProtectedPositions","groupedPositions","search","setSearch","data","filter","pos","reserveToken","symbol","toLowerCase","includes","columns","id","Header","accessor","Cell","cellData","row","original","minWidth","sortDescFirst","tknAmount","value","usdAmount","headerClassName","tooltip","disableSortBy","width"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,aAA/B;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;AAEA,SAASC,mCAAT,QAAoD,oGAApD;AACA,SAASC,gCAAT,QAAiD,gGAAjD;AACA,SAASC,8BAAT,QAA+C,+FAA/C;AACA,SAASC,6BAAT,QAA8C,8FAA9C;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,iCAAT,QAAkD,kGAAlD;AACA,SAASC,mCAAT,QAAoD,oGAApD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AACzC,QAAMC,gBAAgB,GACpBX,cAAc,CAA6BO,mBAA7B,CADhB;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMY,IAAI,GAAGb,OAAO,CAClB,MACEU,gBAAgB,CAACI,MAAjB,CAAyBC,GAAD,IACtBA,GAAG,CAACC,YAAJ,CAAiBC,MAAjB,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CR,MAAM,CAACO,WAAP,EAA/C,CADF,CAFgB,EAKlB,CAACR,gBAAD,EAAmBC,MAAnB,CALkB,CAApB;AAOA,QAAMS,OAAO,GAAGpB,OAAO,CACrB,MAAM,CACJ;AACEqB,IAAAA,EAAE,EAAE,WADN;AAEEC,IAAAA,MAAM,EAAE,WAFV;AAGEC,IAAAA,QAAQ,EAAE,MAHZ;AAIEC,IAAAA,IAAI,EAAGC,QAAD,IACJvB,mCAAmC,CAACuB,QAAQ,CAACC,GAAT,CAAaC,QAAd,CALvC;AAMEC,IAAAA,QAAQ,EAAE,GANZ;AAOEC,IAAAA,aAAa,EAAE;AAPjB,GADI,EAUJ;AACER,IAAAA,EAAE,EAAE,cADN;AAEEE,IAAAA,QAAQ,EAAE,cAFZ;AAGED,IAAAA,MAAM,EAAE,eAHV;AAIEE,IAAAA,IAAI,EAAGC,QAAD,IACJtB,gCAAgC,CAAC;AAC/B2B,MAAAA,SAAS,EAAEL,QAAQ,CAACM,KAAT,CAAeD,SADK;AAE/BE,MAAAA,SAAS,EAAEP,QAAQ,CAACM,KAAT,CAAeC,SAFK;AAG/Bf,MAAAA,MAAM,EAAEQ,QAAQ,CAACC,GAAT,CAAaC,QAAb,CAAsBX,YAAtB,CAAmCC;AAHZ,KAAD,CALpC;AAUEW,IAAAA,QAAQ,EAAE,GAVZ;AAWEC,IAAAA,aAAa,EAAE,IAXjB;AAYEI,IAAAA,eAAe,EAAE,gBAZnB;AAaEC,IAAAA,OAAO,EAAE;AAbX,GAVI,EAyBJ;AACEb,IAAAA,EAAE,EAAE,WADN;AAEEE,IAAAA,QAAQ,EAAE,iBAFZ;AAGED,IAAAA,MAAM,EAAE,WAHV;AAIEE,IAAAA,IAAI,EAAGC,QAAD,IACJtB,gCAAgC,CAAC;AAC/B2B,MAAAA,SAAS,EAAEL,QAAQ,CAACM,KAAT,CAAeD,SADK;AAE/BE,MAAAA,SAAS,EAAEP,QAAQ,CAACM,KAAT,CAAeC,SAFK;AAG/Bf,MAAAA,MAAM,EAAEQ,QAAQ,CAACC,GAAT,CAAaC,QAAb,CAAsBX,YAAtB,CAAmCC;AAHZ,KAAD,CALpC;AAUEW,IAAAA,QAAQ,EAAE,GAVZ;AAWEC,IAAAA,aAAa,EAAE,IAXjB;AAYEI,IAAAA,eAAe,EAAE,gBAZnB;AAaEC,IAAAA,OAAO,EACL;AAdJ,GAzBI,EAyCJ;AACEb,IAAAA,EAAE,EAAE,WADN;AAEEE,IAAAA,QAAQ,EAAE,iBAFZ;AAGED,IAAAA,MAAM,EAAE,WAHV;AAIEE,IAAAA,IAAI,EAAGC,QAAD,IAAcjB,mCAAmC,CAACiB,QAAQ,CAACC,GAAV,CAJzD;AAKEE,IAAAA,QAAQ,EAAE,GALZ;AAMEC,IAAAA,aAAa,EAAE,IANjB;AAOEI,IAAAA,eAAe,EAAE,gBAPnB;AAQEC,IAAAA,OAAO,EACL;AATJ,GAzCI,EAoDJ;AACEb,IAAAA,EAAE,EAAE,aADN;AAEEE,IAAAA,QAAQ,EAAE,mBAFZ;AAGED,IAAAA,MAAM,EAAE,gBAHV;AAIEE,IAAAA,IAAI,EAAGC,QAAD,IACJrB,8BAA8B,CAACqB,QAAQ,CAACC,GAAT,CAAaC,QAAd,CALlC;AAMEC,IAAAA,QAAQ,EAAE,GANZ;AAOEC,IAAAA,aAAa,EAAE,IAPjB;AAQEI,IAAAA,eAAe,EAAE,gBARnB;AASEC,IAAAA,OAAO,EACL;AAVJ,GApDI,EAgEJ;AACEb,IAAAA,EAAE,EAAE,KADN;AAEEE,IAAAA,QAAQ,EAAE,KAFZ;AAGED,IAAAA,MAAM,EAAE,KAHV;AAIEE,IAAAA,IAAI,EAAGC,QAAD,IACJpB,6BAA6B,CAACoB,QAAQ,CAACC,GAAT,CAAaC,QAAd,CALjC;AAMEC,IAAAA,QAAQ,EAAE,GANZ;AAOEO,IAAAA,aAAa,EAAE,IAPjB;AAQEF,IAAAA,eAAe,EAAE,gBARnB;AASEC,IAAAA,OAAO,EACL;AAVJ,GAhEI,EA4EJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEb,IAAAA,EAAE,EAAE,UADN;AAEEE,IAAAA,QAAQ,EAAE,SAFZ;AAGEK,IAAAA,QAAQ,EAAE,GAHZ;AAIEQ,IAAAA,KAAK,EAAE,GAJT;AAKEZ,IAAAA,IAAI,EAAGC,QAAD,IAAclB,iCAAiC,CAACkB,QAAD;AALvD,GA3FI,CADe,EAoGrB,EApGqB,CAAvB;AAuGA,SAAO;AAAEd,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,IAArB;AAA2BO,IAAAA;AAA3B,GAAP;AACD,CApHM;;GAAMX,qB;UAETV,c","sourcesContent":["import { useAppSelector } from 'redux/index';\nimport { ProtectedPositionGrouped } from 'services/web3/protection/positions';\nimport { useMemo, useState } from 'react';\nimport { TableColumn } from 'components/table/DataTable';\nimport { ProtectedPositionTableCellLiquidity } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellLiquidity';\nimport { ProtectedPositionTableCellAmount } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellStake';\nimport { ProtectedPositionTableCellFees } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellFees';\nimport { ProtectedPositionTableCellRoi } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellRoi';\nimport { getGroupedPositions } from 'redux/liquidity/liquidity';\nimport { ProtectedPositionTableCellActions } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellActions';\nimport { ProtectedPositionTableCellClaimable } from 'elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellClaimable';\n\nexport const useProtectedPositions = () => {\n  const groupedPositions =\n    useAppSelector<ProtectedPositionGrouped[]>(getGroupedPositions);\n  const [search, setSearch] = useState('');\n\n  const data = useMemo(\n    () =>\n      groupedPositions.filter((pos) =>\n        pos.reserveToken.symbol.toLowerCase().includes(search.toLowerCase())\n      ),\n    [groupedPositions, search]\n  );\n  const columns = useMemo<TableColumn<ProtectedPositionGrouped>[]>(\n    () => [\n      {\n        id: 'liquidity',\n        Header: 'Liquidity',\n        accessor: 'pool',\n        Cell: (cellData) =>\n          ProtectedPositionTableCellLiquidity(cellData.row.original),\n        minWidth: 130,\n        sortDescFirst: true,\n      },\n      {\n        id: 'initialStake',\n        accessor: 'initialStake',\n        Header: 'Initial Stake',\n        Cell: (cellData) =>\n          ProtectedPositionTableCellAmount({\n            tknAmount: cellData.value.tknAmount,\n            usdAmount: cellData.value.usdAmount,\n            symbol: cellData.row.original.reserveToken.symbol,\n          }),\n        minWidth: 130,\n        sortDescFirst: true,\n        headerClassName: 'justify-center',\n        tooltip: 'Amount of tokens you originally staked in the pool',\n      },\n      {\n        id: 'protected',\n        accessor: 'protectedAmount',\n        Header: 'Protected',\n        Cell: (cellData) =>\n          ProtectedPositionTableCellAmount({\n            tknAmount: cellData.value.tknAmount,\n            usdAmount: cellData.value.usdAmount,\n            symbol: cellData.row.original.reserveToken.symbol,\n          }),\n        minWidth: 130,\n        sortDescFirst: true,\n        headerClassName: 'justify-center',\n        tooltip:\n          'Amount of tokens you can withdraw with 100% protection + fees',\n      },\n      {\n        id: 'claimable',\n        accessor: 'claimableAmount',\n        Header: 'Claimable',\n        Cell: (cellData) => ProtectedPositionTableCellClaimable(cellData.row),\n        minWidth: 130,\n        sortDescFirst: true,\n        headerClassName: 'justify-center',\n        tooltip:\n          'Amount of tokens you can withdraw right now (assuming you have not earned full protection, this value will be lower than Protected Value)',\n      },\n      {\n        id: 'feesRewards',\n        accessor: 'rewardsMultiplier',\n        Header: 'Fees & Rewards',\n        Cell: (cellData) =>\n          ProtectedPositionTableCellFees(cellData.row.original),\n        minWidth: 130,\n        sortDescFirst: true,\n        headerClassName: 'justify-center',\n        tooltip:\n          'Fees and rewards earned by your stake since you entered the pool.',\n      },\n      {\n        id: 'roi',\n        accessor: 'roi',\n        Header: 'ROI',\n        Cell: (cellData) =>\n          ProtectedPositionTableCellRoi(cellData.row.original),\n        minWidth: 130,\n        disableSortBy: true,\n        headerClassName: 'justify-center',\n        tooltip:\n          'The ROI of your fully protected value vs. your initial stake.',\n      },\n      // {\n      //   id: 'apr',\n      //   Header: 'APR',\n      //   accessor: 'aprs',\n      //   Cell: (cellData) => {\n      //     return (\n      //       <div>\n      //         <div>Day {(Number(cellData.value.day) * 100).toFixed(2)} %</div>\n      //         <div>Week {(Number(cellData.value.week) * 100).toFixed(2)} %</div>\n      //       </div>\n      //     );\n      //   },\n      //   minWidth: 130,\n      //   sortDescFirst: true,\n      // },\n      {\n        id: 'expander',\n        accessor: 'subRows',\n        minWidth: 250,\n        width: 250,\n        Cell: (cellData) => ProtectedPositionTableCellActions(cellData),\n      },\n    ],\n    []\n  );\n\n  return { search, setSearch, data, columns };\n};\n"]},"metadata":{},"sourceType":"module"}