{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/portfolio/liquidityProtection/rewards/claim/RewardsClaimCTA.tsx\",\n    _s = $RefreshSig$();\n\nimport { claimRewards } from 'services/web3/protection/rewards';\nimport { StakeRewardsBtn } from 'elements/earn/portfolio/liquidityProtection/rewards/StakeRewardsBtn';\nimport { claimRewardsFailedNotification, claimRewardsNotification } from 'services/notifications/notifications';\nimport { useDispatch } from 'react-redux';\nimport { useNavigation } from 'services/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RewardsClaimCTA = _ref => {\n  _s();\n\n  let {\n    claimableRewards,\n    account\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    pushPortfolio\n  } = useNavigation();\n\n  const handleClaim = async () => {\n    if (account && claimableRewards) {\n      try {\n        const txHash = await claimRewards();\n        claimRewardsNotification(dispatch, txHash, claimableRewards);\n        pushPortfolio();\n      } catch (e) {\n        console.error('Claiming Rewards failed with msg: ', e.message);\n        claimRewardsFailedNotification(dispatch);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StakeRewardsBtn, {\n      buttonLabel: \"Stake my Rewards\",\n      buttonClass: \"btn-primary rounded w-full mt-20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClaim(),\n      className: \"btn-outline-primary rounded w-full mt-10\",\n      disabled: !account,\n      children: \"Withdraw Rewards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RewardsClaimCTA, \"J0tw+n5HNoXTaSJUPei3tjXB0gY=\", false, function () {\n  return [useDispatch, useNavigation];\n});\n\n_c = RewardsClaimCTA;\n\nvar _c;\n\n$RefreshReg$(_c, \"RewardsClaimCTA\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/portfolio/liquidityProtection/rewards/claim/RewardsClaimCTA.tsx"],"names":["claimRewards","StakeRewardsBtn","claimRewardsFailedNotification","claimRewardsNotification","useDispatch","useNavigation","RewardsClaimCTA","claimableRewards","account","dispatch","pushPortfolio","handleClaim","txHash","e","console","error","message"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kCAA7B;AACA,SAASC,eAAT,QAAgC,qEAAhC;AACA,SACEC,8BADF,EAEEC,wBAFF,QAGO,sCAHP;AAIA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;AAOA,OAAO,MAAMC,eAAe,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAyC;AACvE,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAoBL,aAAa,EAAvC;;AAEA,QAAMM,WAAW,GAAG,YAAY;AAC9B,QAAIH,OAAO,IAAID,gBAAf,EAAiC;AAC/B,UAAI;AACF,cAAMK,MAAM,GAAG,MAAMZ,YAAY,EAAjC;AACAG,QAAAA,wBAAwB,CAACM,QAAD,EAAWG,MAAX,EAAmBL,gBAAnB,CAAxB;AACAG,QAAAA,aAAa;AACd,OAJD,CAIE,OAAOG,CAAP,EAAe;AACfC,QAAAA,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAoDF,CAAC,CAACG,OAAtD;AACAd,QAAAA,8BAA8B,CAACO,QAAD,CAA9B;AACD;AACF;AACF,GAXD;;AAaA,sBACE;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,WAAW,EAAC,kBADd;AAEE,MAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,OAAO,EAAE,MAAME,WAAW,EAD5B;AAEE,MAAA,SAAS,EAAC,0CAFZ;AAGE,MAAA,QAAQ,EAAE,CAACH,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAeD,CAhCM;;GAAMF,e;UACMF,W,EACSC,a;;;KAFfC,e","sourcesContent":["import { claimRewards } from 'services/web3/protection/rewards';\nimport { StakeRewardsBtn } from 'elements/earn/portfolio/liquidityProtection/rewards/StakeRewardsBtn';\nimport {\n  claimRewardsFailedNotification,\n  claimRewardsNotification,\n} from 'services/notifications/notifications';\nimport { useDispatch } from 'react-redux';\nimport { useNavigation } from 'services/router';\n\ninterface Props {\n  claimableRewards: string | null;\n  account?: string | null;\n}\n\nexport const RewardsClaimCTA = ({ claimableRewards, account }: Props) => {\n  const dispatch = useDispatch();\n  const { pushPortfolio } = useNavigation();\n\n  const handleClaim = async () => {\n    if (account && claimableRewards) {\n      try {\n        const txHash = await claimRewards();\n        claimRewardsNotification(dispatch, txHash, claimableRewards);\n        pushPortfolio();\n      } catch (e: any) {\n        console.error('Claiming Rewards failed with msg: ', e.message);\n        claimRewardsFailedNotification(dispatch);\n      }\n    }\n  };\n\n  return (\n    <>\n      <StakeRewardsBtn\n        buttonLabel=\"Stake my Rewards\"\n        buttonClass=\"btn-primary rounded w-full mt-20\"\n      />\n      <button\n        onClick={() => handleClaim()}\n        className=\"btn-outline-primary rounded w-full mt-10\"\n        disabled={!account}\n      >\n        Withdraw Rewards\n      </button>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}