{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/single/AddLiquiditySingleCTA.tsx\",\n    _s = $RefreshSig$();\n\nimport { openWalletModal } from 'redux/user/user';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from 'redux/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLiquiditySingleCTA = _ref => {\n  _s();\n\n  let {\n    onStart,\n    amount,\n    errorMsg\n  } = _ref;\n  const dispatch = useDispatch();\n  const account = useAppSelector(state => state.user.account);\n\n  const button = () => {\n    if (errorMsg) {\n      return {\n        label: errorMsg,\n        disabled: true,\n        variant: 'btn-error'\n      };\n    }\n\n    if (!amount) {\n      return {\n        label: 'Enter amount',\n        disabled: true,\n        variant: 'btn-primary'\n      };\n    } else {\n      return {\n        label: 'Stake and Protect',\n        disabled: false,\n        variant: 'btn-primary'\n      };\n    }\n  };\n\n  const onClick = () => {\n    if (!account) {\n      dispatch(openWalletModal(true));\n    } else {\n      onStart();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onClick(),\n    disabled: button().disabled,\n    className: `${button().variant} rounded w-full`,\n    children: button().label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLiquiditySingleCTA, \"0Ymbqc8+S6cUdlw96ppN2WWq8MM=\", false, function () {\n  return [useDispatch, useAppSelector];\n});\n\n_c = AddLiquiditySingleCTA;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquiditySingleCTA\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/single/AddLiquiditySingleCTA.tsx"],"names":["openWalletModal","useDispatch","useAppSelector","AddLiquiditySingleCTA","onStart","amount","errorMsg","dispatch","account","state","user","button","label","disabled","variant","onClick"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,iBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAQA,OAAO,MAAMC,qBAAqB,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,GAAyC;AAC7E,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGN,cAAc,CAC3BO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OADM,CAA9B;;AAIA,QAAMG,MAAM,GAAG,MAAM;AACnB,QAAIL,QAAJ,EAAc;AACZ,aAAO;AAAEM,QAAAA,KAAK,EAAEN,QAAT;AAAmBO,QAAAA,QAAQ,EAAE,IAA7B;AAAmCC,QAAAA,OAAO,EAAE;AAA5C,OAAP;AACD;;AACD,QAAI,CAACT,MAAL,EAAa;AACX,aAAO;AAAEO,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,QAAQ,EAAE,IAAnC;AAAyCC,QAAAA,OAAO,EAAE;AAAlD,OAAP;AACD,KAFD,MAEO;AACL,aAAO;AACLF,QAAAA,KAAK,EAAE,mBADF;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;AAKD;AACF,GAbD;;AAeA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAI,CAACP,OAAL,EAAc;AACZD,MAAAA,QAAQ,CAACP,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,KAFD,MAEO;AACLI,MAAAA,OAAO;AACR;AACF,GAND;;AAQA,sBACE;AACE,IAAA,OAAO,EAAE,MAAMW,OAAO,EADxB;AAEE,IAAA,QAAQ,EAAEJ,MAAM,GAAGE,QAFrB;AAGE,IAAA,SAAS,EAAG,GAAEF,MAAM,GAAGG,OAAQ,iBAHjC;AAAA,cAKGH,MAAM,GAAGC;AALZ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtCM;;GAAMT,qB;UACMF,W,EACDC,c;;;KAFLC,qB","sourcesContent":["import { openWalletModal } from 'redux/user/user';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from 'redux/index';\n\ninterface Props {\n  onStart: Function;\n  amount: string;\n  errorMsg: string;\n}\n\nexport const AddLiquiditySingleCTA = ({ onStart, amount, errorMsg }: Props) => {\n  const dispatch = useDispatch();\n  const account = useAppSelector<string | undefined>(\n    (state) => state.user.account\n  );\n\n  const button = () => {\n    if (errorMsg) {\n      return { label: errorMsg, disabled: true, variant: 'btn-error' };\n    }\n    if (!amount) {\n      return { label: 'Enter amount', disabled: true, variant: 'btn-primary' };\n    } else {\n      return {\n        label: 'Stake and Protect',\n        disabled: false,\n        variant: 'btn-primary',\n      };\n    }\n  };\n\n  const onClick = () => {\n    if (!account) {\n      dispatch(openWalletModal(true));\n    } else {\n      onStart();\n    }\n  };\n\n  return (\n    <button\n      onClick={() => onClick()}\n      disabled={button().disabled}\n      className={`${button().variant} rounded w-full`}\n    >\n      {button().label}\n    </button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}