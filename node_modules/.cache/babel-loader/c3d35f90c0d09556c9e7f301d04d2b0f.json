{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/swapInsights/InsightRow.tsx\";\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport { Speedometer } from './Speedometer';\nimport { InsightCard } from 'elements/swapInsights/InsightCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InsightRow = _ref => {\n  var _token$usdPrice;\n\n  let {\n    token,\n    data\n  } = _ref;\n  const cards = [data && data.inOutOfTheMoney ? {\n    label: 'Holders making money at the current price',\n    tooltip: 'Shows what percentage of addresses holding this crypto-asset are making profits (in the money), breaking even (at the money) and losing money (out of the money) given the current market price.',\n    percentages: [{\n      color: 'success',\n      decPercent: data.inOutOfTheMoney.in\n    }, {\n      color: 'grey-3',\n      decPercent: data.inOutOfTheMoney.between\n    }, {\n      color: 'error',\n      decPercent: data.inOutOfTheMoney.out\n    }]\n  } : null, data && data.concentration ? {\n    label: 'Concentration by large holders',\n    tooltip: 'The total holdings of whales and Investors that own more than 0.1% of the circulating supply',\n    percentages: [{\n      color: 'primary',\n      decPercent: data.concentration\n    }, {\n      color: 'grey-3',\n      decPercent: 1 - data.concentration\n    }]\n  } : null, data && data.byTimeHeldComposition ? {\n    label: 'Holders composition by time held',\n    tooltip: 'Shows ownership distribution by time held. A Hodler (holding this crypto for over a year), a Cruiser (holding for more than a month but less than a year) or a Trader (holding for less than a month).',\n    percentages: [{\n      color: 'primary',\n      decPercent: data.byTimeHeldComposition.cruiser\n    }, {\n      color: 'error',\n      decPercent: data.byTimeHeldComposition.trader\n    }, {\n      color: 'success',\n      decPercent: data.byTimeHeldComposition.hodler\n    }]\n  } : null];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-9 py-24 px-4 gap-x-40 border-t dark:border-blue-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-3\",\n      children: /*#__PURE__*/_jsxDEV(Speedometer, {\n        summary: data ? data.summary : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-between col-span-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center col-span-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rounded-full h-20 w-20 bg-grey-2\",\n          src: token.logoURI,\n          alt: \"Token Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-20 font-medium ml-5\",\n          children: token.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-14 ml-10\",\n          children: [\"Price \", prettifyNumber((_token$usdPrice = token.usdPrice) !== null && _token$usdPrice !== void 0 ? _token$usdPrice : 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[138px] col-span-3 gap-8 grid grid-cols-3\",\n        children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(InsightCard, {\n          data: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = InsightRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"InsightRow\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/swapInsights/InsightRow.tsx"],"names":["prettifyNumber","Speedometer","InsightCard","InsightRow","token","data","cards","inOutOfTheMoney","label","tooltip","percentages","color","decPercent","in","between","out","concentration","byTimeHeldComposition","cruiser","trader","hodler","summary","logoURI","symbol","usdPrice","map","card","index"],"mappings":"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","sourcesContent":["import { prettifyNumber } from 'utils/helperFunctions';\nimport { Speedometer } from './Speedometer';\nimport { IntoTheBlock } from 'services/api/intoTheBlock';\nimport { Token } from 'services/observables/tokens';\nimport { InsightCard } from 'elements/swapInsights/InsightCard';\n\nexport const InsightRow = ({\n  token,\n  data,\n}: {\n  token: Token;\n  data?: IntoTheBlock;\n}) => {\n  const cards = [\n    data && data.inOutOfTheMoney\n      ? {\n          label: 'Holders making money at the current price',\n          tooltip:\n            'Shows what percentage of addresses holding this crypto-asset are making profits (in the money), breaking even (at the money) and losing money (out of the money) given the current market price.',\n          percentages: [\n            { color: 'success', decPercent: data.inOutOfTheMoney.in },\n            {\n              color: 'grey-3',\n              decPercent: data.inOutOfTheMoney.between,\n            },\n            { color: 'error', decPercent: data.inOutOfTheMoney.out },\n          ],\n        }\n      : null,\n    data && data.concentration\n      ? {\n          label: 'Concentration by large holders',\n          tooltip:\n            'The total holdings of whales and Investors that own more than 0.1% of the circulating supply',\n          percentages: [\n            { color: 'primary', decPercent: data.concentration },\n            { color: 'grey-3', decPercent: 1 - data.concentration },\n          ],\n        }\n      : null,\n    data && data.byTimeHeldComposition\n      ? {\n          label: 'Holders composition by time held',\n          tooltip:\n            'Shows ownership distribution by time held. A Hodler (holding this crypto for over a year), a Cruiser (holding for more than a month but less than a year) or a Trader (holding for less than a month).',\n          percentages: [\n            {\n              color: 'primary',\n              decPercent: data.byTimeHeldComposition.cruiser,\n            },\n            {\n              color: 'error',\n              decPercent: data.byTimeHeldComposition.trader,\n            },\n            {\n              color: 'success',\n              decPercent: data.byTimeHeldComposition.hodler,\n            },\n          ],\n        }\n      : null,\n  ];\n\n  return (\n    <div className=\"grid grid-cols-9 py-24 px-4 gap-x-40 border-t dark:border-blue-1\">\n      <div className=\"col-span-3\">\n        <Speedometer summary={data ? data.summary : null} />\n      </div>\n      <div className=\"flex flex-col justify-between col-span-6\">\n        <div className=\"flex items-center col-span-6\">\n          <img\n            className=\"rounded-full h-20 w-20 bg-grey-2\"\n            src={token.logoURI}\n            alt=\"Token Logo\"\n          />\n          <div className=\"text-20 font-medium ml-5\">{token.symbol}</div>\n          <div className=\"text-14 ml-10\">\n            Price {prettifyNumber(token.usdPrice ?? 0, true)}\n          </div>\n        </div>\n        <div className=\"h-[138px] col-span-3 gap-8 grid grid-cols-3\">\n          {cards.map((card, index) => (\n            <InsightCard key={index} data={card} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}