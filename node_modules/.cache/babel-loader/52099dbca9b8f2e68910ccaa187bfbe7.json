{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyCTA.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { openWalletModal } from 'redux/user/user';\nimport { useApproveModal } from 'hooks/useApproveModal';\nimport { addLiquidity } from 'services/web3/liquidity/liquidity';\nimport { addLiquidityFailedNotification, addLiquidityNotification, rejectNotification } from 'services/notifications/notifications';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport { useCallback } from 'react';\nimport { useNavigation } from 'services/router';\nimport { ConversionEvents, sendLiquidityApprovedEvent, sendLiquidityEvent, sendLiquidityFailEvent, sendLiquiditySuccessEvent, setCurrentLiquidity } from '../../../../../services/api/googleTagManager';\nimport { useAppSelector } from '../../../../../redux';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddLiquidityEmptyCTA = _ref => {\n  _s();\n\n  let {\n    pool,\n    bnt,\n    tkn,\n    amountBnt,\n    amountTkn,\n    errorMsg\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    chainId\n  } = useWeb3React();\n  const account = useAppSelector(state => state.user.account);\n  const {\n    pushPortfolio\n  } = useNavigation();\n  const fiatToggle = useAppSelector(state => state.user.usdToggle);\n  const handleAddLiquidity = useCallback(async () => {\n    const cleanTkn = prettifyNumber(amountTkn);\n    const cleanBnt = prettifyNumber(amountBnt);\n    let transactionId;\n    await addLiquidity(amountBnt, bnt, amountTkn, tkn, pool.converter_dlt_id, txHash => {\n      transactionId = txHash;\n      addLiquidityNotification(dispatch, txHash, cleanTkn, tkn.symbol, cleanBnt, bnt.symbol, pool.name);\n    }, () => {\n      sendLiquiditySuccessEvent(transactionId);\n      if (window.location.pathname.includes(pool.pool_dlt_id)) pushPortfolio();\n    }, () => {\n      sendLiquidityFailEvent('User rejected transaction');\n      rejectNotification(dispatch);\n    }, errorMsg => {\n      sendLiquidityFailEvent(errorMsg);\n      addLiquidityFailedNotification(dispatch, cleanTkn, tkn.symbol, cleanBnt, bnt.symbol, pool.name);\n    });\n  }, [amountTkn, tkn, amountBnt, bnt, pool, pushPortfolio, dispatch]);\n  const [onStart, ModalApprove] = useApproveModal([{\n    amount: amountBnt,\n    token: bnt\n  }, {\n    amount: amountTkn,\n    token: tkn\n  }], handleAddLiquidity, pool.converter_dlt_id, sendLiquidityEvent, sendLiquidityApprovedEvent);\n\n  const button = () => {\n    if (errorMsg) {\n      return {\n        label: errorMsg,\n        disabled: true,\n        variant: 'btn-error'\n      };\n    }\n\n    if (!amountBnt || !amountTkn) {\n      return {\n        label: 'Enter amount',\n        disabled: true,\n        variant: 'btn-primary'\n      };\n    } else {\n      return {\n        label: 'Supply',\n        disabled: false,\n        variant: 'btn-primary'\n      };\n    }\n  };\n\n  const onClick = () => {\n    if (!account) {\n      dispatch(openWalletModal(true));\n    } else {\n      var _tkn$usdPrice, _bnt$usdPrice;\n\n      const tknAmountUsd = new BigNumber(amountTkn).times((_tkn$usdPrice = tkn.usdPrice) !== null && _tkn$usdPrice !== void 0 ? _tkn$usdPrice : 0).toString();\n      const bntAmountUsd = new BigNumber(amountBnt).times((_bnt$usdPrice = bnt.usdPrice) !== null && _bnt$usdPrice !== void 0 ? _bnt$usdPrice : 0).toString();\n      setCurrentLiquidity('Deposit Dual', chainId, pool.name, tkn.symbol, amountTkn, tknAmountUsd, amountBnt, bntAmountUsd, fiatToggle);\n      sendLiquidityEvent(ConversionEvents.click);\n      onStart();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClick(),\n      disabled: button().disabled,\n      className: `${button().variant} rounded w-full mt-20`,\n      children: button().label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), ModalApprove]\n  }, void 0, true);\n};\n\n_s(AddLiquidityEmptyCTA, \"cyTWPqA4FCwiLaqPUKQDh4bQ8Kk=\", false, function () {\n  return [useDispatch, useWeb3React, useAppSelector, useNavigation, useAppSelector, useApproveModal];\n});\n\n_c = AddLiquidityEmptyCTA;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidityEmptyCTA\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyCTA.tsx"],"names":["useDispatch","openWalletModal","useApproveModal","addLiquidity","addLiquidityFailedNotification","addLiquidityNotification","rejectNotification","prettifyNumber","useCallback","useNavigation","ConversionEvents","sendLiquidityApprovedEvent","sendLiquidityEvent","sendLiquidityFailEvent","sendLiquiditySuccessEvent","setCurrentLiquidity","useAppSelector","BigNumber","useWeb3React","AddLiquidityEmptyCTA","pool","bnt","tkn","amountBnt","amountTkn","errorMsg","dispatch","chainId","account","state","user","pushPortfolio","fiatToggle","usdToggle","handleAddLiquidity","cleanTkn","cleanBnt","transactionId","converter_dlt_id","txHash","symbol","name","window","location","pathname","includes","pool_dlt_id","onStart","ModalApprove","amount","token","button","label","disabled","variant","onClick","tknAmountUsd","times","usdPrice","toString","bntAmountUsd","click"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SACEC,8BADF,EAEEC,wBAFF,EAGEC,kBAHF,QAIO,sCAJP;AAKA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SACEC,gBADF,EAEEC,0BAFF,EAGEC,kBAHF,EAIEC,sBAJF,EAKEC,yBALF,EAMEC,mBANF,QAOO,8CAPP;AAQA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAWA,OAAO,MAAMC,oBAAoB,GAAG,QAOvB;AAAA;;AAAA,MAPwB;AACnCC,IAAAA,IADmC;AAEnCC,IAAAA,GAFmC;AAGnCC,IAAAA,GAHmC;AAInCC,IAAAA,SAJmC;AAKnCC,IAAAA,SALmC;AAMnCC,IAAAA;AANmC,GAOxB;AACX,QAAMC,QAAQ,GAAG1B,WAAW,EAA5B;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAcT,YAAY,EAAhC;AACA,QAAMU,OAAO,GAAGZ,cAAc,CAC3Ba,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OADM,CAA9B;AAGA,QAAM;AAAEG,IAAAA;AAAF,MAAoBtB,aAAa,EAAvC;AACA,QAAMuB,UAAU,GAAGhB,cAAc,CAAWa,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWG,SAAhC,CAAjC;AAEA,QAAMC,kBAAkB,GAAG1B,WAAW,CAAC,YAAY;AACjD,UAAM2B,QAAQ,GAAG5B,cAAc,CAACiB,SAAD,CAA/B;AACA,UAAMY,QAAQ,GAAG7B,cAAc,CAACgB,SAAD,CAA/B;AACA,QAAIc,aAAJ;AACA,UAAMlC,YAAY,CAChBoB,SADgB,EAEhBF,GAFgB,EAGhBG,SAHgB,EAIhBF,GAJgB,EAKhBF,IAAI,CAACkB,gBALW,EAMfC,MAAD,IAAoB;AAClBF,MAAAA,aAAa,GAAGE,MAAhB;AACAlC,MAAAA,wBAAwB,CACtBqB,QADsB,EAEtBa,MAFsB,EAGtBJ,QAHsB,EAItBb,GAAG,CAACkB,MAJkB,EAKtBJ,QALsB,EAMtBf,GAAG,CAACmB,MANkB,EAOtBpB,IAAI,CAACqB,IAPiB,CAAxB;AASD,KAjBe,EAkBhB,MAAM;AACJ3B,MAAAA,yBAAyB,CAACuB,aAAD,CAAzB;AACA,UAAIK,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,QAAzB,CAAkCzB,IAAI,CAAC0B,WAAvC,CAAJ,EACEf,aAAa;AAChB,KAtBe,EAuBhB,MAAM;AACJlB,MAAAA,sBAAsB,CAAC,2BAAD,CAAtB;AACAP,MAAAA,kBAAkB,CAACoB,QAAD,CAAlB;AACD,KA1Be,EA2BfD,QAAD,IAAc;AACZZ,MAAAA,sBAAsB,CAACY,QAAD,CAAtB;AACArB,MAAAA,8BAA8B,CAC5BsB,QAD4B,EAE5BS,QAF4B,EAG5Bb,GAAG,CAACkB,MAHwB,EAI5BJ,QAJ4B,EAK5Bf,GAAG,CAACmB,MALwB,EAM5BpB,IAAI,CAACqB,IANuB,CAA9B;AAQD,KArCe,CAAlB;AAuCD,GA3CqC,EA2CnC,CAACjB,SAAD,EAAYF,GAAZ,EAAiBC,SAAjB,EAA4BF,GAA5B,EAAiCD,IAAjC,EAAuCW,aAAvC,EAAsDL,QAAtD,CA3CmC,CAAtC;AA6CA,QAAM,CAACqB,OAAD,EAAUC,YAAV,IAA0B9C,eAAe,CAC7C,CACE;AAAE+C,IAAAA,MAAM,EAAE1B,SAAV;AAAqB2B,IAAAA,KAAK,EAAE7B;AAA5B,GADF,EAEE;AAAE4B,IAAAA,MAAM,EAAEzB,SAAV;AAAqB0B,IAAAA,KAAK,EAAE5B;AAA5B,GAFF,CAD6C,EAK7CY,kBAL6C,EAM7Cd,IAAI,CAACkB,gBANwC,EAO7C1B,kBAP6C,EAQ7CD,0BAR6C,CAA/C;;AAWA,QAAMwC,MAAM,GAAG,MAAM;AACnB,QAAI1B,QAAJ,EAAc;AACZ,aAAO;AAAE2B,QAAAA,KAAK,EAAE3B,QAAT;AAAmB4B,QAAAA,QAAQ,EAAE,IAA7B;AAAmCC,QAAAA,OAAO,EAAE;AAA5C,OAAP;AACD;;AACD,QAAI,CAAC/B,SAAD,IAAc,CAACC,SAAnB,EAA8B;AAC5B,aAAO;AACL4B,QAAAA,KAAK,EAAE,cADF;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;AAKD,KAND,MAMO;AACL,aAAO;AAAEF,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,QAAQ,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAE;AAA7C,OAAP;AACD;AACF,GAbD;;AAeA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAI,CAAC3B,OAAL,EAAc;AACZF,MAAAA,QAAQ,CAACzB,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,KAFD,MAEO;AAAA;;AACL,YAAMuD,YAAY,GAAG,IAAIvC,SAAJ,CAAcO,SAAd,EAClBiC,KADkB,kBACZnC,GAAG,CAACoC,QADQ,yDACI,CADJ,EAElBC,QAFkB,EAArB;AAGA,YAAMC,YAAY,GAAG,IAAI3C,SAAJ,CAAcM,SAAd,EAClBkC,KADkB,kBACZpC,GAAG,CAACqC,QADQ,yDACI,CADJ,EAElBC,QAFkB,EAArB;AAGA5C,MAAAA,mBAAmB,CACjB,cADiB,EAEjBY,OAFiB,EAGjBP,IAAI,CAACqB,IAHY,EAIjBnB,GAAG,CAACkB,MAJa,EAKjBhB,SALiB,EAMjBgC,YANiB,EAOjBjC,SAPiB,EAQjBqC,YARiB,EASjB5B,UATiB,CAAnB;AAWApB,MAAAA,kBAAkB,CAACF,gBAAgB,CAACmD,KAAlB,CAAlB;AACAd,MAAAA,OAAO;AACR;AACF,GAxBD;;AA0BA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAMQ,OAAO,EADxB;AAEE,MAAA,QAAQ,EAAEJ,MAAM,GAAGE,QAFrB;AAGE,MAAA,SAAS,EAAG,GAAEF,MAAM,GAAGG,OAAQ,uBAHjC;AAAA,gBAKGH,MAAM,GAAGC;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,EAQGJ,YARH;AAAA,kBADF;AAYD,CA7HM;;GAAM7B,oB;UAQMnB,W,EACGkB,Y,EACJF,c,EAGUP,a,EACPO,c,EA+Cad,e;;;KA7DrBiB,oB","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { openWalletModal } from 'redux/user/user';\nimport { useApproveModal } from 'hooks/useApproveModal';\nimport { Pool, Token } from 'services/observables/tokens';\nimport { addLiquidity } from 'services/web3/liquidity/liquidity';\nimport {\n  addLiquidityFailedNotification,\n  addLiquidityNotification,\n  rejectNotification,\n} from 'services/notifications/notifications';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport { useCallback } from 'react';\nimport { useNavigation } from 'services/router';\nimport {\n  ConversionEvents,\n  sendLiquidityApprovedEvent,\n  sendLiquidityEvent,\n  sendLiquidityFailEvent,\n  sendLiquiditySuccessEvent,\n  setCurrentLiquidity,\n} from '../../../../../services/api/googleTagManager';\nimport { useAppSelector } from '../../../../../redux';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\n\ninterface Props {\n  pool: Pool;\n  bnt: Token;\n  tkn: Token;\n  amountBnt: string;\n  amountTkn: string;\n  errorMsg?: string;\n}\n\nexport const AddLiquidityEmptyCTA = ({\n  pool,\n  bnt,\n  tkn,\n  amountBnt,\n  amountTkn,\n  errorMsg,\n}: Props) => {\n  const dispatch = useDispatch();\n  const { chainId } = useWeb3React();\n  const account = useAppSelector<string | undefined>(\n    (state) => state.user.account\n  );\n  const { pushPortfolio } = useNavigation();\n  const fiatToggle = useAppSelector<boolean>((state) => state.user.usdToggle);\n\n  const handleAddLiquidity = useCallback(async () => {\n    const cleanTkn = prettifyNumber(amountTkn);\n    const cleanBnt = prettifyNumber(amountBnt);\n    let transactionId: string;\n    await addLiquidity(\n      amountBnt,\n      bnt,\n      amountTkn,\n      tkn,\n      pool.converter_dlt_id,\n      (txHash: string) => {\n        transactionId = txHash;\n        addLiquidityNotification(\n          dispatch,\n          txHash,\n          cleanTkn,\n          tkn.symbol,\n          cleanBnt,\n          bnt.symbol,\n          pool.name\n        );\n      },\n      () => {\n        sendLiquiditySuccessEvent(transactionId);\n        if (window.location.pathname.includes(pool.pool_dlt_id))\n          pushPortfolio();\n      },\n      () => {\n        sendLiquidityFailEvent('User rejected transaction');\n        rejectNotification(dispatch);\n      },\n      (errorMsg) => {\n        sendLiquidityFailEvent(errorMsg);\n        addLiquidityFailedNotification(\n          dispatch,\n          cleanTkn,\n          tkn.symbol,\n          cleanBnt,\n          bnt.symbol,\n          pool.name\n        );\n      }\n    );\n  }, [amountTkn, tkn, amountBnt, bnt, pool, pushPortfolio, dispatch]);\n\n  const [onStart, ModalApprove] = useApproveModal(\n    [\n      { amount: amountBnt, token: bnt },\n      { amount: amountTkn, token: tkn },\n    ],\n    handleAddLiquidity,\n    pool.converter_dlt_id,\n    sendLiquidityEvent,\n    sendLiquidityApprovedEvent\n  );\n\n  const button = () => {\n    if (errorMsg) {\n      return { label: errorMsg, disabled: true, variant: 'btn-error' };\n    }\n    if (!amountBnt || !amountTkn) {\n      return {\n        label: 'Enter amount',\n        disabled: true,\n        variant: 'btn-primary',\n      };\n    } else {\n      return { label: 'Supply', disabled: false, variant: 'btn-primary' };\n    }\n  };\n\n  const onClick = () => {\n    if (!account) {\n      dispatch(openWalletModal(true));\n    } else {\n      const tknAmountUsd = new BigNumber(amountTkn)\n        .times(tkn.usdPrice ?? 0)\n        .toString();\n      const bntAmountUsd = new BigNumber(amountBnt)\n        .times(bnt.usdPrice ?? 0)\n        .toString();\n      setCurrentLiquidity(\n        'Deposit Dual',\n        chainId,\n        pool.name,\n        tkn.symbol,\n        amountTkn,\n        tknAmountUsd,\n        amountBnt,\n        bntAmountUsd,\n        fiatToggle\n      );\n      sendLiquidityEvent(ConversionEvents.click);\n      onStart();\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => onClick()}\n        disabled={button().disabled}\n        className={`${button().variant} rounded w-full mt-20`}\n      >\n        {button().label}\n      </button>\n      {ModalApprove}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}