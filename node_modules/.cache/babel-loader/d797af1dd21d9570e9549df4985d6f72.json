{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/tokenInputField/TokenInputField.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { classNameGenerator, sanitizeNumberInput } from 'utils/pureFunctions';\nimport { SearchableTokenList } from 'components/searchableTokenList/SearchableTokenList';\nimport { ReactComponent as IconChevronDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/chevronDown.svg\";\nimport 'components/tokenInputField/TokenInputField.css';\nimport 'components/inputField/InputField.css';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport BigNumber from 'bignumber.js';\nimport { Image } from 'components/image/Image';\nimport { useAppSelector } from 'redux/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TokenInputField = _ref => {\n  _s();\n\n  var _token$usdPrice;\n\n  let {\n    dataCy,\n    label,\n    border,\n    selectable,\n    token,\n    setToken,\n    input,\n    setInput,\n    amountUsd,\n    setAmountUsd,\n    onChange,\n    disabled,\n    debounce,\n    startEmpty,\n    errorMsg,\n    usdSlippage,\n    fieldBalance,\n    excludedTokens = [],\n    includedTokens = [],\n    isLoading,\n    balanceLabel = 'Balance'\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const balance = fieldBalance ? fieldBalance : token ? token.balance : null;\n  const balanceUsd = token && balance ? new BigNumber(balance).times((_token$usdPrice = token.usdPrice) !== null && _token$usdPrice !== void 0 ? _token$usdPrice : 0).toString() : null;\n  const toggle = useAppSelector(state => state.user.usdToggle);\n  const loadingBalances = useAppSelector(state => state.user.loadingBalances);\n  const tokens = useAppSelector(state => state.bancor.tokens);\n\n  const onInputChange = (text, token) => {\n    text = sanitizeNumberInput(text);\n\n    if (toggle) {\n      const tokenAmount = sanitizeNumberInput(new BigNumber(text).div(token === null || token === void 0 ? void 0 : token.usdPrice).toString(), token === null || token === void 0 ? void 0 : token.decimals);\n      if (setAmountUsd) setAmountUsd(text !== 'NaN' ? text : '');\n      if (onChange) onChange(tokenAmount);else {\n        if (setInput) setInput(tokenAmount);\n        if (debounce) debounce(tokenAmount);\n      }\n    } else {\n      const usdAmount = new BigNumber(text).times(token === null || token === void 0 ? void 0 : token.usdPrice).toString();\n      if (setAmountUsd) setAmountUsd(usdAmount !== '0' && usdAmount !== 'NaN' ? usdAmount : '');\n      const val = sanitizeNumberInput(text, token === null || token === void 0 ? void 0 : token.decimals);\n      if (onChange) onChange(val);else {\n        if (setInput) setInput(val);\n        if (debounce) debounce(val);\n      }\n    }\n  };\n\n  const inputValue = () => {\n    if (!toggle && !disabled) return input;\n    if (!toggle && disabled) return `${sanitizeNumberInput(input, 6)}`;\n    if (!amountUsd) return '';\n    return `~$${sanitizeNumberInput(amountUsd, 6)}`;\n  };\n\n  const convertedAmount = () => {\n    const prefix = toggle ? '' : '~';\n    const tokenAmount = prettifyNumber(input);\n    const usdAmount = prettifyNumber(amountUsd !== null && amountUsd !== void 0 ? amountUsd : 0, true);\n    const amount = toggle ? tokenAmount : usdAmount;\n    if ((input || amountUsd) && token) return `${prefix}${amount}`;else return `${prefix}${toggle ? '' : '$'}0`;\n  };\n\n  const setMaxAmount = () => {\n    if (balance && balanceUsd && token) {\n      if (token.symbol === 'ETH') {\n        const reducedBalance = new BigNumber(balance).minus(0.01).toString();\n        const reducedUsdBalance = new BigNumber(reducedBalance).times(token.usdPrice).toString();\n        onInputChange(toggle ? reducedUsdBalance : reducedBalance, token);\n      } else onInputChange(toggle ? balanceUsd : balance, token);\n    }\n  };\n\n  const inputFieldStyles = `token-input-field ${classNameGenerator({\n    'border-blue-0 dark:border-blue-1': border,\n    '!border-error': errorMsg\n  })}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between pr-10 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-medium\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), loadingBalances && token ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-skeleton h-[20px] w-[140px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : balance && balanceUsd && token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMaxAmount(),\n        disabled: disabled,\n        className: `text-12 focus:outline-none ${classNameGenerator({\n          'cursor-not-allowed': disabled\n        })}`,\n        children: [balanceLabel, \": \", prettifyNumber(balance), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary ml-4\",\n          children: [\"(~\", prettifyNumber(balanceUsd, true), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), startEmpty && !token ? /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-cy\": \"selectTokenButton\",\n      onClick: () => selectable ? setIsOpen(true) : {},\n      className: \"flex items-center text-primary font-medium text-20 mt-10 mb-30 py-5\",\n      children: [\"Select a token\", /*#__PURE__*/_jsxDEV(IconChevronDown, {\n        className: \"w-[10px] h-[6px] ml-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center mt-15 min-w-[135px] ${classNameGenerator({\n          'cursor-pointer': selectable\n        })}`,\n        onClick: () => selectable ? setIsOpen(true) : {},\n        children: [token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: token.logoURI,\n            alt: \"Token\",\n            className: \"bg-grey-2 rounded-full h-28 w-28\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-20 mx-10\",\n            children: token.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-skeleton h-28 w-28\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-skeleton mx-10 h-16 w-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), selectable && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IconChevronDown, {\n            className: \"w-[10px] h-[6px] mr-10 text-grey-4 dark:text-grey-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute text-12 bottom-0 right-0 w-full\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-end right-[15px] bottom-12 absolute w-4/5 bg-white dark:bg-blue-4 \",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-skeleton h-[22px] w-full mb-[8px]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-skeleton h-12 w-80 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right mr-[22px] mb-10\",\n              children: [convertedAmount(), \" \", toggle && (token === null || token === void 0 ? void 0 : token.symbol), !usdSlippage || usdSlippage !== 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-grey-3 ml-4\",\n                children: [\"(\", usdSlippage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-cy\": dataCy,\n            type: \"text\",\n            inputMode: \"decimal\",\n            value: inputValue(),\n            disabled: disabled,\n            placeholder: toggle ? '~$0.00' : '0.00',\n            className: inputFieldStyles,\n            onChange: event => onInputChange(event.target.value, token)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-error text-12 px-10 pt-5\",\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchableTokenList, {\n      onClick: token => {\n        if (setToken) setToken(token);\n        onInputChange(inputValue(), token);\n      },\n      isOpen: isOpen,\n      setIsOpen: setIsOpen,\n      tokens: tokens,\n      excludedTokens: excludedTokens,\n      includedTokens: includedTokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenInputField, \"V2LvrLzFnL9Iet6xQQaxOWjJSXU=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = TokenInputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenInputField\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/tokenInputField/TokenInputField.tsx"],"names":["useState","classNameGenerator","sanitizeNumberInput","SearchableTokenList","prettifyNumber","BigNumber","Image","useAppSelector","TokenInputField","dataCy","label","border","selectable","token","setToken","input","setInput","amountUsd","setAmountUsd","onChange","disabled","debounce","startEmpty","errorMsg","usdSlippage","fieldBalance","excludedTokens","includedTokens","isLoading","balanceLabel","isOpen","setIsOpen","balance","balanceUsd","times","usdPrice","toString","toggle","state","user","usdToggle","loadingBalances","tokens","bancor","onInputChange","text","tokenAmount","div","decimals","usdAmount","val","inputValue","convertedAmount","prefix","amount","setMaxAmount","symbol","reducedBalance","minus","reducedUsdBalance","inputFieldStyles","logoURI","event","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { classNameGenerator, sanitizeNumberInput } from 'utils/pureFunctions';\nimport { SearchableTokenList } from 'components/searchableTokenList/SearchableTokenList';\nimport { Token } from 'services/observables/tokens';\nimport { ReactComponent as IconChevronDown } from 'assets/icons/chevronDown.svg';\nimport 'components/tokenInputField/TokenInputField.css';\nimport 'components/inputField/InputField.css';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport BigNumber from 'bignumber.js';\nimport { Image } from 'components/image/Image';\nimport { useAppSelector } from 'redux/index';\n\ninterface TokenInputFieldProps {\n  label?: string;\n  border?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n  input: string;\n  setInput?: Function;\n  amountUsd?: string;\n  setAmountUsd?: Function;\n  onChange?: Function;\n  token?: Token;\n  setToken?: Function;\n  debounce?: Function;\n  startEmpty?: boolean;\n  errorMsg?: string;\n  usdSlippage?: number;\n  dataCy?: string;\n  fieldBalance?: string;\n  excludedTokens?: string[];\n  includedTokens?: string[];\n  isLoading?: boolean;\n  balanceLabel?: string;\n}\n\nexport const TokenInputField = ({\n  dataCy,\n  label,\n  border,\n  selectable,\n  token,\n  setToken,\n  input,\n  setInput,\n  amountUsd,\n  setAmountUsd,\n  onChange,\n  disabled,\n  debounce,\n  startEmpty,\n  errorMsg,\n  usdSlippage,\n  fieldBalance,\n  excludedTokens = [],\n  includedTokens = [],\n  isLoading,\n  balanceLabel = 'Balance',\n}: TokenInputFieldProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const balance = fieldBalance ? fieldBalance : token ? token.balance : null;\n  const balanceUsd =\n    token && balance\n      ? new BigNumber(balance).times(token.usdPrice ?? 0).toString()\n      : null;\n\n  const toggle = useAppSelector<boolean>((state) => state.user.usdToggle);\n  const loadingBalances = useAppSelector<boolean>(\n    (state) => state.user.loadingBalances\n  );\n  const tokens = useAppSelector<Token[]>((state) => state.bancor.tokens);\n\n  const onInputChange = (text: string, token?: Token) => {\n    text = sanitizeNumberInput(text);\n    if (toggle) {\n      const tokenAmount = sanitizeNumberInput(\n        new BigNumber(text).div(token?.usdPrice!).toString(),\n        token?.decimals\n      );\n      if (setAmountUsd) setAmountUsd(text !== 'NaN' ? text : '');\n      if (onChange) onChange(tokenAmount);\n      else {\n        if (setInput) setInput(tokenAmount);\n        if (debounce) debounce(tokenAmount);\n      }\n    } else {\n      const usdAmount = new BigNumber(text).times(token?.usdPrice!).toString();\n      if (setAmountUsd)\n        setAmountUsd(usdAmount !== '0' && usdAmount !== 'NaN' ? usdAmount : '');\n      const val = sanitizeNumberInput(text, token?.decimals);\n      if (onChange) onChange(val);\n      else {\n        if (setInput) setInput(val);\n        if (debounce) debounce(val);\n      }\n    }\n  };\n\n  const inputValue = () => {\n    if (!toggle && !disabled) return input;\n    if (!toggle && disabled) return `${sanitizeNumberInput(input, 6)}`;\n    if (!amountUsd) return '';\n    return `~$${sanitizeNumberInput(amountUsd, 6)}`;\n  };\n\n  const convertedAmount = () => {\n    const prefix = toggle ? '' : '~';\n    const tokenAmount = prettifyNumber(input);\n    const usdAmount = prettifyNumber(amountUsd ?? 0, true);\n    const amount = toggle ? tokenAmount : usdAmount;\n\n    if ((input || amountUsd) && token) return `${prefix}${amount}`;\n    else return `${prefix}${toggle ? '' : '$'}0`;\n  };\n\n  const setMaxAmount = () => {\n    if (balance && balanceUsd && token) {\n      if (token.symbol === 'ETH') {\n        const reducedBalance = new BigNumber(balance).minus(0.01).toString();\n        const reducedUsdBalance = new BigNumber(reducedBalance)\n          .times(token.usdPrice!)\n          .toString();\n        onInputChange(toggle ? reducedUsdBalance : reducedBalance, token);\n      } else onInputChange(toggle ? balanceUsd : balance, token);\n    }\n  };\n\n  const inputFieldStyles = `token-input-field ${classNameGenerator({\n    'border-blue-0 dark:border-blue-1': border,\n    '!border-error': errorMsg,\n  })}`;\n\n  return (\n    <div>\n      <div className=\"flex justify-between pr-10 mb-4\">\n        <span className=\"font-medium\">{label}</span>\n        {loadingBalances && token ? (\n          <div className=\"loading-skeleton h-[20px] w-[140px]\"></div>\n        ) : (\n          balance &&\n          balanceUsd &&\n          token && (\n            <button\n              onClick={() => setMaxAmount()}\n              disabled={disabled}\n              className={`text-12 focus:outline-none ${classNameGenerator({\n                'cursor-not-allowed': disabled,\n              })}`}\n            >\n              {balanceLabel}: {prettifyNumber(balance)}\n              <span className=\"text-primary ml-4\">\n                (~{prettifyNumber(balanceUsd, true)})\n              </span>\n            </button>\n          )\n        )}\n      </div>\n      {startEmpty && !token ? (\n        <button\n          data-cy=\"selectTokenButton\"\n          onClick={() => (selectable ? setIsOpen(true) : {})}\n          className=\"flex items-center text-primary font-medium text-20 mt-10 mb-30 py-5\"\n        >\n          Select a token\n          <IconChevronDown className=\"w-[10px] h-[6px] ml-10\" />\n        </button>\n      ) : (\n        <div className=\"flex items-start\">\n          <div\n            className={`flex items-center mt-15 min-w-[135px] ${classNameGenerator(\n              {\n                'cursor-pointer': selectable,\n              }\n            )}`}\n            onClick={() => (selectable ? setIsOpen(true) : {})}\n          >\n            {token ? (\n              <>\n                <Image\n                  src={token.logoURI}\n                  alt=\"Token\"\n                  className=\"bg-grey-2 rounded-full h-28 w-28\"\n                />\n                <span className=\"text-20 mx-10\">{token.symbol}</span>\n              </>\n            ) : (\n              <>\n                <div className=\"loading-skeleton h-28 w-28\"></div>\n                <div className=\"loading-skeleton mx-10 h-16 w-50\"></div>\n              </>\n            )}\n\n            {selectable && (\n              <div>\n                <IconChevronDown className=\"w-[10px] h-[6px] mr-10 text-grey-4 dark:text-grey-3\" />\n              </div>\n            )}\n          </div>\n          <div className=\"w-full\">\n            <div className=\"relative w-full\">\n              <div className=\"absolute text-12 bottom-0 right-0 w-full\">\n                {isLoading ? (\n                  <div className=\"flex flex-col items-end right-[15px] bottom-12 absolute w-4/5 bg-white dark:bg-blue-4 \">\n                    <div className=\"loading-skeleton h-[22px] w-full mb-[8px]\"></div>\n                    <div className=\"loading-skeleton h-12 w-80 mr-2\"></div>\n                  </div>\n                ) : (\n                  <div className=\"text-right mr-[22px] mb-10\">\n                    {convertedAmount()} {toggle && token?.symbol}\n                    {!usdSlippage ||\n                      (usdSlippage !== 0 && (\n                        <span className=\"text-grey-3 ml-4\">\n                          ({usdSlippage}%)\n                        </span>\n                      ))}\n                  </div>\n                )}\n              </div>\n              <input\n                data-cy={dataCy}\n                type=\"text\"\n                inputMode=\"decimal\"\n                value={inputValue()}\n                disabled={disabled}\n                placeholder={toggle ? '~$0.00' : '0.00'}\n                className={inputFieldStyles}\n                onChange={(event) => onInputChange(event.target.value, token)}\n              />\n            </div>\n            {errorMsg && (\n              <div className=\"text-error text-12 px-10 pt-5\">{errorMsg}</div>\n            )}\n          </div>\n        </div>\n      )}\n\n      <SearchableTokenList\n        onClick={(token: Token) => {\n          if (setToken) setToken(token);\n          onInputChange(inputValue(), token);\n        }}\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        tokens={tokens}\n        excludedTokens={excludedTokens}\n        includedTokens={includedTokens}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}