{"ast":null,"code":"export const shortenString = function (string) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '...';\n  let toLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 13;\n  const startEndLength = Math.floor((toLength - separator.length) / 2);\n  const start = string.substring(0, startEndLength);\n  const end = string.substring(string.length - startEndLength, string.length);\n  return start + separator + end;\n};\nexport const classNameGenerator = object => {\n  return Object.entries(object).filter(_ref => {\n    let [k, v] = _ref;\n    return k && v;\n  }).map(x => x[0]).join(' ');\n};\nexport const sanitizeNumberInput = (input, precision) => {\n  const sanitized = input.replace(/,/, '.').replace(/[^\\d.]/g, '').replace(/\\./, 'x').replace(/\\./g, '').replace(/x/, '.');\n  if (!precision) return sanitized;\n  const [integer, decimals] = sanitized.split('.');\n  if (decimals) return `${integer}.${decimals.substring(0, precision)}`;else return sanitized;\n};\nexport const updateArray = (arr, conditioner, updater) => arr.map(element => conditioner(element) ? updater(element) : element);\nexport const mapIgnoreThrown = async (input, iteratee) => {\n  const IGNORE_TOKEN = 'IGNORE_TOKEN';\n  const res = await Promise.all(input.map((val, index) => iteratee(val, index).catch(() => IGNORE_TOKEN)));\n  return res.filter(res => res !== IGNORE_TOKEN);\n};\nexport const wait = async function () {\n  let ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\nexport const get7DaysAgo = () => new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\nexport const sortTokenBalanceAlphabetic = (a, b) => {\n  const diff = Number(b.balance) - Number(a.balance);\n  if (diff !== 0) return diff;\n  return a.symbol.toUpperCase().localeCompare(b.symbol.toUpperCase());\n};\nexport const openNewTab = url => window.open(url, '_blank', 'noopener');","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/utils/pureFunctions.ts"],"names":["shortenString","string","separator","toLength","startEndLength","Math","floor","length","start","substring","end","classNameGenerator","object","Object","entries","filter","k","v","map","x","join","sanitizeNumberInput","input","precision","sanitized","replace","integer","decimals","split","updateArray","arr","conditioner","updater","element","mapIgnoreThrown","iteratee","IGNORE_TOKEN","res","Promise","all","val","index","catch","wait","ms","resolve","setTimeout","get7DaysAgo","Date","now","sortTokenBalanceAlphabetic","a","b","diff","Number","balance","symbol","toUpperCase","localeCompare","openNewTab","url","window","open"],"mappings":"AAEA,OAAO,MAAMA,aAAa,GAAG,UAC3BC,MAD2B,EAIhB;AAAA,MAFXC,SAEW,uEAFC,KAED;AAAA,MADXC,QACW,uEADA,EACA;AACX,QAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,QAAQ,GAAGD,SAAS,CAACK,MAAtB,IAAgC,CAA3C,CAAvB;AACA,QAAMC,KAAK,GAAGP,MAAM,CAACQ,SAAP,CAAiB,CAAjB,EAAoBL,cAApB,CAAd;AACA,QAAMM,GAAG,GAAGT,MAAM,CAACQ,SAAP,CAAiBR,MAAM,CAACM,MAAP,GAAgBH,cAAjC,EAAiDH,MAAM,CAACM,MAAxD,CAAZ;AACA,SAAOC,KAAK,GAAGN,SAAR,GAAoBQ,GAA3B;AACD,CATM;AAWP,OAAO,MAAMC,kBAAkB,GAAIC,MAAD,IAEpB;AACZ,SAAOC,MAAM,CAACC,OAAP,CAAeF,MAAf,EACJG,MADI,CACG;AAAA,QAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;AAAA,WAAYD,CAAC,IAAIC,CAAjB;AAAA,GADH,EAEJC,GAFI,CAECC,CAAD,IAAOA,CAAC,CAAC,CAAD,CAFR,EAGJC,IAHI,CAGC,GAHD,CAAP;AAID,CAPM;AASP,OAAO,MAAMC,mBAAmB,GAAG,CACjCC,KADiC,EAEjCC,SAFiC,KAGtB;AACX,QAAMC,SAAS,GAAGF,KAAK,CACpBG,OADe,CACP,GADO,EACF,GADE,EAEfA,OAFe,CAEP,SAFO,EAEI,EAFJ,EAGfA,OAHe,CAGP,IAHO,EAGD,GAHC,EAIfA,OAJe,CAIP,KAJO,EAIA,EAJA,EAKfA,OALe,CAKP,GALO,EAKF,GALE,CAAlB;AAMA,MAAI,CAACF,SAAL,EAAgB,OAAOC,SAAP;AAChB,QAAM,CAACE,OAAD,EAAUC,QAAV,IAAsBH,SAAS,CAACI,KAAV,CAAgB,GAAhB,CAA5B;AACA,MAAID,QAAJ,EAAc,OAAQ,GAAED,OAAQ,IAAGC,QAAQ,CAAClB,SAAT,CAAmB,CAAnB,EAAsBc,SAAtB,CAAiC,EAAtD,CAAd,KACK,OAAOC,SAAP;AACN,CAdM;AAgBP,OAAO,MAAMK,WAAW,GAAG,CACzBC,GADyB,EAEzBC,WAFyB,EAGzBC,OAHyB,KAItBF,GAAG,CAACZ,GAAJ,CAASe,OAAD,IAAcF,WAAW,CAACE,OAAD,CAAX,GAAuBD,OAAO,CAACC,OAAD,CAA9B,GAA0CA,OAAhE,CAJE;AAMP,OAAO,MAAMC,eAAe,GAAG,OAC7BZ,KAD6B,EAE7Ba,QAF6B,KAGZ;AACjB,QAAMC,YAAY,GAAG,cAArB;AACA,QAAMC,GAAG,GAAG,MAAMC,OAAO,CAACC,GAAR,CAChBjB,KAAK,CAACJ,GAAN,CAAU,CAACsB,GAAD,EAAMC,KAAN,KAAgBN,QAAQ,CAACK,GAAD,EAAMC,KAAN,CAAR,CAAqBC,KAArB,CAA2B,MAAMN,YAAjC,CAA1B,CADgB,CAAlB;AAGA,SAAOC,GAAG,CAACtB,MAAJ,CAAYsB,GAAD,IAASA,GAAG,KAAKD,YAA5B,CAAP;AACD,CATM;AAWP,OAAO,MAAMO,IAAI,GAAG;AAAA,MAAOC,EAAP,uEAAoB,CAApB;AAAA,SAClB,IAAIN,OAAJ,CAAaO,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUD,EAAV,CAAnC,CADkB;AAAA,CAAb;AAGP,OAAO,MAAMG,WAAW,GAAG,MAAM,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAzC,CAA1B;AAEP,OAAO,MAAMC,0BAA0B,GAAG,CAACC,CAAD,EAAWC,CAAX,KAAwB;AAChE,QAAMC,IAAI,GAAGC,MAAM,CAACF,CAAC,CAACG,OAAH,CAAN,GAAoBD,MAAM,CAACH,CAAC,CAACI,OAAH,CAAvC;AACA,MAAIF,IAAI,KAAK,CAAb,EAAgB,OAAOA,IAAP;AAEhB,SAAOF,CAAC,CAACK,MAAF,CAASC,WAAT,GAAuBC,aAAvB,CAAqCN,CAAC,CAACI,MAAF,CAASC,WAAT,EAArC,CAAP;AACD,CALM;AAOP,OAAO,MAAME,UAAU,GAAIC,GAAD,IACxBC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiB,QAAjB,EAA2B,UAA3B,CADK","sourcesContent":["import { Token } from 'services/observables/tokens';\n\nexport const shortenString = (\n  string: string,\n  separator = '...',\n  toLength = 13\n): string => {\n  const startEndLength = Math.floor((toLength - separator.length) / 2);\n  const start = string.substring(0, startEndLength);\n  const end = string.substring(string.length - startEndLength, string.length);\n  return start + separator + end;\n};\n\nexport const classNameGenerator = (object: {\n  [key: string]: unknown;\n}): string => {\n  return Object.entries(object)\n    .filter(([k, v]) => k && v)\n    .map((x) => x[0])\n    .join(' ');\n};\n\nexport const sanitizeNumberInput = (\n  input: string,\n  precision?: number\n): string => {\n  const sanitized = input\n    .replace(/,/, '.')\n    .replace(/[^\\d.]/g, '')\n    .replace(/\\./, 'x')\n    .replace(/\\./g, '')\n    .replace(/x/, '.');\n  if (!precision) return sanitized;\n  const [integer, decimals] = sanitized.split('.');\n  if (decimals) return `${integer}.${decimals.substring(0, precision)}`;\n  else return sanitized;\n};\n\nexport const updateArray = <T>(\n  arr: T[],\n  conditioner: (element: T) => boolean,\n  updater: (element: T) => T\n) => arr.map((element) => (conditioner(element) ? updater(element) : element));\n\nexport const mapIgnoreThrown = async <T, V>(\n  input: readonly T[],\n  iteratee: (value: T, index: number) => Promise<V>\n): Promise<V[]> => {\n  const IGNORE_TOKEN = 'IGNORE_TOKEN';\n  const res = await Promise.all(\n    input.map((val, index) => iteratee(val, index).catch(() => IGNORE_TOKEN))\n  );\n  return res.filter((res) => res !== IGNORE_TOKEN) as V[];\n};\n\nexport const wait = async (ms: number = 0) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const get7DaysAgo = () => new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n\nexport const sortTokenBalanceAlphabetic = (a: Token, b: Token) => {\n  const diff = Number(b.balance) - Number(a.balance);\n  if (diff !== 0) return diff;\n\n  return a.symbol.toUpperCase().localeCompare(b.symbol.toUpperCase());\n};\n\nexport const openNewTab = (url: string) =>\n  window.open(url, '_blank', 'noopener');\n"]},"metadata":{},"sourceType":"module"}