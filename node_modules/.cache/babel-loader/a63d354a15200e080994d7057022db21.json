{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport { wethToken, ethToken } from 'services/web3/config';\nconst liquidityBase = '/pools/add-liquidity/';\nconst rewardsBase = '/portfolio/rewards/';\nconst rewardsBaseStake = `${rewardsBase}stake/`;\nexport const swap = '/swap';\nexport const tokens = '/tokens';\nexport const pools = '/pools';\nexport const vote = '/vote';\nexport const fiat = '/fiat';\nexport const tos = '/terms-of-use';\nexport const privacyPolicy = '/privacy-policy';\nexport const portfolio = '/portfolio';\nexport const addLiquidity = `${liquidityBase}:id`;\nexport const addLiquidityError = `${liquidityBase}error`;\nexport const portfolioRewardsClaim = `${rewardsBase}claim`;\nexport const portfolioRewardsStake = `${rewardsBaseStake}:id`;\nexport const addLiquidityByID = id => `${liquidityBase}${id}`;\nexport const portfolioRewardsStakeByID = id => `${rewardsBaseStake}${id}`;\nexport const portfolioRewardsStakeByIDnPos = (id, pos) => `${rewardsBaseStake}${id}?posGroupId=${pos}`;\nexport const swapByfrom = from => `${swap}${from ? `?from=${from}` : ''}`;\nexport const useNavigation = () => {\n  _s();\n\n  const history = useHistory();\n\n  const push = url => {\n    if (url !== window.location.search) history.push(url);\n  };\n\n  const pushPortfolio = () => push(portfolio);\n\n  const pushPools = () => push(pools);\n\n  const pushLiquidityError = () => push(addLiquidityError);\n\n  const pushRewardsStakeByID = id => push(portfolioRewardsStakeByID(id));\n\n  const pushRewardsStakeByIDnPos = (id, pos) => push(portfolioRewardsStakeByIDnPos(id, pos));\n\n  const pushAddLiquidityByID = id => push(addLiquidityByID(id));\n\n  const pushSwapParams = (from, to, limit) => {\n    const url = `?${from ? 'from=' + from : ''}${to ? '&to=' + to : ''}${limit ? '&limit=true' : ''}`;\n    if (url.trim() !== '?') push(url);\n  };\n\n  const replaceLimit = (fromToken, tokens, limit, toToken) => {\n    var _tokens$find;\n\n    const toAddress = !limit && fromToken && fromToken.address === wethToken ? (_tokens$find = tokens.find(x => x.address === ethToken)) === null || _tokens$find === void 0 ? void 0 : _tokens$find.address : toToken ? toToken.address : '';\n    pushSwapParams(fromToken === null || fromToken === void 0 ? void 0 : fromToken.address, toAddress, limit);\n  };\n\n  const replaceFrom = (fromToken, tokens, limit, toToken) => {\n    var _tokens$find2;\n\n    const toAddress = !limit && fromToken.address === wethToken ? (_tokens$find2 = tokens.find(x => x.address === ethToken)) === null || _tokens$find2 === void 0 ? void 0 : _tokens$find2.address : toToken ? toToken.address : '';\n    pushSwapParams(fromToken.address, toAddress, limit);\n  };\n\n  const replaceTo = (fromToken, limit, toToken) => {\n    pushSwapParams(fromToken.address, toToken === null || toToken === void 0 ? void 0 : toToken.address, limit);\n  };\n\n  const switchTokens = (fromToken, limit, toToken) => {\n    if (toToken) pushSwapParams(toToken.address, fromToken.address, limit);\n  };\n\n  return {\n    replaceLimit,\n    replaceFrom,\n    replaceTo,\n    switchTokens,\n    pushPools,\n    pushPortfolio,\n    pushLiquidityError,\n    pushRewardsStakeByID,\n    pushRewardsStakeByIDnPos,\n    pushAddLiquidityByID\n  };\n};\n\n_s(useNavigation, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/services/router.ts"],"names":["useHistory","wethToken","ethToken","liquidityBase","rewardsBase","rewardsBaseStake","swap","tokens","pools","vote","fiat","tos","privacyPolicy","portfolio","addLiquidity","addLiquidityError","portfolioRewardsClaim","portfolioRewardsStake","addLiquidityByID","id","portfolioRewardsStakeByID","portfolioRewardsStakeByIDnPos","pos","swapByfrom","from","useNavigation","history","push","url","window","location","search","pushPortfolio","pushPools","pushLiquidityError","pushRewardsStakeByID","pushRewardsStakeByIDnPos","pushAddLiquidityByID","pushSwapParams","to","limit","trim","replaceLimit","fromToken","toToken","toAddress","address","find","x","replaceFrom","replaceTo","switchTokens"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport { Token } from 'services/observables/tokens';\nimport { wethToken, ethToken } from 'services/web3/config';\n\nconst liquidityBase = '/pools/add-liquidity/';\nconst rewardsBase = '/portfolio/rewards/';\nconst rewardsBaseStake = `${rewardsBase}stake/`;\nexport const swap = '/swap';\nexport const tokens = '/tokens';\nexport const pools = '/pools';\nexport const vote = '/vote';\nexport const fiat = '/fiat';\nexport const tos = '/terms-of-use';\nexport const privacyPolicy = '/privacy-policy';\nexport const portfolio = '/portfolio';\nexport const addLiquidity = `${liquidityBase}:id`;\nexport const addLiquidityError = `${liquidityBase}error`;\nexport const portfolioRewardsClaim = `${rewardsBase}claim`;\nexport const portfolioRewardsStake = `${rewardsBaseStake}:id`;\n\nexport const addLiquidityByID = (id: string) => `${liquidityBase}${id}`;\nexport const portfolioRewardsStakeByID = (id: string) =>\n  `${rewardsBaseStake}${id}`;\nexport const portfolioRewardsStakeByIDnPos = (id: string, pos: string) =>\n  `${rewardsBaseStake}${id}?posGroupId=${pos}`;\nexport const swapByfrom = (from?: string) =>\n  `${swap}${from ? `?from=${from}` : ''}`;\n\nexport const useNavigation = () => {\n  const history = useHistory();\n\n  const push = (url: string) => {\n    if (url !== window.location.search) history.push(url);\n  };\n\n  const pushPortfolio = () => push(portfolio);\n\n  const pushPools = () => push(pools);\n\n  const pushLiquidityError = () => push(addLiquidityError);\n\n  const pushRewardsStakeByID = (id: string) =>\n    push(portfolioRewardsStakeByID(id));\n\n  const pushRewardsStakeByIDnPos = (id: string, pos: string) =>\n    push(portfolioRewardsStakeByIDnPos(id, pos));\n\n  const pushAddLiquidityByID = (id: string) => push(addLiquidityByID(id));\n\n  const pushSwapParams = (from?: string, to?: string, limit?: boolean) => {\n    const url = `?${from ? 'from=' + from : ''}${to ? '&to=' + to : ''}${\n      limit ? '&limit=true' : ''\n    }`;\n    if (url.trim() !== '?') push(url);\n  };\n\n  const replaceLimit = (\n    fromToken: Token | undefined,\n    tokens: Token[],\n    limit: boolean,\n    toToken?: Token\n  ) => {\n    const toAddress =\n      !limit && fromToken && fromToken.address === wethToken\n        ? tokens.find((x) => x.address === ethToken)?.address\n        : toToken\n        ? toToken.address\n        : '';\n\n    pushSwapParams(fromToken?.address, toAddress, limit);\n  };\n\n  const replaceFrom = (\n    fromToken: Token,\n    tokens: Token[],\n    limit: boolean,\n    toToken?: Token\n  ) => {\n    const toAddress =\n      !limit && fromToken.address === wethToken\n        ? tokens.find((x) => x.address === ethToken)?.address\n        : toToken\n        ? toToken.address\n        : '';\n\n    pushSwapParams(fromToken.address, toAddress, limit);\n  };\n\n  const replaceTo = (fromToken: Token, limit: boolean, toToken?: Token) => {\n    pushSwapParams(fromToken.address, toToken?.address, limit);\n  };\n\n  const switchTokens = (fromToken: Token, limit: boolean, toToken?: Token) => {\n    if (toToken) pushSwapParams(toToken.address, fromToken.address, limit);\n  };\n\n  return {\n    replaceLimit,\n    replaceFrom,\n    replaceTo,\n    switchTokens,\n    pushPools,\n    pushPortfolio,\n    pushLiquidityError,\n    pushRewardsStakeByID,\n    pushRewardsStakeByIDnPos,\n    pushAddLiquidityByID,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}