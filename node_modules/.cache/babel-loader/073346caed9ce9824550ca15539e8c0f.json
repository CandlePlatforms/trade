{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/table/TableHeader.tsx\";\nimport { ReactComponent as IconChevronDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/chevronDown.svg\";\nimport { ReactComponent as IconInfo } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/info.svg\";\nimport { Tooltip } from 'components/tooltip/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TableHeader = _ref => {\n  let {\n    headerGroups,\n    columns\n  } = _ref;\n\n  const getColumn = (() => {\n    const idToColumn = columns.reduce((map, col) => {\n      map[col.id] = col;\n      return map;\n    }, {});\n    return hg => idToColumn[hg.getHeaderProps().key.replace('header_', '')];\n  })();\n\n  const getStyleAttr = column => {\n    const style = column.getHeaderProps(column.getSortByToggleProps()).style;\n    const {\n      width,\n      minWidth,\n      maxWidth\n    } = getColumn(column);\n    return {\n      width,\n      maxWidth,\n      minWidth,\n      ...style\n    };\n  };\n\n  const getTooltip = column => {\n    const tooltip = getColumn(column).tooltip;\n    if (tooltip) return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"inline-flex ml-5\",\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        button: /*#__PURE__*/_jsxDEV(IconInfo, {\n          className: \"w-[15px] h-[15px] text-grey-4 dark:text-grey-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this),\n        content: tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  };\n\n  const getSortBy = (isSorted, isSortedDesc) => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"inline-flex relative\",\n      children: isSorted && /*#__PURE__*/_jsxDEV(IconChevronDown, {\n        className: `w-10 h-6 ml-5 transition-transform duration-500 ${isSortedDesc ? 'rotate-0' : 'rotate-180'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n      children: headerGroup.headers.map(column => {\n        var _getColumn$headerClas;\n\n        return /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          style: getStyleAttr(column),\n          title: undefined,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center ${(_getColumn$headerClas = getColumn(column).headerClassName) !== null && _getColumn$headerClas !== void 0 ? _getColumn$headerClas : ''}`,\n            children: [column.render('Header'), getTooltip(column), getSortBy(column.isSorted, column.isSortedDesc)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = TableHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/table/TableHeader.tsx"],"names":["Tooltip","TableHeader","headerGroups","columns","getColumn","idToColumn","reduce","map","col","id","hg","getHeaderProps","key","replace","getStyleAttr","column","style","getSortByToggleProps","width","minWidth","maxWidth","getTooltip","tooltip","getSortBy","isSorted","isSortedDesc","headerGroup","getHeaderGroupProps","headers","undefined","headerClassName","render"],"mappings":"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","sourcesContent":["import { HeaderGroup } from 'react-table';\nimport { ReactComponent as IconChevronDown } from 'assets/icons/chevronDown.svg';\nimport { ReactComponent as IconInfo } from 'assets/icons/info.svg';\nimport { TableColumn } from 'components/table/DataTable';\nimport { Tooltip } from 'components/tooltip/Tooltip';\n\ninterface TableHeaderProps<D extends object> {\n  headerGroups: HeaderGroup<D>[];\n  columns: TableColumn<D>[];\n}\n\nexport const TableHeader = <D extends object>({\n  headerGroups,\n  columns,\n}: TableHeaderProps<D>) => {\n  const getColumn: (hg: HeaderGroup<D>) => TableColumn<D> = (() => {\n    const idToColumn = columns.reduce(\n      (map: Record<string, TableColumn<D>>, col) => {\n        map[col.id as string] = col;\n        return map;\n      },\n      {}\n    );\n    return (hg: HeaderGroup<D>) =>\n      idToColumn[(hg.getHeaderProps().key as string).replace('header_', '')];\n  })();\n\n  const getStyleAttr = (column: HeaderGroup<D>) => {\n    const style = column.getHeaderProps(column.getSortByToggleProps()).style;\n    const { width, minWidth, maxWidth } = getColumn(column);\n    return { width, maxWidth, minWidth, ...style };\n  };\n\n  const getTooltip = (column: HeaderGroup<D>) => {\n    const tooltip = getColumn(column).tooltip;\n    if (tooltip)\n      return (\n        <span className=\"inline-flex ml-5\">\n          <Tooltip\n            button={\n              <IconInfo className=\"w-[15px] h-[15px] text-grey-4 dark:text-grey-3\" />\n            }\n            content={tooltip}\n          />\n        </span>\n      );\n  };\n\n  const getSortBy = (isSorted: boolean, isSortedDesc?: boolean) => {\n    return (\n      <span className=\"inline-flex relative\">\n        {isSorted && (\n          <IconChevronDown\n            className={`w-10 h-6 ml-5 transition-transform duration-500 ${\n              isSortedDesc ? 'rotate-0' : 'rotate-180'\n            }`}\n          />\n        )}\n      </span>\n    );\n  };\n\n  return (\n    <thead>\n      {headerGroups.map((headerGroup) => (\n        <tr {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column) => (\n            <th\n              {...column.getHeaderProps(column.getSortByToggleProps())}\n              style={getStyleAttr(column)}\n              title={undefined}\n            >\n              <div\n                className={`flex items-center ${\n                  getColumn(column).headerClassName ?? ''\n                }`}\n              >\n                {column.render('Header')}\n                {getTooltip(column)}\n                {getSortBy(column.isSorted, column.isSortedDesc)}\n              </div>\n            </th>\n          ))}\n        </tr>\n      ))}\n    </thead>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}