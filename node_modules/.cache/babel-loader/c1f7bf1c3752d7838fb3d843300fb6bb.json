{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/notifications/NotificationContent.tsx\",\n    _s = $RefreshSig$();\n\nimport { ReactComponent as IconCheck } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/check.svg\";\nimport { ReactComponent as IconTimes } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/times.svg\";\nimport { ReactComponent as IconLink } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/link.svg\";\nimport { NotificationType } from 'redux/notification/notification';\nimport { ReactComponent as IconBancor } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/bancor.svg\";\nimport { classNameGenerator } from 'utils/pureFunctions';\nimport { useEffect, useRef, useState } from 'react';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport updateLocale from 'dayjs/plugin/updateLocale';\nimport { useWeb3React } from '@web3-react/core';\nimport { getNetworkVariables } from 'services/web3/config';\nimport { EthNetworks } from 'services/web3/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(relativeTime);\ndayjs.extend(updateLocale);\ndayjs.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'now',\n    m: 'now',\n    mm: '%d min ago',\n    h: 'an hour ago',\n    hh: '%d hours ago',\n    d: 'a day ago',\n    dd: '%d days ago',\n    M: 'a month ago',\n    MM: '%d months ago',\n    y: 'a year ago',\n    yy: '%d years ago'\n  }\n});\nexport const NotificationContent = _ref => {\n  _s();\n\n  let {\n    data,\n    onRemove,\n    isAlert\n  } = _ref;\n  const {\n    id,\n    type,\n    title,\n    msg,\n    showSeconds,\n    timestamp,\n    txHash\n  } = data;\n  const [isHovering, setIsHovering] = useState(false);\n  const timer = useRef(null);\n  useEffect(() => {\n    if (!isAlert) return;\n    if (type === NotificationType.pending) return;\n\n    if (isHovering) {\n      timer.current && clearTimeout(timer.current);\n      return;\n    }\n\n    timer.current = setTimeout(() => {\n      onRemove(id);\n    }, showSeconds * 1000);\n    return () => {\n      timer.current && clearTimeout(timer.current);\n    };\n  }, [isAlert, onRemove, type, showSeconds, id, isHovering]);\n\n  const StatusIcon = () => {\n    switch (type) {\n      case NotificationType.pending:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex justify-center items-center\",\n          children: [/*#__PURE__*/_jsxDEV(IconBancor, {\n            className: \"absolute w-5 text-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute w-14 h-14 border border-grey-1 rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-14 h-14 border-t border-r border-primary rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n\n      case NotificationType.success:\n        return /*#__PURE__*/_jsxDEV(IconCheck, {\n          className: \"w-8 text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n\n      case NotificationType.error:\n        return /*#__PURE__*/_jsxDEV(IconTimes, {\n          className: \"w-6 text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white\",\n          children: \"i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  const {\n    chainId\n  } = useWeb3React();\n\n  const etherscanUrl = () => {\n    const currentNetwork = chainId === EthNetworks.Ropsten ? EthNetworks.Ropsten : EthNetworks.Mainnet;\n    const baseUrl = getNetworkVariables(currentNetwork).etherscanUrl;\n    return `${baseUrl}/tx/${txHash}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseEnter: () => setIsHovering(true),\n    onMouseLeave: () => setIsHovering(false),\n    className: \"text-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center justify-center ${classNameGenerator({\n            'w-14 h-14 rounded-full': type !== NotificationType.pending,\n            'bg-success': type === NotificationType.success,\n            'bg-error': type === NotificationType.error,\n            'bg-info': type === NotificationType.info\n          })}`,\n          children: StatusIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-12 font-medium mx-8\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-grey-4 dark:text-grey-3\",\n          children: dayjs.unix(timestamp).fromNow(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-clickable-area\",\n        onClick: () => onRemove(id),\n        children: /*#__PURE__*/_jsxDEV(IconTimes, {\n          className: \"w-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), txHash && isHovering ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: etherscanUrl(),\n      target: \"_blank\",\n      className: \"ml-[22px] flex text-primary font-semibold\",\n      rel: \"noreferrer\",\n      children: [\"View on Etherscan \", /*#__PURE__*/_jsxDEV(IconLink, {\n        className: \"w-14 ml-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ml-[22px] text-grey-4 dark:text-grey-3\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotificationContent, \"LbwQtY9pUxnb/4T06RUsbKJYrL4=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = NotificationContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationContent\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/notifications/NotificationContent.tsx"],"names":["NotificationType","classNameGenerator","useEffect","useRef","useState","dayjs","relativeTime","updateLocale","useWeb3React","getNetworkVariables","EthNetworks","extend","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","NotificationContent","data","onRemove","isAlert","id","type","title","msg","showSeconds","timestamp","txHash","isHovering","setIsHovering","timer","pending","current","clearTimeout","setTimeout","StatusIcon","success","error","chainId","etherscanUrl","currentNetwork","Ropsten","Mainnet","baseUrl","info","unix","fromNow"],"mappings":"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","sourcesContent":["import { ReactComponent as IconCheck } from 'assets/icons/check.svg';\nimport { ReactComponent as IconTimes } from 'assets/icons/times.svg';\nimport { ReactComponent as IconLink } from 'assets/icons/link.svg';\nimport {\n  Notification,\n  NotificationType,\n} from 'redux/notification/notification';\nimport { ReactComponent as IconBancor } from 'assets/icons/bancor.svg';\nimport { classNameGenerator } from 'utils/pureFunctions';\nimport { useEffect, useRef, useState } from 'react';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport updateLocale from 'dayjs/plugin/updateLocale';\nimport { useWeb3React } from '@web3-react/core';\nimport { getNetworkVariables } from 'services/web3/config';\nimport { EthNetworks } from 'services/web3/types';\n\ndayjs.extend(relativeTime);\ndayjs.extend(updateLocale);\n\ndayjs.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'now',\n    m: 'now',\n    mm: '%d min ago',\n    h: 'an hour ago',\n    hh: '%d hours ago',\n    d: 'a day ago',\n    dd: '%d days ago',\n    M: 'a month ago',\n    MM: '%d months ago',\n    y: 'a year ago',\n    yy: '%d years ago',\n  },\n});\n\nexport interface NotificationContentProps {\n  data: Notification;\n  onRemove: Function;\n  isAlert?: boolean;\n}\n\nexport const NotificationContent = ({\n  data,\n  onRemove,\n  isAlert,\n}: NotificationContentProps) => {\n  const { id, type, title, msg, showSeconds, timestamp, txHash } = data;\n  const [isHovering, setIsHovering] = useState(false);\n  const timer = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    if (!isAlert) return;\n    if (type === NotificationType.pending) return;\n    if (isHovering) {\n      timer.current && clearTimeout(timer.current);\n      return;\n    }\n    timer.current = setTimeout(() => {\n      onRemove(id);\n    }, showSeconds! * 1000);\n\n    return () => {\n      timer.current && clearTimeout(timer.current)\n    }\n  }, [isAlert, onRemove, type, showSeconds, id, isHovering]);\n\n\n\n  const StatusIcon = () => {\n    switch (type) {\n      case NotificationType.pending:\n        return (\n          <div className=\"relative flex justify-center items-center\">\n            <IconBancor className=\"absolute w-5 text-primary\" />\n            <div className=\"absolute w-14 h-14 border border-grey-1 rounded-full\" />\n            <div className=\"w-14 h-14 border-t border-r border-primary rounded-full animate-spin\" />\n          </div>\n        );\n      case NotificationType.success:\n        return <IconCheck className=\"w-8 text-white\" />;\n      case NotificationType.error:\n        return <IconTimes className=\"w-6 text-white\" />;\n      default:\n        return <span className=\"text-white\">i</span>;\n    }\n  };\n\n  const { chainId } = useWeb3React();\n  const etherscanUrl = () => {\n    const currentNetwork =\n      chainId === EthNetworks.Ropsten\n        ? EthNetworks.Ropsten\n        : EthNetworks.Mainnet;\n    const baseUrl = getNetworkVariables(currentNetwork).etherscanUrl;\n    return `${baseUrl}/tx/${txHash}`;\n  };\n\n  return (\n    <div\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n      className=\"text-12\"\n    >\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"flex\">\n          <div\n            className={`flex items-center justify-center ${classNameGenerator({\n              'w-14 h-14 rounded-full': type !== NotificationType.pending,\n              'bg-success': type === NotificationType.success,\n              'bg-error': type === NotificationType.error,\n              'bg-info': type === NotificationType.info,\n            })}`}\n          >\n            {StatusIcon()}\n          </div>\n\n          <h4 className=\"text-12 font-medium mx-8\">{title}</h4>\n          <span className=\"text-grey-4 dark:text-grey-3\">\n            {dayjs.unix(timestamp).fromNow(true)}\n          </span>\n        </div>\n        <button className=\"expand-clickable-area\" onClick={() => onRemove(id)}>\n          <IconTimes className=\"w-8\" />\n        </button>\n      </div>\n      {txHash && isHovering ? (\n        <a\n          href={etherscanUrl()}\n          target=\"_blank\"\n          className=\"ml-[22px] flex text-primary font-semibold\"\n          rel=\"noreferrer\"\n        >\n          View on Etherscan <IconLink className=\"w-14 ml-6\" />\n        </a>\n      ) : (\n        <p className=\"ml-[22px] text-grey-4 dark:text-grey-3\">{msg}</p>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}