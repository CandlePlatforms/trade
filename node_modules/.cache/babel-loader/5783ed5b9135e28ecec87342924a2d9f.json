{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'https://api.intotheblock.com';\nconst apiKey = process.env.REACT_APP_INTOTHEBLOCK_KEY || '';\nconst axiosConfig = {\n  headers: {\n    'x-api-key': apiKey\n  }\n};\n\nconst calculateTimeHeld = timeHeld => {\n  const sumTimeHeld = timeHeld.hodler + timeHeld.cruiser + timeHeld.trader;\n  return {\n    hodler: timeHeld.hodler / sumTimeHeld,\n    cruiser: timeHeld.cruiser / sumTimeHeld,\n    trader: timeHeld.trader / sumTimeHeld\n  };\n};\n\nconst calculateInOut = inOut => {\n  const sumInOut = inOut.in + inOut.between + inOut.out;\n  return {\n    in: inOut.in / sumInOut,\n    between: inOut.between / sumInOut,\n    out: inOut.out / sumInOut\n  };\n};\n\nexport const intoTheBlockByToken = async symbol => {\n  try {\n    const [signal, overview] = await Promise.all([axios.get(`${baseUrl}/${symbol}/signals`, axiosConfig), axios.get(`${baseUrl}/${symbol}/overview`, axiosConfig)]);\n    const inOut = overview.data.inOutOfTheMoney;\n    const timeHeld = overview.data.byTimeHeldComposition;\n    const byTimeHeldComposition = timeHeld && calculateTimeHeld(timeHeld);\n    const inOutOfTheMoney = inOut && calculateInOut(inOut);\n    return {\n      summary: signal.data.summary,\n      symbol,\n      concentration: overview.data.concentration,\n      ...(inOutOfTheMoney && {\n        inOutOfTheMoney\n      }),\n      ...(byTimeHeldComposition && {\n        byTimeHeldComposition\n      })\n    };\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/services/api/intoTheBlock.ts"],"names":["axios","baseUrl","apiKey","process","env","REACT_APP_INTOTHEBLOCK_KEY","axiosConfig","headers","calculateTimeHeld","timeHeld","sumTimeHeld","hodler","cruiser","trader","calculateInOut","inOut","sumInOut","in","between","out","intoTheBlockByToken","symbol","signal","overview","Promise","all","get","data","inOutOfTheMoney","byTimeHeldComposition","summary","concentration","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,8BAAhB;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAZ,IAA0C,EAAzD;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE;AAAE,iBAAaL;AAAf;AADS,CAApB;;AA+CA,MAAMM,iBAAiB,GAAIC,QAAD,IAAqC;AAC7D,QAAMC,WAAW,GAAGD,QAAQ,CAACE,MAAT,GAAkBF,QAAQ,CAACG,OAA3B,GAAqCH,QAAQ,CAACI,MAAlE;AACA,SAAO;AACLF,IAAAA,MAAM,EAAEF,QAAQ,CAACE,MAAT,GAAkBD,WADrB;AAELE,IAAAA,OAAO,EAAEH,QAAQ,CAACG,OAAT,GAAmBF,WAFvB;AAGLG,IAAAA,MAAM,EAAEJ,QAAQ,CAACI,MAAT,GAAkBH;AAHrB,GAAP;AAKD,CAPD;;AASA,MAAMI,cAAc,GAAIC,KAAD,IAA4B;AACjD,QAAMC,QAAQ,GAAGD,KAAK,CAACE,EAAN,GAAWF,KAAK,CAACG,OAAjB,GAA2BH,KAAK,CAACI,GAAlD;AACA,SAAO;AACLF,IAAAA,EAAE,EAAEF,KAAK,CAACE,EAAN,GAAWD,QADV;AAELE,IAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,GAAgBF,QAFpB;AAGLG,IAAAA,GAAG,EAAEJ,KAAK,CAACI,GAAN,GAAYH;AAHZ,GAAP;AAKD,CAPD;;AASA,OAAO,MAAMI,mBAAmB,GAAG,MACjCC,MADiC,IAEK;AACtC,MAAI;AACF,UAAM,CAACC,MAAD,EAASC,QAAT,IAAqB,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC3CzB,KAAK,CAAC0B,GAAN,CAAuB,GAAEzB,OAAQ,IAAGoB,MAAO,UAA3C,EAAsDf,WAAtD,CAD2C,EAE3CN,KAAK,CAAC0B,GAAN,CAAwB,GAAEzB,OAAQ,IAAGoB,MAAO,WAA5C,EAAwDf,WAAxD,CAF2C,CAAZ,CAAjC;AAIA,UAAMS,KAAK,GAAGQ,QAAQ,CAACI,IAAT,CAAcC,eAA5B;AACA,UAAMnB,QAAQ,GAAGc,QAAQ,CAACI,IAAT,CAAcE,qBAA/B;AAEA,UAAMA,qBAAqB,GAAGpB,QAAQ,IAAID,iBAAiB,CAACC,QAAD,CAA3D;AACA,UAAMmB,eAAe,GAAGb,KAAK,IAAID,cAAc,CAACC,KAAD,CAA/C;AAEA,WAAO;AACLe,MAAAA,OAAO,EAAER,MAAM,CAACK,IAAP,CAAYG,OADhB;AAELT,MAAAA,MAFK;AAGLU,MAAAA,aAAa,EAAER,QAAQ,CAACI,IAAT,CAAcI,aAHxB;AAIL,UAAIH,eAAe,IAAI;AAAEA,QAAAA;AAAF,OAAvB,CAJK;AAKL,UAAIC,qBAAqB,IAAI;AAAEA,QAAAA;AAAF,OAA7B;AALK,KAAP;AAOD,GAlBD,CAkBE,OAAOG,KAAP,EAAc,CAAE;AACnB,CAtBM","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'https://api.intotheblock.com';\nconst apiKey = process.env.REACT_APP_INTOTHEBLOCK_KEY || '';\nconst axiosConfig = {\n  headers: { 'x-api-key': apiKey },\n};\n\ninterface SignalsRes {\n  summary: Summary;\n}\n\nexport interface Summary {\n  bearish: number;\n  bullish: number;\n  neutral: number;\n  score: number;\n  thresholds: Thresholds;\n}\n\ninterface Thresholds {\n  bearish: number;\n  bullish: number;\n}\n\ninterface OverviewRes {\n  concentration: number;\n  inOutOfTheMoney?: InOutOfTheMoney;\n  byTimeHeldComposition?: ByTimeHeldComposition;\n}\n\ninterface InOutOfTheMoney {\n  in: number;\n  between: number;\n  out: number;\n}\n\ninterface ByTimeHeldComposition {\n  hodler: number;\n  cruiser: number;\n  trader: number;\n}\n\nexport interface IntoTheBlock {\n  summary: Summary;\n  inOutOfTheMoney?: InOutOfTheMoney;\n  concentration: number;\n  byTimeHeldComposition?: ByTimeHeldComposition;\n  symbol: string;\n}\n\nconst calculateTimeHeld = (timeHeld: ByTimeHeldComposition) => {\n  const sumTimeHeld = timeHeld.hodler + timeHeld.cruiser + timeHeld.trader;\n  return {\n    hodler: timeHeld.hodler / sumTimeHeld,\n    cruiser: timeHeld.cruiser / sumTimeHeld,\n    trader: timeHeld.trader / sumTimeHeld,\n  };\n};\n\nconst calculateInOut = (inOut: InOutOfTheMoney) => {\n  const sumInOut = inOut.in + inOut.between + inOut.out;\n  return {\n    in: inOut.in / sumInOut,\n    between: inOut.between / sumInOut,\n    out: inOut.out / sumInOut,\n  };\n};\n\nexport const intoTheBlockByToken = async (\n  symbol: string\n): Promise<IntoTheBlock | undefined> => {\n  try {\n    const [signal, overview] = await Promise.all([\n      axios.get<SignalsRes>(`${baseUrl}/${symbol}/signals`, axiosConfig),\n      axios.get<OverviewRes>(`${baseUrl}/${symbol}/overview`, axiosConfig),\n    ]);\n    const inOut = overview.data.inOutOfTheMoney;\n    const timeHeld = overview.data.byTimeHeldComposition;\n\n    const byTimeHeldComposition = timeHeld && calculateTimeHeld(timeHeld);\n    const inOutOfTheMoney = inOut && calculateInOut(inOut);\n\n    return {\n      summary: signal.data.summary,\n      symbol,\n      concentration: overview.data.concentration,\n      ...(inOutOfTheMoney && { inOutOfTheMoney }),\n      ...(byTimeHeldComposition && { byTimeHeldComposition }),\n    };\n  } catch (error) {}\n};\n"]},"metadata":{},"sourceType":"module"}