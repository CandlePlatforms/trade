{"ast":null,"code":"import { Web3Provider } from '@ethersproject/providers';\nimport { injected, walletconnect, walletlink, frame, fortmatic, portis, gnosisSafe, torus } from 'services/web3/wallet/connectors';\nimport metamaskLogo from 'assets/logos/metamask.png';\nimport fortmaticLogo from \"assets/logos/fortmatic.svg\";\nimport portisLogo from 'assets/logos/portis.png';\nimport walletConnectLogo from \"assets/logos/walletConnect.svg\";\nimport coinbaseWalletLogo from \"assets/logos/coinbaseWallet.svg\";\nimport ledgerLogo from \"assets/logos/ledger.svg\";\nimport trezorLogo from \"assets/logos/trezor.svg\";\nimport frameLogo from 'assets/logos/frame.png';\nimport gnosisSafeLogo from \"assets/logos/gnosisSafe.svg\";\nimport torusLogo from \"assets/logos/torus.svg\";\nexport const getLibrary = provider => {\n  const library = new Web3Provider(provider, typeof provider.chainId === 'string' ? parseInt(provider.chainId) : typeof provider.chainId === 'number' ? provider.chainId : 'any');\n  library.pollingInterval = 15000;\n  return library;\n};\nexport const SUPPORTED_WALLETS = [{\n  connector: injected,\n  name: 'MetaMask',\n  icon: metamaskLogo,\n  mobile: true\n}, {\n  connector: walletconnect,\n  name: 'WalletConnect',\n  icon: walletConnectLogo,\n  mobile: true\n}, {\n  connector: walletlink,\n  name: 'Coinbase Wallet',\n  icon: coinbaseWalletLogo,\n  mobile: true\n}, {\n  name: 'Ledger',\n  icon: ledgerLogo,\n  url: 'https://www.ledger.com/academy/security/the-safest-way-to-use-metamask'\n}, {\n  name: 'Trezor',\n  icon: trezorLogo,\n  url: 'https://wiki.trezor.io/Apps:MetaMask'\n}, {\n  connector: gnosisSafe,\n  name: 'GnosisSafe',\n  icon: gnosisSafeLogo\n}, {\n  connector: frame,\n  name: 'Frame',\n  icon: frameLogo\n}, {\n  connector: fortmatic,\n  name: 'Fortmatic',\n  icon: fortmaticLogo,\n  mobile: true\n}, {\n  connector: portis,\n  name: 'Portis',\n  icon: portisLogo\n}, {\n  connector: torus,\n  name: 'Torus',\n  icon: torusLogo\n}];","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/services/web3/wallet/utils.ts"],"names":["Web3Provider","injected","walletconnect","walletlink","frame","fortmatic","portis","gnosisSafe","torus","metamaskLogo","portisLogo","frameLogo","getLibrary","provider","library","chainId","parseInt","pollingInterval","SUPPORTED_WALLETS","connector","name","icon","mobile","walletConnectLogo","coinbaseWalletLogo","ledgerLogo","url","trezorLogo","gnosisSafeLogo","fortmaticLogo","torusLogo"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AAEA,SACEC,QADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,UAPF,EAQEC,KARF,QASO,iCATP;AAWA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;;;;AAKA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAIA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAiC;AACzD,QAAMC,OAAO,GAAG,IAAId,YAAJ,CACda,QADc,EAEd,OAAOA,QAAQ,CAACE,OAAhB,KAA4B,QAA5B,GACIC,QAAQ,CAACH,QAAQ,CAACE,OAAV,CADZ,GAEI,OAAOF,QAAQ,CAACE,OAAhB,KAA4B,QAA5B,GACAF,QAAQ,CAACE,OADT,GAEA,KANU,CAAhB;AAQAD,EAAAA,OAAO,CAACG,eAAR,GAA0B,KAA1B;AACA,SAAOH,OAAP;AACD,CAXM;AAqBP,OAAO,MAAMI,iBAA+B,GAAG,CAC7C;AACEC,EAAAA,SAAS,EAAElB,QADb;AAEEmB,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,IAAI,EAAEZ,YAHR;AAIEa,EAAAA,MAAM,EAAE;AAJV,CAD6C,EAO7C;AACEH,EAAAA,SAAS,EAAEjB,aADb;AAEEkB,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,IAAI,EAAEE,iBAHR;AAIED,EAAAA,MAAM,EAAE;AAJV,CAP6C,EAa7C;AACEH,EAAAA,SAAS,EAAEhB,UADb;AAEEiB,EAAAA,IAAI,EAAE,iBAFR;AAGEC,EAAAA,IAAI,EAAEG,kBAHR;AAIEF,EAAAA,MAAM,EAAE;AAJV,CAb6C,EAmB7C;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAEI,UAFR;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAnB6C,EAwB7C;AACEN,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAEM,UAFR;AAGED,EAAAA,GAAG,EAAE;AAHP,CAxB6C,EA6B7C;AACEP,EAAAA,SAAS,EAAEZ,UADb;AAEEa,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,IAAI,EAAEO;AAHR,CA7B6C,EAkC7C;AACET,EAAAA,SAAS,EAAEf,KADb;AAEEgB,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,IAAI,EAAEV;AAHR,CAlC6C,EAuC7C;AACEQ,EAAAA,SAAS,EAAEd,SADb;AAEEe,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,IAAI,EAAEQ,aAHR;AAIEP,EAAAA,MAAM,EAAE;AAJV,CAvC6C,EA6C7C;AACEH,EAAAA,SAAS,EAAEb,MADb;AAEEc,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAEX;AAHR,CA7C6C,EAkD7C;AACES,EAAAA,SAAS,EAAEX,KADb;AAEEY,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,IAAI,EAAES;AAHR,CAlD6C,CAAxC","sourcesContent":["import { Web3Provider } from '@ethersproject/providers';\nimport { AbstractConnector } from '@web3-react/abstract-connector';\nimport {\n  injected,\n  walletconnect,\n  walletlink,\n  frame,\n  fortmatic,\n  portis,\n  gnosisSafe,\n  torus,\n} from 'services/web3/wallet/connectors';\n\nimport metamaskLogo from 'assets/logos/metamask.png';\nimport fortmaticLogo from 'assets/logos/fortmatic.svg';\nimport portisLogo from 'assets/logos/portis.png';\nimport walletConnectLogo from 'assets/logos/walletConnect.svg';\nimport coinbaseWalletLogo from 'assets/logos/coinbaseWallet.svg';\nimport ledgerLogo from 'assets/logos/ledger.svg';\nimport trezorLogo from 'assets/logos/trezor.svg';\nimport frameLogo from 'assets/logos/frame.png';\nimport gnosisSafeLogo from 'assets/logos/gnosisSafe.svg';\nimport torusLogo from 'assets/logos/torus.svg';\n\nexport const getLibrary = (provider: any): Web3Provider => {\n  const library = new Web3Provider(\n    provider,\n    typeof provider.chainId === 'string'\n      ? parseInt(provider.chainId)\n      : typeof provider.chainId === 'number'\n      ? provider.chainId\n      : 'any'\n  );\n  library.pollingInterval = 15000;\n  return library;\n};\n\nexport interface WalletInfo {\n  connector?: AbstractConnector;\n  name: string;\n  icon: string;\n  mobile?: boolean;\n  url?: string;\n}\n\nexport const SUPPORTED_WALLETS: WalletInfo[] = [\n  {\n    connector: injected,\n    name: 'MetaMask',\n    icon: metamaskLogo,\n    mobile: true,\n  },\n  {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    icon: walletConnectLogo,\n    mobile: true,\n  },\n  {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    icon: coinbaseWalletLogo,\n    mobile: true,\n  },\n  {\n    name: 'Ledger',\n    icon: ledgerLogo,\n    url: 'https://www.ledger.com/academy/security/the-safest-way-to-use-metamask',\n  },\n  {\n    name: 'Trezor',\n    icon: trezorLogo,\n    url: 'https://wiki.trezor.io/Apps:MetaMask',\n  },\n  {\n    connector: gnosisSafe,\n    name: 'GnosisSafe',\n    icon: gnosisSafeLogo,\n  },\n  {\n    connector: frame,\n    name: 'Frame',\n    icon: frameLogo,\n  },\n  {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    icon: fortmaticLogo,\n    mobile: true,\n  },\n  {\n    connector: portis,\n    name: 'Portis',\n    icon: portisLogo,\n  },\n  {\n    connector: torus,\n    name: 'Torus',\n    icon: torusLogo,\n  },\n];\n"]},"metadata":{},"sourceType":"module"}