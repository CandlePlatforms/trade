{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/dual/AddLiquidityDual.tsx\",\n    _s = $RefreshSig$();\n\nimport { Widget } from 'components/widgets/Widget';\nimport { AddLiquidityDualStakeAmount } from 'elements/earn/pools/addLiquidity/dual/AddLiquidityDualStakeAmount';\nimport { useAppSelector } from 'redux/index';\nimport { getTokenById } from 'redux/bancor/bancor';\nimport { useState } from 'react';\nimport { AddLiquidityEmptyCTA } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyCTA';\nimport { AddLiquidityDualTokenPrices } from 'elements/earn/pools/addLiquidity/dual/AddLiquidityDualTokenPrices';\nimport BigNumber from 'bignumber.js';\nimport { useNavigation } from 'services/router';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLiquidityDual = _ref => {\n  _s();\n\n  let {\n    pool,\n    reserveBalances\n  } = _ref;\n  const [tknReserve, bntReserve] = pool.reserves;\n  const tkn = useAppSelector(state => getTokenById(state, tknReserve.address));\n  const bnt = useAppSelector(state => getTokenById(state, bntReserve.address));\n  const {\n    pushLiquidityError,\n    pushPools\n  } = useNavigation();\n  const [tknAmount, setTknAmount] = useState('');\n  const [bntAmount, setBntAmount] = useState('');\n  const [errorBalanceBnt, setErrorBalanceBnt] = useState('');\n  const [errorBalanceTkn, setErrorBalanceTkn] = useState('');\n\n  const bntTknRate = () => {\n    const rate = new BigNumber(reserveBalances.tknBalance).div(reserveBalances.bntBalance);\n    return rate.toString();\n  };\n\n  const tknWithUsd = () => {\n    var _tknWithUsd$usdPrice;\n\n    const tknWithUsd = { ...tkn\n    };\n\n    if (bnt && tknWithUsd && new BigNumber((_tknWithUsd$usdPrice = tknWithUsd.usdPrice) !== null && _tknWithUsd$usdPrice !== void 0 ? _tknWithUsd$usdPrice : 0).eq(0)) {\n      tknWithUsd.usdPrice = new BigNumber(bntTknRate()).div(bnt.usdPrice).toString();\n    }\n\n    return tknWithUsd;\n  };\n\n  if (!tkn || !bnt) {\n    pushLiquidityError();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    title: \"Add Liquidity\",\n    goBack: pushPools,\n    children: [/*#__PURE__*/_jsxDEV(AddLiquidityDualStakeAmount, {\n      tkn: tknWithUsd(),\n      bnt: bnt,\n      tknAmount: tknAmount,\n      setTknAmount: setTknAmount,\n      bntAmount: bntAmount,\n      setBntAmount: setBntAmount,\n      bntTknRate: bntTknRate(),\n      errorBalanceBnt: errorBalanceBnt,\n      setErrorBalanceBnt: setErrorBalanceBnt,\n      errorBalanceTkn: errorBalanceTkn,\n      setErrorBalanceTkn: setErrorBalanceTkn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-10 rounded bg-blue-0 dark:bg-blue-5 mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(AddLiquidityDualTokenPrices, {\n        bnt: bnt,\n        tkn: tknWithUsd(),\n        bntTknRate: bntTknRate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddLiquidityEmptyCTA, {\n        pool: pool,\n        bnt: bnt,\n        tkn: tknWithUsd(),\n        amountBnt: bntAmount,\n        amountTkn: tknAmount,\n        errorMsg: errorBalanceTkn || errorBalanceBnt ? 'Insufficient Balance' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLiquidityDual, \"zmbVheaC1IJ66h52m3kK8kjCfcc=\", false, function () {\n  return [useAppSelector, useAppSelector, useNavigation];\n});\n\n_c = AddLiquidityDual;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidityDual\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/dual/AddLiquidityDual.tsx"],"names":["Widget","AddLiquidityDualStakeAmount","useAppSelector","getTokenById","useState","AddLiquidityEmptyCTA","AddLiquidityDualTokenPrices","BigNumber","useNavigation","AddLiquidityDual","pool","reserveBalances","tknReserve","bntReserve","reserves","tkn","state","address","bnt","pushLiquidityError","pushPools","tknAmount","setTknAmount","bntAmount","setBntAmount","errorBalanceBnt","setErrorBalanceBnt","errorBalanceTkn","setErrorBalanceTkn","bntTknRate","rate","tknBalance","div","bntBalance","toString","tknWithUsd","usdPrice","eq"],"mappings":"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","sourcesContent":["import { Pool, Token } from 'services/observables/tokens';\nimport { Widget } from 'components/widgets/Widget';\nimport { AddLiquidityDualStakeAmount } from 'elements/earn/pools/addLiquidity/dual/AddLiquidityDualStakeAmount';\nimport { useAppSelector } from 'redux/index';\nimport { getTokenById } from 'redux/bancor/bancor';\nimport { useState } from 'react';\n\nimport { AddLiquidityEmptyCTA } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyCTA';\nimport { AddLiquidityDualTokenPrices } from 'elements/earn/pools/addLiquidity/dual/AddLiquidityDualTokenPrices';\nimport BigNumber from 'bignumber.js';\nimport { useNavigation } from 'services/router';\n\ninterface Props {\n  pool: Pool;\n  reserveBalances: { tknBalance: string; bntBalance: string };\n}\n\nexport const AddLiquidityDual = ({ pool, reserveBalances }: Props) => {\n  const [tknReserve, bntReserve] = pool.reserves;\n  const tkn = useAppSelector<Token | undefined>((state: any) =>\n    getTokenById(state, tknReserve.address)\n  );\n  const bnt = useAppSelector<Token | undefined>((state: any) =>\n    getTokenById(state, bntReserve.address)\n  );\n  const { pushLiquidityError, pushPools } = useNavigation();\n  const [tknAmount, setTknAmount] = useState('');\n  const [bntAmount, setBntAmount] = useState('');\n  const [errorBalanceBnt, setErrorBalanceBnt] = useState('');\n  const [errorBalanceTkn, setErrorBalanceTkn] = useState('');\n\n  const bntTknRate = () => {\n    const rate = new BigNumber(reserveBalances.tknBalance).div(\n      reserveBalances.bntBalance\n    );\n    return rate.toString();\n  };\n\n  const tknWithUsd = (): Token => {\n    const tknWithUsd = { ...tkn };\n    if (bnt && tknWithUsd && new BigNumber(tknWithUsd.usdPrice ?? 0).eq(0)) {\n      tknWithUsd.usdPrice = new BigNumber(bntTknRate())\n        .div(bnt.usdPrice!)\n        .toString();\n    }\n    return tknWithUsd as Token;\n  };\n\n  if (!tkn || !bnt) {\n    pushLiquidityError();\n    return <></>;\n  }\n\n  return (\n    <Widget title=\"Add Liquidity\" goBack={pushPools}>\n      <AddLiquidityDualStakeAmount\n        tkn={tknWithUsd()}\n        bnt={bnt}\n        tknAmount={tknAmount}\n        setTknAmount={setTknAmount}\n        bntAmount={bntAmount}\n        setBntAmount={setBntAmount}\n        bntTknRate={bntTknRate()}\n        errorBalanceBnt={errorBalanceBnt}\n        setErrorBalanceBnt={setErrorBalanceBnt}\n        errorBalanceTkn={errorBalanceTkn}\n        setErrorBalanceTkn={setErrorBalanceTkn}\n      />\n      <div className=\"p-10 rounded bg-blue-0 dark:bg-blue-5 mt-20\">\n        <AddLiquidityDualTokenPrices\n          bnt={bnt}\n          tkn={tknWithUsd()}\n          bntTknRate={bntTknRate()}\n        />\n        <AddLiquidityEmptyCTA\n          pool={pool}\n          bnt={bnt}\n          tkn={tknWithUsd()}\n          amountBnt={bntAmount}\n          amountTkn={tknAmount}\n          errorMsg={\n            errorBalanceTkn || errorBalanceBnt ? 'Insufficient Balance' : ''\n          }\n        />\n      </div>\n    </Widget>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}