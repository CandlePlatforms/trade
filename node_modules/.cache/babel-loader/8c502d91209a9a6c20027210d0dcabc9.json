{"ast":null,"code":"/* Autogenerated file. Do not edit manually. */\n\n/* tslint:disable */\n\n/* eslint-disable */\nimport { Contract, utils } from \"ethers\";\nconst _abi = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"zeroExAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"contract IEtherTokenV06\",\n    name: \"weth\",\n    type: \"address\"\n  }, {\n    internalType: \"contract IStaking\",\n    name: \"staking\",\n    type: \"address\"\n  }, {\n    internalType: \"contract FeeCollectorController\",\n    name: \"feeCollectorController\",\n    type: \"address\"\n  }, {\n    internalType: \"uint32\",\n    name: \"protocolFeeMultiplier\",\n    type: \"uint32\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"greedyTokensBloomFilter\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"orderHash\",\n    type: \"bytes32\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"maker\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"taker\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"feeRecipient\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"makerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"takerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint128\",\n    name: \"takerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    indexed: false,\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    indexed: false,\n    internalType: \"uint128\",\n    name: \"takerTokenFeeFilledAmount\",\n    type: \"uint128\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"protocolFeePaid\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"pool\",\n    type: \"bytes32\"\n  }],\n  name: \"LimitOrderFilled\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"orderHash\",\n    type: \"bytes32\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"maker\",\n    type: \"address\"\n  }],\n  name: \"OrderCancelled\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"address\",\n    name: \"maker\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"makerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"takerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"minValidSalt\",\n    type: \"uint256\"\n  }],\n  name: \"PairCancelledLimitOrders\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"address\",\n    name: \"maker\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"makerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"takerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"minValidSalt\",\n    type: \"uint256\"\n  }],\n  name: \"PairCancelledRfqOrders\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"orderHash\",\n    type: \"bytes32\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"maker\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"taker\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"makerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"takerToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint128\",\n    name: \"takerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    indexed: false,\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"pool\",\n    type: \"bytes32\"\n  }],\n  name: \"RfqOrderFilled\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"address\",\n    name: \"origin\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"address[]\",\n    name: \"addrs\",\n    type: \"address[]\"\n  }, {\n    indexed: false,\n    internalType: \"bool\",\n    name: \"allowed\",\n    type: \"bool\"\n  }],\n  name: \"RfqOrderOriginsAllowed\",\n  type: \"event\"\n}, {\n  inputs: [],\n  name: \"EIP712_DOMAIN_SEPARATOR\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"FEATURE_NAME\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"FEATURE_VERSION\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"GREEDY_TOKENS_BLOOM_FILTER\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"PROTOCOL_FEE_MULTIPLIER\",\n  outputs: [{\n    internalType: \"uint32\",\n    name: \"\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"takerTokenFillAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"address\",\n    name: \"taker\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }],\n  name: \"_fillLimitOrder\",\n  outputs: [{\n    internalType: \"uint128\",\n    name: \"takerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"takerTokenFillAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"address\",\n    name: \"taker\",\n    type: \"address\"\n  }],\n  name: \"_fillRfqOrder\",\n  outputs: [{\n    internalType: \"uint128\",\n    name: \"takerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder[]\",\n    name: \"orders\",\n    type: \"tuple[]\"\n  }],\n  name: \"batchCancelLimitOrders\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"contract IERC20TokenV06[]\",\n    name: \"makerTokens\",\n    type: \"address[]\"\n  }, {\n    internalType: \"contract IERC20TokenV06[]\",\n    name: \"takerTokens\",\n    type: \"address[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"minValidSalts\",\n    type: \"uint256[]\"\n  }],\n  name: \"batchCancelPairLimitOrders\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"contract IERC20TokenV06[]\",\n    name: \"makerTokens\",\n    type: \"address[]\"\n  }, {\n    internalType: \"contract IERC20TokenV06[]\",\n    name: \"takerTokens\",\n    type: \"address[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"minValidSalts\",\n    type: \"uint256[]\"\n  }],\n  name: \"batchCancelPairRfqOrders\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder[]\",\n    name: \"orders\",\n    type: \"tuple[]\"\n  }],\n  name: \"batchCancelRfqOrders\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder[]\",\n    name: \"orders\",\n    type: \"tuple[]\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature[]\",\n    name: \"signatures\",\n    type: \"tuple[]\"\n  }],\n  name: \"batchGetLimitOrderRelevantStates\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes32\",\n      name: \"orderHash\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"enum LibNativeOrder.OrderStatus\",\n      name: \"status\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFilledAmount\",\n      type: \"uint128\"\n    }],\n    internalType: \"struct LibNativeOrder.OrderInfo[]\",\n    name: \"orderInfos\",\n    type: \"tuple[]\"\n  }, {\n    internalType: \"uint128[]\",\n    name: \"actualFillableTakerTokenAmounts\",\n    type: \"uint128[]\"\n  }, {\n    internalType: \"bool[]\",\n    name: \"isSignatureValids\",\n    type: \"bool[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder[]\",\n    name: \"orders\",\n    type: \"tuple[]\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature[]\",\n    name: \"signatures\",\n    type: \"tuple[]\"\n  }],\n  name: \"batchGetRfqOrderRelevantStates\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes32\",\n      name: \"orderHash\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"enum LibNativeOrder.OrderStatus\",\n      name: \"status\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFilledAmount\",\n      type: \"uint128\"\n    }],\n    internalType: \"struct LibNativeOrder.OrderInfo[]\",\n    name: \"orderInfos\",\n    type: \"tuple[]\"\n  }, {\n    internalType: \"uint128[]\",\n    name: \"actualFillableTakerTokenAmounts\",\n    type: \"uint128[]\"\n  }, {\n    internalType: \"bool[]\",\n    name: \"isSignatureValids\",\n    type: \"bool[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }],\n  name: \"cancelLimitOrder\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"contract IERC20TokenV06\",\n    name: \"makerToken\",\n    type: \"address\"\n  }, {\n    internalType: \"contract IERC20TokenV06\",\n    name: \"takerToken\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"minValidSalt\",\n    type: \"uint256\"\n  }],\n  name: \"cancelPairLimitOrders\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"contract IERC20TokenV06\",\n    name: \"makerToken\",\n    type: \"address\"\n  }, {\n    internalType: \"contract IERC20TokenV06\",\n    name: \"takerToken\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"minValidSalt\",\n    type: \"uint256\"\n  }],\n  name: \"cancelPairRfqOrders\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }],\n  name: \"cancelRfqOrder\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"takerTokenFillAmount\",\n    type: \"uint128\"\n  }],\n  name: \"fillLimitOrder\",\n  outputs: [{\n    internalType: \"uint128\",\n    name: \"takerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"takerTokenFillAmount\",\n    type: \"uint128\"\n  }],\n  name: \"fillOrKillLimitOrder\",\n  outputs: [{\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"takerTokenFillAmount\",\n    type: \"uint128\"\n  }],\n  name: \"fillOrKillRfqOrder\",\n  outputs: [{\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"takerTokenFillAmount\",\n    type: \"uint128\"\n  }],\n  name: \"fillRfqOrder\",\n  outputs: [{\n    internalType: \"uint128\",\n    name: \"takerTokenFilledAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"uint128\",\n    name: \"makerTokenFilledAmount\",\n    type: \"uint128\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }],\n  name: \"getLimitOrderHash\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"orderHash\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }],\n  name: \"getLimitOrderInfo\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes32\",\n      name: \"orderHash\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"enum LibNativeOrder.OrderStatus\",\n      name: \"status\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFilledAmount\",\n      type: \"uint128\"\n    }],\n    internalType: \"struct LibNativeOrder.OrderInfo\",\n    name: \"orderInfo\",\n    type: \"tuple\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFeeAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"feeRecipient\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.LimitOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }],\n  name: \"getLimitOrderRelevantState\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes32\",\n      name: \"orderHash\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"enum LibNativeOrder.OrderStatus\",\n      name: \"status\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFilledAmount\",\n      type: \"uint128\"\n    }],\n    internalType: \"struct LibNativeOrder.OrderInfo\",\n    name: \"orderInfo\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"actualFillableTakerTokenAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"bool\",\n    name: \"isSignatureValid\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"getProtocolFeeMultiplier\",\n  outputs: [{\n    internalType: \"uint32\",\n    name: \"multiplier\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }],\n  name: \"getRfqOrderHash\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"orderHash\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }],\n  name: \"getRfqOrderInfo\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes32\",\n      name: \"orderHash\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"enum LibNativeOrder.OrderStatus\",\n      name: \"status\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFilledAmount\",\n      type: \"uint128\"\n    }],\n    internalType: \"struct LibNativeOrder.OrderInfo\",\n    name: \"orderInfo\",\n    type: \"tuple\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"contract IERC20TokenV06\",\n      name: \"makerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"contract IERC20TokenV06\",\n      name: \"takerToken\",\n      type: \"address\"\n    }, {\n      internalType: \"uint128\",\n      name: \"makerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerAmount\",\n      type: \"uint128\"\n    }, {\n      internalType: \"address\",\n      name: \"maker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"taker\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"txOrigin\",\n      type: \"address\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"pool\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"uint64\",\n      name: \"expiry\",\n      type: \"uint64\"\n    }, {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct LibNativeOrder.RfqOrder\",\n    name: \"order\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"enum LibSignature.SignatureType\",\n      name: \"signatureType\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint8\",\n      name: \"v\",\n      type: \"uint8\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"r\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"s\",\n      type: \"bytes32\"\n    }],\n    internalType: \"struct LibSignature.Signature\",\n    name: \"signature\",\n    type: \"tuple\"\n  }],\n  name: \"getRfqOrderRelevantState\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes32\",\n      name: \"orderHash\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"enum LibNativeOrder.OrderStatus\",\n      name: \"status\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint128\",\n      name: \"takerTokenFilledAmount\",\n      type: \"uint128\"\n    }],\n    internalType: \"struct LibNativeOrder.OrderInfo\",\n    name: \"orderInfo\",\n    type: \"tuple\"\n  }, {\n    internalType: \"uint128\",\n    name: \"actualFillableTakerTokenAmount\",\n    type: \"uint128\"\n  }, {\n    internalType: \"bool\",\n    name: \"isSignatureValid\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"migrate\",\n  outputs: [{\n    internalType: \"bytes4\",\n    name: \"success\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address[]\",\n    name: \"origins\",\n    type: \"address[]\"\n  }, {\n    internalType: \"bool\",\n    name: \"allowed\",\n    type: \"bool\"\n  }],\n  name: \"registerAllowedRfqOrigins\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32[]\",\n    name: \"poolIds\",\n    type: \"bytes32[]\"\n  }],\n  name: \"transferProtocolFeesForPools\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nexport class ExchangeProxy__factory {\n  static createInterface() {\n    return new utils.Interface(_abi);\n  }\n\n  static connect(address, signerOrProvider) {\n    return new Contract(address, _abi, signerOrProvider);\n  }\n\n}\nExchangeProxy__factory.abi = _abi;","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/services/web3/abis/types/factories/ExchangeProxy__factory.ts"],"names":["Contract","utils","_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","ExchangeProxy__factory","createInterface","Interface","connect","address","signerOrProvider","abi"],"mappings":"AAAA;;AACA;;AACA;AAEA,SAASA,QAAT,EAA2BC,KAA3B,QAAwC,QAAxC;AAIA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADM,EAMN;AACEF,IAAAA,YAAY,EAAE,yBADhB;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANM,EAWN;AACEF,IAAAA,YAAY,EAAE,mBADhB;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXM,EAgBN;AACEF,IAAAA,YAAY,EAAE,iCADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAhBM,EAqBN;AACEF,IAAAA,YAAY,EAAE,QADhB;AAEEC,IAAAA,IAAI,EAAE,uBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GArBM,EA0BN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,yBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA1BM,CADV;AAiCEC,EAAAA,eAAe,EAAE,YAjCnB;AAkCED,EAAAA,IAAI,EAAE;AAlCR,CADW,EAqCX;AACEE,EAAAA,SAAS,EAAE,KADb;AAEEL,EAAAA,MAAM,EAAE,CACN;AACEM,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,WAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADM,EAON;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPM,EAaN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbM,EAmBN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,cAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAnBM,EAyBN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAzBM,EA+BN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GA/BM,EAqCN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,wBAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GArCM,EA2CN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,wBAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GA3CM,EAiDN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,2BAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAjDM,EAuDN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,iBAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAvDM,EA6DN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GA7DM,CAFV;AAsEED,EAAAA,IAAI,EAAE,kBAtER;AAuEEC,EAAAA,IAAI,EAAE;AAvER,CArCW,EA8GX;AACEE,EAAAA,SAAS,EAAE,KADb;AAEEL,EAAAA,MAAM,EAAE,CACN;AACEM,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,WAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADM,EAON;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPM,CAFV;AAgBED,EAAAA,IAAI,EAAE,gBAhBR;AAiBEC,EAAAA,IAAI,EAAE;AAjBR,CA9GW,EAiIX;AACEE,EAAAA,SAAS,EAAE,KADb;AAEEL,EAAAA,MAAM,EAAE,CACN;AACEM,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADM,EAON;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPM,EAaN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbM,EAmBN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,cAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAnBM,CAFV;AA4BED,EAAAA,IAAI,EAAE,0BA5BR;AA6BEC,EAAAA,IAAI,EAAE;AA7BR,CAjIW,EAgKX;AACEE,EAAAA,SAAS,EAAE,KADb;AAEEL,EAAAA,MAAM,EAAE,CACN;AACEM,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADM,EAON;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPM,EAaN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbM,EAmBN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,cAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAnBM,CAFV;AA4BED,EAAAA,IAAI,EAAE,wBA5BR;AA6BEC,EAAAA,IAAI,EAAE;AA7BR,CAhKW,EA+LX;AACEE,EAAAA,SAAS,EAAE,KADb;AAEEL,EAAAA,MAAM,EAAE,CACN;AACEM,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,WAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADM,EAON;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPM,EAaN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbM,EAmBN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAnBM,EAyBN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAzBM,EA+BN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,wBAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GA/BM,EAqCN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,wBAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GArCM,EA2CN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GA3CM,CAFV;AAoDED,EAAAA,IAAI,EAAE,gBApDR;AAqDEC,EAAAA,IAAI,EAAE;AArDR,CA/LW,EAsPX;AACEE,EAAAA,SAAS,EAAE,KADb;AAEEL,EAAAA,MAAM,EAAE,CACN;AACEM,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,SAFhB;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADM,EAON;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,WAFhB;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPM,EAaN;AACEG,IAAAA,OAAO,EAAE,KADX;AAEEL,IAAAA,YAAY,EAAE,MAFhB;AAGEC,IAAAA,IAAI,EAAE,SAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbM,CAFV;AAsBED,EAAAA,IAAI,EAAE,wBAtBR;AAuBEC,EAAAA,IAAI,EAAE;AAvBR,CAtPW,EA+QX;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEE,EAAAA,IAAI,EAAE,yBAFR;AAGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAHX;AAUEC,EAAAA,eAAe,EAAE,MAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CA/QW,EA4RX;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEE,EAAAA,IAAI,EAAE,cAFR;AAGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,QADhB;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAHX;AAUEC,EAAAA,eAAe,EAAE,MAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CA5RW,EAySX;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEE,EAAAA,IAAI,EAAE,iBAFR;AAGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAHX;AAUEC,EAAAA,eAAe,EAAE,MAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CAzSW,EAsTX;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEE,EAAAA,IAAI,EAAE,4BAFR;AAGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAHX;AAUEC,EAAAA,eAAe,EAAE,MAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CAtTW,EAmUX;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEE,EAAAA,IAAI,EAAE,yBAFR;AAGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,QADhB;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAHX;AAUEC,EAAAA,eAAe,EAAE,MAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CAnUW,EAgVX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,kCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,OAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,EAoEN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GApEM,EA+FN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,sBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA/FM,EAoGN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GApGM,EAyGN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAzGM,CADV;AAgHED,EAAAA,IAAI,EAAE,iBAhHR;AAiHEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,EAMP;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANO,CAjHX;AA6HEC,EAAAA,eAAe,EAAE,SA7HnB;AA8HED,EAAAA,IAAI,EAAE;AA9HR,CAhVW,EAgdX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,gCArDhB;AAsDEC,IAAAA,IAAI,EAAE,OAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,EA0DN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GA1DM,EAqFN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,sBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GArFM,EA0FN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA1FM,CADV;AAiGED,EAAAA,IAAI,EAAE,eAjGR;AAkGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,EAMP;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANO,CAlGX;AA8GEC,EAAAA,eAAe,EAAE,YA9GnB;AA+GED,EAAAA,IAAI,EAAE;AA/GR,CAhdW,EAikBX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,oCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,QAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,CADV;AAsEED,EAAAA,IAAI,EAAE,wBAtER;AAuEEK,EAAAA,OAAO,EAAE,EAvEX;AAwEEH,EAAAA,eAAe,EAAE,YAxEnB;AAyEED,EAAAA,IAAI,EAAE;AAzER,CAjkBW,EA4oBX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,YAAY,EAAE,2BADhB;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADM,EAMN;AACEF,IAAAA,YAAY,EAAE,2BADhB;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANM,EAWN;AACEF,IAAAA,YAAY,EAAE,WADhB;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXM,CADV;AAkBED,EAAAA,IAAI,EAAE,4BAlBR;AAmBEK,EAAAA,OAAO,EAAE,EAnBX;AAoBEH,EAAAA,eAAe,EAAE,YApBnB;AAqBED,EAAAA,IAAI,EAAE;AArBR,CA5oBW,EAmqBX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,YAAY,EAAE,2BADhB;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADM,EAMN;AACEF,IAAAA,YAAY,EAAE,2BADhB;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANM,EAWN;AACEF,IAAAA,YAAY,EAAE,WADhB;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXM,CADV;AAkBED,EAAAA,IAAI,EAAE,0BAlBR;AAmBEK,EAAAA,OAAO,EAAE,EAnBX;AAoBEH,EAAAA,eAAe,EAAE,YApBnB;AAqBED,EAAAA,IAAI,EAAE;AArBR,CAnqBW,EA0rBX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,kCArDhB;AAsDEC,IAAAA,IAAI,EAAE,QAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,CADV;AA4DED,EAAAA,IAAI,EAAE,sBA5DR;AA6DEK,EAAAA,OAAO,EAAE,EA7DX;AA8DEH,EAAAA,eAAe,EAAE,YA9DnB;AA+DED,EAAAA,IAAI,EAAE;AA/DR,CA1rBW,EA2vBX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,oCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,QAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,EAoEN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,iCAvBhB;AAwBEC,IAAAA,IAAI,EAAE,YAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GApEM,CADV;AAiGED,EAAAA,IAAI,EAAE,kCAjGR;AAkGEK,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,wBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,CADd;AAkBEF,IAAAA,YAAY,EAAE,mCAlBhB;AAmBEC,IAAAA,IAAI,EAAE,YAnBR;AAoBEC,IAAAA,IAAI,EAAE;AApBR,GADO,EAuBP;AACEF,IAAAA,YAAY,EAAE,WADhB;AAEEC,IAAAA,IAAI,EAAE,iCAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAvBO,EA4BP;AACEF,IAAAA,YAAY,EAAE,QADhB;AAEEC,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA5BO,CAlGX;AAoIEC,EAAAA,eAAe,EAAE,MApInB;AAqIED,EAAAA,IAAI,EAAE;AArIR,CA3vBW,EAk4BX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,kCArDhB;AAsDEC,IAAAA,IAAI,EAAE,QAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,EA0DN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,iCAvBhB;AAwBEC,IAAAA,IAAI,EAAE,YAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GA1DM,CADV;AAuFED,EAAAA,IAAI,EAAE,gCAvFR;AAwFEK,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,wBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,CADd;AAkBEF,IAAAA,YAAY,EAAE,mCAlBhB;AAmBEC,IAAAA,IAAI,EAAE,YAnBR;AAoBEC,IAAAA,IAAI,EAAE;AApBR,GADO,EAuBP;AACEF,IAAAA,YAAY,EAAE,WADhB;AAEEC,IAAAA,IAAI,EAAE,iCAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAvBO,EA4BP;AACEF,IAAAA,YAAY,EAAE,QADhB;AAEEC,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA5BO,CAxFX;AA0HEC,EAAAA,eAAe,EAAE,MA1HnB;AA2HED,EAAAA,IAAI,EAAE;AA3HR,CAl4BW,EA+/BX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,kCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,OAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,CADV;AAsEED,EAAAA,IAAI,EAAE,kBAtER;AAuEEK,EAAAA,OAAO,EAAE,EAvEX;AAwEEH,EAAAA,eAAe,EAAE,YAxEnB;AAyEED,EAAAA,IAAI,EAAE;AAzER,CA//BW,EA0kCX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,YAAY,EAAE,yBADhB;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADM,EAMN;AACEF,IAAAA,YAAY,EAAE,yBADhB;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANM,EAWN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXM,CADV;AAkBED,EAAAA,IAAI,EAAE,uBAlBR;AAmBEK,EAAAA,OAAO,EAAE,EAnBX;AAoBEH,EAAAA,eAAe,EAAE,YApBnB;AAqBED,EAAAA,IAAI,EAAE;AArBR,CA1kCW,EAimCX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,YAAY,EAAE,yBADhB;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADM,EAMN;AACEF,IAAAA,YAAY,EAAE,yBADhB;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANM,EAWN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXM,CADV;AAkBED,EAAAA,IAAI,EAAE,qBAlBR;AAmBEK,EAAAA,OAAO,EAAE,EAnBX;AAoBEH,EAAAA,eAAe,EAAE,YApBnB;AAqBED,EAAAA,IAAI,EAAE;AArBR,CAjmCW,EAwnCX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,gCArDhB;AAsDEC,IAAAA,IAAI,EAAE,OAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,CADV;AA4DED,EAAAA,IAAI,EAAE,gBA5DR;AA6DEK,EAAAA,OAAO,EAAE,EA7DX;AA8DEH,EAAAA,eAAe,EAAE,YA9DnB;AA+DED,EAAAA,IAAI,EAAE;AA/DR,CAxnCW,EAyrCX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,kCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,OAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,EAoEN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GApEM,EA+FN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,sBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA/FM,CADV;AAsGED,EAAAA,IAAI,EAAE,gBAtGR;AAuGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,EAMP;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANO,CAvGX;AAmHEC,EAAAA,eAAe,EAAE,SAnHnB;AAoHED,EAAAA,IAAI,EAAE;AApHR,CAzrCW,EA+yCX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,kCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,OAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,EAoEN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GApEM,EA+FN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,sBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA/FM,CADV;AAsGED,EAAAA,IAAI,EAAE,sBAtGR;AAuGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAvGX;AA8GEC,EAAAA,eAAe,EAAE,SA9GnB;AA+GED,EAAAA,IAAI,EAAE;AA/GR,CA/yCW,EAg6CX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,gCArDhB;AAsDEC,IAAAA,IAAI,EAAE,OAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,EA0DN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GA1DM,EAqFN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,sBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GArFM,CADV;AA4FED,EAAAA,IAAI,EAAE,oBA5FR;AA6FEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CA7FX;AAoGEC,EAAAA,eAAe,EAAE,YApGnB;AAqGED,EAAAA,IAAI,EAAE;AArGR,CAh6CW,EAugDX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,gCArDhB;AAsDEC,IAAAA,IAAI,EAAE,OAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,EA0DN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GA1DM,EAqFN;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,sBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GArFM,CADV;AA4FED,EAAAA,IAAI,EAAE,cA5FR;AA6FEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,EAMP;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANO,CA7FX;AAyGEC,EAAAA,eAAe,EAAE,YAzGnB;AA0GED,EAAAA,IAAI,EAAE;AA1GR,CAvgDW,EAmnDX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,kCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,OAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,CADV;AAsEED,EAAAA,IAAI,EAAE,mBAtER;AAuEEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAvEX;AA8EEC,EAAAA,eAAe,EAAE,MA9EnB;AA+EED,EAAAA,IAAI,EAAE;AA/ER,CAnnDW,EAosDX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,kCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,OAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,CADV;AAsEED,EAAAA,IAAI,EAAE,mBAtER;AAuEEK,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,wBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,CADd;AAkBEF,IAAAA,YAAY,EAAE,iCAlBhB;AAmBEC,IAAAA,IAAI,EAAE,WAnBR;AAoBEC,IAAAA,IAAI,EAAE;AApBR,GADO,CAvEX;AA+FEC,EAAAA,eAAe,EAAE,MA/FnB;AAgGED,EAAAA,IAAI,EAAE;AAhGR,CApsDW,EAsyDX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,EAmDV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAnDU,EAwDV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAxDU,CADd;AA+DEF,IAAAA,YAAY,EAAE,kCA/DhB;AAgEEC,IAAAA,IAAI,EAAE,OAhER;AAiEEC,IAAAA,IAAI,EAAE;AAjER,GADM,EAoEN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GApEM,CADV;AAiGED,EAAAA,IAAI,EAAE,4BAjGR;AAkGEK,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,wBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,CADd;AAkBEF,IAAAA,YAAY,EAAE,iCAlBhB;AAmBEC,IAAAA,IAAI,EAAE,WAnBR;AAoBEC,IAAAA,IAAI,EAAE;AApBR,GADO,EAuBP;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,gCAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAvBO,EA4BP;AACEF,IAAAA,YAAY,EAAE,MADhB;AAEEC,IAAAA,IAAI,EAAE,kBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA5BO,CAlGX;AAoIEC,EAAAA,eAAe,EAAE,MApInB;AAqIED,EAAAA,IAAI,EAAE;AArIR,CAtyDW,EA66DX;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEE,EAAAA,IAAI,EAAE,0BAFR;AAGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,QADhB;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAHX;AAUEC,EAAAA,eAAe,EAAE,MAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CA76DW,EA07DX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,gCArDhB;AAsDEC,IAAAA,IAAI,EAAE,OAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,CADV;AA4DED,EAAAA,IAAI,EAAE,iBA5DR;AA6DEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CA7DX;AAoEEC,EAAAA,eAAe,EAAE,MApEnB;AAqEED,EAAAA,IAAI,EAAE;AArER,CA17DW,EAigEX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,gCArDhB;AAsDEC,IAAAA,IAAI,EAAE,OAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,CADV;AA4DED,EAAAA,IAAI,EAAE,iBA5DR;AA6DEK,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,wBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,CADd;AAkBEF,IAAAA,YAAY,EAAE,iCAlBhB;AAmBEC,IAAAA,IAAI,EAAE,WAnBR;AAoBEC,IAAAA,IAAI,EAAE;AApBR,GADO,CA7DX;AAqFEC,EAAAA,eAAe,EAAE,MArFnB;AAsFED,EAAAA,IAAI,EAAE;AAtFR,CAjgEW,EAylEX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEQ,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,yBADhB;AAEEC,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,EAqBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBU,EA0BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1BU,EA+BV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/BU,EAoCV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCU,EAyCV;AACEF,MAAAA,YAAY,EAAE,QADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCU,EA8CV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA9CU,CADd;AAqDEF,IAAAA,YAAY,EAAE,gCArDhB;AAsDEC,IAAAA,IAAI,EAAE,OAtDR;AAuDEC,IAAAA,IAAI,EAAE;AAvDR,GADM,EA0DN;AACEK,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,OADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,EAgBV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBU,CADd;AAuBEF,IAAAA,YAAY,EAAE,+BAvBhB;AAwBEC,IAAAA,IAAI,EAAE,WAxBR;AAyBEC,IAAAA,IAAI,EAAE;AAzBR,GA1DM,CADV;AAuFED,EAAAA,IAAI,EAAE,0BAvFR;AAwFEK,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,CACV;AACEP,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACEF,MAAAA,YAAY,EAAE,iCADhB;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACEF,MAAAA,YAAY,EAAE,SADhB;AAEEC,MAAAA,IAAI,EAAE,wBAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXU,CADd;AAkBEF,IAAAA,YAAY,EAAE,iCAlBhB;AAmBEC,IAAAA,IAAI,EAAE,WAnBR;AAoBEC,IAAAA,IAAI,EAAE;AApBR,GADO,EAuBP;AACEF,IAAAA,YAAY,EAAE,SADhB;AAEEC,IAAAA,IAAI,EAAE,gCAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAvBO,EA4BP;AACEF,IAAAA,YAAY,EAAE,MADhB;AAEEC,IAAAA,IAAI,EAAE,kBAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA5BO,CAxFX;AA0HEC,EAAAA,eAAe,EAAE,MA1HnB;AA2HED,EAAAA,IAAI,EAAE;AA3HR,CAzlEW,EAstEX;AACEH,EAAAA,MAAM,EAAE,EADV;AAEEE,EAAAA,IAAI,EAAE,SAFR;AAGEK,EAAAA,OAAO,EAAE,CACP;AACEN,IAAAA,YAAY,EAAE,QADhB;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADO,CAHX;AAUEC,EAAAA,eAAe,EAAE,YAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CAttEW,EAmuEX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,YAAY,EAAE,WADhB;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADM,EAMN;AACEF,IAAAA,YAAY,EAAE,MADhB;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANM,CADV;AAaED,EAAAA,IAAI,EAAE,2BAbR;AAcEK,EAAAA,OAAO,EAAE,EAdX;AAeEH,EAAAA,eAAe,EAAE,YAfnB;AAgBED,EAAAA,IAAI,EAAE;AAhBR,CAnuEW,EAqvEX;AACEH,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,YAAY,EAAE,WADhB;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADM,CADV;AAQED,EAAAA,IAAI,EAAE,8BARR;AASEK,EAAAA,OAAO,EAAE,EATX;AAUEH,EAAAA,eAAe,EAAE,YAVnB;AAWED,EAAAA,IAAI,EAAE;AAXR,CArvEW,CAAb;AAowEA,OAAO,MAAMM,sBAAN,CAA6B;AAEZ,SAAfC,eAAe,GAA2B;AAC/C,WAAO,IAAIZ,KAAK,CAACa,SAAV,CAAoBZ,IAApB,CAAP;AACD;;AACa,SAAPa,OAAO,CACZC,OADY,EAEZC,gBAFY,EAGG;AACf,WAAO,IAAIjB,QAAJ,CAAagB,OAAb,EAAsBd,IAAtB,EAA4Be,gBAA5B,CAAP;AACD;;AAViC;AAAvBL,sB,CACKM,G,GAAMhB,I","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { ExchangeProxy, ExchangeProxyInterface } from \"../ExchangeProxy\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"zeroExAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IEtherTokenV06\",\n        name: \"weth\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IStaking\",\n        name: \"staking\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract FeeCollectorController\",\n        name: \"feeCollectorController\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"protocolFeeMultiplier\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"greedyTokensBloomFilter\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"maker\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"taker\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"feeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"makerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"takerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint128\",\n        name: \"takerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint128\",\n        name: \"takerTokenFeeFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"protocolFeePaid\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"pool\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"LimitOrderFilled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"maker\",\n        type: \"address\",\n      },\n    ],\n    name: \"OrderCancelled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"maker\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"makerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"takerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"minValidSalt\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PairCancelledLimitOrders\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"maker\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"makerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"takerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"minValidSalt\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PairCancelledRfqOrders\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"maker\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"taker\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"makerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"takerToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint128\",\n        name: \"takerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"pool\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RfqOrderFilled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"origin\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"addrs\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"allowed\",\n        type: \"bool\",\n      },\n    ],\n    name: \"RfqOrderOriginsAllowed\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"EIP712_DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"FEATURE_NAME\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"FEATURE_VERSION\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"GREEDY_TOKENS_BLOOM_FILTER\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PROTOCOL_FEE_MULTIPLIER\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFillAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"address\",\n        name: \"taker\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"_fillLimitOrder\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFillAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"address\",\n        name: \"taker\",\n        type: \"address\",\n      },\n    ],\n    name: \"_fillRfqOrder\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder[]\",\n        name: \"orders\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"batchCancelLimitOrders\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20TokenV06[]\",\n        name: \"makerTokens\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"contract IERC20TokenV06[]\",\n        name: \"takerTokens\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"minValidSalts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"batchCancelPairLimitOrders\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20TokenV06[]\",\n        name: \"makerTokens\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"contract IERC20TokenV06[]\",\n        name: \"takerTokens\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"minValidSalts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"batchCancelPairRfqOrders\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder[]\",\n        name: \"orders\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"batchCancelRfqOrders\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder[]\",\n        name: \"orders\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature[]\",\n        name: \"signatures\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"batchGetLimitOrderRelevantStates\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"orderHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum LibNativeOrder.OrderStatus\",\n            name: \"status\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFilledAmount\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.OrderInfo[]\",\n        name: \"orderInfos\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"uint128[]\",\n        name: \"actualFillableTakerTokenAmounts\",\n        type: \"uint128[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"isSignatureValids\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder[]\",\n        name: \"orders\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature[]\",\n        name: \"signatures\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"batchGetRfqOrderRelevantStates\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"orderHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum LibNativeOrder.OrderStatus\",\n            name: \"status\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFilledAmount\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.OrderInfo[]\",\n        name: \"orderInfos\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"uint128[]\",\n        name: \"actualFillableTakerTokenAmounts\",\n        type: \"uint128[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"isSignatureValids\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"cancelLimitOrder\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20TokenV06\",\n        name: \"makerToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20TokenV06\",\n        name: \"takerToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minValidSalt\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancelPairLimitOrders\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20TokenV06\",\n        name: \"makerToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20TokenV06\",\n        name: \"takerToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minValidSalt\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancelPairRfqOrders\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"cancelRfqOrder\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFillAmount\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"fillLimitOrder\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFillAmount\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"fillOrKillLimitOrder\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFillAmount\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"fillOrKillRfqOrder\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFillAmount\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"fillRfqOrder\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"takerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"makerTokenFilledAmount\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"getLimitOrderHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"getLimitOrderInfo\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"orderHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum LibNativeOrder.OrderStatus\",\n            name: \"status\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFilledAmount\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.OrderInfo\",\n        name: \"orderInfo\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFeeAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"feeRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.LimitOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"getLimitOrderRelevantState\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"orderHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum LibNativeOrder.OrderStatus\",\n            name: \"status\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFilledAmount\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.OrderInfo\",\n        name: \"orderInfo\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"actualFillableTakerTokenAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"isSignatureValid\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getProtocolFeeMultiplier\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"multiplier\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"getRfqOrderHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"orderHash\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"getRfqOrderInfo\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"orderHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum LibNativeOrder.OrderStatus\",\n            name: \"status\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFilledAmount\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.OrderInfo\",\n        name: \"orderInfo\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"makerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IERC20TokenV06\",\n            name: \"takerToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"makerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerAmount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"address\",\n            name: \"maker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"taker\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"txOrigin\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"pool\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"expiry\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"salt\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.RfqOrder\",\n        name: \"order\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"enum LibSignature.SignatureType\",\n            name: \"signatureType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct LibSignature.Signature\",\n        name: \"signature\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"getRfqOrderRelevantState\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"orderHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum LibNativeOrder.OrderStatus\",\n            name: \"status\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"takerTokenFilledAmount\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct LibNativeOrder.OrderInfo\",\n        name: \"orderInfo\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"actualFillableTakerTokenAmount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"isSignatureValid\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"migrate\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"success\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"origins\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"allowed\",\n        type: \"bool\",\n      },\n    ],\n    name: \"registerAllowedRfqOrigins\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32[]\",\n        name: \"poolIds\",\n        type: \"bytes32[]\",\n      },\n    ],\n    name: \"transferProtocolFeesForPools\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ExchangeProxy__factory {\n  static readonly abi = _abi;\n  static createInterface(): ExchangeProxyInterface {\n    return new utils.Interface(_abi) as ExchangeProxyInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ExchangeProxy {\n    return new Contract(address, _abi, signerOrProvider) as ExchangeProxy;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}