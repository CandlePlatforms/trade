{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/notifications/NotificationsMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport { Popover } from '@headlessui/react';\nimport { DropdownTransition } from 'components/transitions/DropdownTransition';\nimport { ReactComponent as IconBell } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/bell.svg\";\nimport { useAppSelector } from 'redux/index';\nimport { NotificationType, removeNotification, setNotifications, setStatus } from 'redux/notification/notification';\nimport { NotificationContent } from 'elements/notifications/NotificationContent';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { ModalFullscreen } from 'components/modalFullscreen/ModalFullscreen';\nimport { useInterval } from 'hooks/useInterval';\nimport { web3 } from 'services/web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotificationsMenu = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const notifications = useAppSelector(state => state.notification.notifications);\n\n  const checkStatus = async notification => {\n    if (!notification.txHash) return;\n\n    try {\n      const tx = await web3.provider.getTransactionReceipt(notification.txHash);\n\n      if (tx !== null) {\n        var _notification$updated, _notification$updated2, _notification$updated3, _notification$updated4;\n\n        dispatch(setStatus({\n          id: notification.id,\n          type: tx.status ? NotificationType.success : NotificationType.error,\n          title: tx.status ? (_notification$updated = notification.updatedInfo) === null || _notification$updated === void 0 ? void 0 : _notification$updated.successTitle : (_notification$updated2 = notification.updatedInfo) === null || _notification$updated2 === void 0 ? void 0 : _notification$updated2.errorTitle,\n          msg: tx.status ? (_notification$updated3 = notification.updatedInfo) === null || _notification$updated3 === void 0 ? void 0 : _notification$updated3.successMsg : (_notification$updated4 = notification.updatedInfo) === null || _notification$updated4 === void 0 ? void 0 : _notification$updated4.errorMsg\n        }));\n      }\n    } catch (e) {}\n  };\n\n  useInterval(async () => {\n    notifications.filter(n => n.type === NotificationType.pending).forEach(n => checkStatus(n));\n  }, 2000);\n\n  const title = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(setNotifications([])),\n      className: \"text-12 underline\",\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const history = notifications.map((notification, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContent, {\n        data: notification,\n        onRemove: id => dispatch(removeNotification(id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), notifications.length > index + 1 && /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"my-10 border-grey-3 border-opacity-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  });\n\n  const hasPendingTx = () => notifications.some(n => n.type === NotificationType.pending);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Popover, {\n      className: \"hidden md:block relative\",\n      children: [/*#__PURE__*/_jsxDEV(Popover.Button, {\n        className: \"relative flex items-center\",\n        children: [hasPendingTx() && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute flex items-center justify-center h-[8px] w-[8px] top-[-5px] right-[-5px]\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"animate-ping absolute inline-flex h-full w-full rounded-full bg-error opacity-75\",\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"relative inline-flex rounded-full h-[6px] w-[6px] bg-error\",\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconBell, {\n          className: \"w-[20px]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownTransition, {\n        children: /*#__PURE__*/_jsxDEV(Popover.Panel, {\n          static: true,\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-bubble\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"-mr-18 pr-18 max-h-[400px] overflow-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-header flex justify-between text-16 font-semibold\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), history]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        className: \"flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(IconBell, {\n          className: \"w-[22px]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFullscreen, {\n        title: title,\n        setIsOpen: setShowModal,\n        isOpen: showModal,\n        showHeader: true,\n        children: history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationsMenu, \"96mUTv4evYrGlnYmLh1ClpOhwtM=\", false, function () {\n  return [useDispatch, useAppSelector, useInterval];\n});\n\n_c = NotificationsMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsMenu\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/notifications/NotificationsMenu.tsx"],"names":["Popover","DropdownTransition","useAppSelector","NotificationType","removeNotification","setNotifications","setStatus","NotificationContent","useDispatch","useState","ModalFullscreen","useInterval","web3","NotificationsMenu","dispatch","showModal","setShowModal","notifications","state","notification","checkStatus","txHash","tx","provider","getTransactionReceipt","id","type","status","success","error","title","updatedInfo","successTitle","errorTitle","msg","successMsg","errorMsg","e","filter","n","pending","forEach","history","map","index","length","hasPendingTx","some"],"mappings":"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","sourcesContent":["import { Popover } from '@headlessui/react';\nimport { DropdownTransition } from 'components/transitions/DropdownTransition';\nimport { ReactComponent as IconBell } from 'assets/icons/bell.svg';\nimport { useAppSelector } from 'redux/index';\nimport {\n  Notification,\n  NotificationType,\n  removeNotification,\n  setNotifications,\n  setStatus,\n} from 'redux/notification/notification';\nimport { NotificationContent } from 'elements/notifications/NotificationContent';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { ModalFullscreen } from 'components/modalFullscreen/ModalFullscreen';\nimport { useInterval } from 'hooks/useInterval';\nimport { web3 } from 'services/web3';\n\nexport const NotificationsMenu = () => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const notifications = useAppSelector<Notification[]>(\n    (state) => state.notification.notifications\n  );\n\n  const checkStatus = async (notification: Notification) => {\n    if (!notification.txHash) return;\n    try {\n      const tx = await web3.provider.getTransactionReceipt(notification.txHash);\n      if (tx !== null) {\n        dispatch(\n          setStatus({\n            id: notification.id,\n            type: tx.status ? NotificationType.success : NotificationType.error,\n            title: tx.status\n              ? notification.updatedInfo?.successTitle\n              : notification.updatedInfo?.errorTitle,\n            msg: tx.status\n              ? notification.updatedInfo?.successMsg\n              : notification.updatedInfo?.errorMsg,\n          })\n        );\n      }\n    } catch (e: any) {}\n  };\n\n  useInterval(async () => {\n    notifications\n      .filter((n) => n.type === NotificationType.pending)\n      .forEach((n) => checkStatus(n));\n  }, 2000);\n\n  const title = (\n    <>\n      <span>Notifications</span>\n      <button\n        onClick={() => dispatch(setNotifications([]))}\n        className=\"text-12 underline\"\n      >\n        clear\n      </button>\n    </>\n  );\n\n  const history = notifications.map((notification, index) => {\n    return (\n      <div key={notification.id}>\n        <NotificationContent\n          data={notification}\n          onRemove={(id: string) => dispatch(removeNotification(id))}\n        />\n        {notifications.length > index + 1 && (\n          <hr className=\"my-10 border-grey-3 border-opacity-50\" />\n        )}\n      </div>\n    );\n  });\n\n  const hasPendingTx = () =>\n    notifications.some((n) => n.type === NotificationType.pending);\n\n  return (\n    <>\n      <Popover className=\"hidden md:block relative\">\n        <Popover.Button className=\"relative flex items-center\">\n          {hasPendingTx() && (\n            <span className=\"absolute flex items-center justify-center h-[8px] w-[8px] top-[-5px] right-[-5px]\">\n              <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-error opacity-75\">\n                &nbsp;\n              </span>\n              <span className=\"relative inline-flex rounded-full h-[6px] w-[6px] bg-error\">\n                &nbsp;\n              </span>\n            </span>\n          )}\n\n          <IconBell className=\"w-[20px]\" />\n        </Popover.Button>\n\n        <DropdownTransition>\n          <Popover.Panel static className=\"dropdown-menu\">\n            <div className=\"dropdown-bubble\" />\n\n            <div className=\"-mr-18 pr-18 max-h-[400px] overflow-auto\">\n              <div className=\"dropdown-header flex justify-between text-16 font-semibold\">\n                {title}\n              </div>\n\n              {history}\n            </div>\n          </Popover.Panel>\n        </DropdownTransition>\n      </Popover>\n\n      <div className=\"md:hidden\">\n        <button\n          onClick={() => setShowModal(true)}\n          className=\"flex items-center\"\n        >\n          <IconBell className=\"w-[22px]\" />\n        </button>\n\n        <ModalFullscreen\n          title={title}\n          setIsOpen={setShowModal}\n          isOpen={showModal}\n          showHeader\n        >\n          {history}\n        </ModalFullscreen>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}