{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/modalCreatePool/ModalCreatePool.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useAppSelector } from 'redux/index';\nimport { ReactComponent as IconPlus } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/plus-circle.svg\";\nimport { createPool } from 'services/web3/liquidity/liquidity';\nimport { useWeb3React } from '@web3-react/core';\nimport { useDispatch } from 'react-redux';\nimport { EthNetworks } from 'services/web3/types';\nimport { getNetworkVariables, ropstenTokens } from 'services/web3/config';\nimport { SelectToken } from 'components/selectToken/SelectToken';\nimport { InputField } from 'components/inputField/InputField';\nimport { Modal } from 'components/modal/Modal';\nimport { ownershipNotification, poolCreateNotification, poolExistNotification, poolFailedNotification, rejectNotification, setFeeNotification } from 'services/notifications/notifications';\nimport { getPools } from 'redux/bancor/pool';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModalCreatePool = () => {\n  _s();\n\n  var _errorText;\n\n  const {\n    chainId\n  } = useWeb3React();\n  const account = useAppSelector(state => state.user.account);\n  const [isOpen, setIsOpen] = useState(false);\n  const tokens = useAppSelector(state => state.bancor.tokens);\n  const allTokens = useAppSelector(state => state.bancor.allTokens);\n  const [bnt, setBNT] = useState();\n  const [token, setToken] = useState(null);\n  const [fee, setFee] = useState('0.2');\n  const pools = useAppSelector(getPools);\n  const dispatch = useDispatch();\n\n  const confirm = async () => {\n    //isCreateDisabled() TS fails\n    if (!account || !chainId || !token) return;\n    await createPool(token, (Number(fee) / 100).toString(), chainId, () => poolExistNotification(dispatch), txHash => poolCreateNotification(dispatch, txHash), txHash => ownershipNotification(dispatch, txHash), txHash => setFeeNotification(dispatch, txHash), () => rejectNotification(dispatch), () => poolFailedNotification(dispatch));\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const networkVars = getNetworkVariables(chainId ? chainId : EthNetworks.Mainnet);\n    setBNT(tokens.find(x => x.address === networkVars.bntToken));\n  }, [tokens, chainId]);\n  const errorText = useCallback(() => {\n    if (token && pools.findIndex(x => x.reserves[0].address === token.address) !== -1) {\n      return 'Pool Already Exists';\n    }\n  }, [token, pools]);\n\n  const isCreateDisabled = () => {\n    const numFee = Number(fee);\n    return !account || !chainId || !token || !fee || numFee > 3 || numFee < 0 || !!errorText();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-outline-secondary rounded-[12px] h-[35px]\",\n      onClick: () => setIsOpen(true),\n      children: \"Create Pool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      setIsOpen: setIsOpen,\n      title: \"Create Pool\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-14\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-10 mb-30\",\n          children: /*#__PURE__*/_jsxDEV(SelectToken, {\n            label: \"First Token\",\n            token: bnt,\n            selectable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"widget-block-icon\",\n            children: /*#__PURE__*/_jsxDEV(IconPlus, {\n              className: \"w-[25px] text-primary dark:text-primary-light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-30\",\n            children: /*#__PURE__*/_jsxDEV(SelectToken, {\n              label: \"Second Token\",\n              token: token,\n              tokens: chainId === EthNetworks.Ropsten ? ropstenTokens : allTokens,\n              setToken: setToken,\n              selectable: true,\n              startEmpty: true,\n              excludedTokens: tokens ? tokens.map(x => x.address) : []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center ml-15\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-grey-4\",\n            children: \"Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-[200px] my-20\",\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              input: fee,\n              setInput: setFee,\n              borderGrey: true,\n              format: true,\n              customClass: \"text-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => confirm(),\n          disabled: isCreateDisabled(),\n          className: \"btn-primary w-full\",\n          children: (_errorText = errorText()) !== null && _errorText !== void 0 ? _errorText : 'Create a Pool'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModalCreatePool, \"TYsRP5RoiwlId3LTqIs9dPNYpbc=\", false, function () {\n  return [useWeb3React, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useDispatch];\n});\n\n_c = ModalCreatePool;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCreatePool\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/modalCreatePool/ModalCreatePool.tsx"],"names":["useCallback","useEffect","useState","useAppSelector","createPool","useWeb3React","useDispatch","EthNetworks","getNetworkVariables","ropstenTokens","SelectToken","InputField","Modal","ownershipNotification","poolCreateNotification","poolExistNotification","poolFailedNotification","rejectNotification","setFeeNotification","getPools","ModalCreatePool","chainId","account","state","user","isOpen","setIsOpen","tokens","bancor","allTokens","bnt","setBNT","token","setToken","fee","setFee","pools","dispatch","confirm","Number","toString","txHash","networkVars","Mainnet","find","x","address","bntToken","errorText","findIndex","reserves","isCreateDisabled","numFee","Ropsten","map"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useAppSelector } from 'redux/index';\nimport { Pool, Token } from 'services/observables/tokens';\nimport { ReactComponent as IconPlus } from 'assets/icons/plus-circle.svg';\nimport { createPool } from 'services/web3/liquidity/liquidity';\nimport { useWeb3React } from '@web3-react/core';\nimport { useDispatch } from 'react-redux';\nimport { EthNetworks } from 'services/web3/types';\nimport { getNetworkVariables, ropstenTokens } from 'services/web3/config';\nimport { SelectToken } from 'components/selectToken/SelectToken';\nimport { InputField } from 'components/inputField/InputField';\nimport { Modal } from 'components/modal/Modal';\nimport {\n  ownershipNotification,\n  poolCreateNotification,\n  poolExistNotification,\n  poolFailedNotification,\n  rejectNotification,\n  setFeeNotification,\n} from 'services/notifications/notifications';\nimport { getPools } from 'redux/bancor/pool';\n\nexport const ModalCreatePool = () => {\n  const { chainId } = useWeb3React();\n  const account = useAppSelector<string | undefined>(\n    (state) => state.user.account\n  );\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const tokens = useAppSelector<Token[]>((state) => state.bancor.tokens);\n  const allTokens = useAppSelector<Token[]>((state) => state.bancor.allTokens);\n  const [bnt, setBNT] = useState<Token | undefined>();\n  const [token, setToken] = useState<Token | null>(null);\n  const [fee, setFee] = useState<string>('0.2');\n  const pools = useAppSelector<Pool[]>(getPools);\n  const dispatch = useDispatch();\n\n  const confirm = async () => {\n    //isCreateDisabled() TS fails\n    if (!account || !chainId || !token) return;\n\n    await createPool(\n      token,\n      (Number(fee) / 100).toString(),\n      chainId,\n      () => poolExistNotification(dispatch),\n      (txHash: string) => poolCreateNotification(dispatch, txHash),\n      (txHash: string) => ownershipNotification(dispatch, txHash),\n      (txHash: string) => setFeeNotification(dispatch, txHash),\n      () => rejectNotification(dispatch),\n      () => poolFailedNotification(dispatch)\n    );\n\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const networkVars = getNetworkVariables(\n      chainId ? chainId : EthNetworks.Mainnet\n    );\n    setBNT(tokens.find((x) => x.address === networkVars.bntToken));\n  }, [tokens, chainId]);\n\n  const errorText = useCallback(() => {\n    if (\n      token &&\n      pools.findIndex((x) => x.reserves[0].address === token.address) !== -1\n    ) {\n      return 'Pool Already Exists';\n    }\n  }, [token, pools]);\n\n  const isCreateDisabled = () => {\n    const numFee = Number(fee);\n    return (\n      !account ||\n      !chainId ||\n      !token ||\n      !fee ||\n      numFee > 3 ||\n      numFee < 0 ||\n      !!errorText()\n    );\n  };\n\n  return (\n    <>\n      <button\n        className=\"btn-outline-secondary rounded-[12px] h-[35px]\"\n        onClick={() => setIsOpen(true)}\n      >\n        Create Pool\n      </button>\n      <Modal isOpen={isOpen} setIsOpen={setIsOpen} title=\"Create Pool\">\n        <div className=\"p-14\">\n          <div className=\"mx-10 mb-30\">\n            <SelectToken label=\"First Token\" token={bnt} selectable={false} />\n          </div>\n          <div className=\"widget-block\">\n            <div className=\"widget-block-icon\">\n              <IconPlus className=\"w-[25px] text-primary dark:text-primary-light\" />\n            </div>\n            <div className=\"my-30\">\n              <SelectToken\n                label=\"Second Token\"\n                token={token}\n                tokens={\n                  chainId === EthNetworks.Ropsten ? ropstenTokens : allTokens\n                }\n                setToken={setToken}\n                selectable\n                startEmpty\n                excludedTokens={tokens ? tokens.map((x) => x.address) : []}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex justify-between items-center ml-15\">\n            <div className=\"text-grey-4\">Fee</div>\n            <div className=\"max-w-[200px] my-20\">\n              <InputField\n                input={fee}\n                setInput={setFee}\n                borderGrey\n                format\n                customClass=\"text-right\"\n              />\n            </div>\n          </div>\n          <button\n            onClick={() => confirm()}\n            disabled={isCreateDisabled()}\n            className=\"btn-primary w-full\"\n          >\n            {errorText() ?? 'Create a Pool'}\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}