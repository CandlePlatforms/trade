{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep2.tsx\",\n    _s = $RefreshSig$();\n\nimport { TokenInputField } from 'components/tokenInputField/TokenInputField';\nimport { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLiquidityEmptyStep2 = _ref => {\n  _s();\n\n  let {\n    bnt,\n    tkn,\n    tknAmount,\n    setTknAmount,\n    bntAmount,\n    setBntAmount,\n    bntTknRate,\n    tknUsdPrice,\n    errorBalanceBnt,\n    setErrorBalanceBnt,\n    errorBalanceTkn,\n    setErrorBalanceTkn\n  } = _ref;\n  const [bntAmountUsd, setBntAmountUsd] = useState('');\n  const [tknAmountUsd, setTknAmountUsd] = useState('');\n  useEffect(() => {\n    setBntAmountUsd('');\n    setTknAmountUsd('');\n  }, [tknUsdPrice]);\n  const tknWithPrice = { ...tkn,\n    usdPrice: tknUsdPrice\n  };\n\n  const onBntAmountChange = amount => {\n    setBntAmount(amount);\n\n    if (amount === '') {\n      setTknAmount('');\n      setTknAmountUsd('');\n      return;\n    }\n\n    const tknAmount = new BigNumber(amount).times(bntTknRate).toString();\n    setTknAmount(tknAmount);\n    const tknAmountUsd = new BigNumber(tknAmount).times(tknUsdPrice).toString();\n    setTknAmountUsd(tknAmountUsd);\n  };\n\n  const onTknAmountChange = amount => {\n    setTknAmount(amount);\n\n    if (amount === '') {\n      setBntAmount('');\n      setBntAmountUsd('');\n      return;\n    }\n\n    const bntAmount = new BigNumber(amount).div(bntTknRate).toString();\n    setBntAmount(bntAmount);\n    const bntAmountUsd = new BigNumber(bntAmount).times(bnt.usdPrice).toString();\n    setBntAmountUsd(bntAmountUsd);\n  };\n\n  useEffect(() => {\n    if (new BigNumber(bntAmount).gt(bnt.balance || 0)) {\n      setErrorBalanceBnt('Insufficient Balance');\n    } else {\n      setErrorBalanceBnt('');\n    }\n\n    if (new BigNumber(tknAmount).gt(tkn.balance || 0)) {\n      setErrorBalanceTkn('Insufficient Balance');\n    } else {\n      setErrorBalanceTkn('');\n    }\n  }, [bntAmount, bnt.balance, setErrorBalanceBnt, tknAmount, tkn.balance, setErrorBalanceTkn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex justify-center items-center w-[34px] h-[34px] border-2 border-blue-0 dark:border-blue-1 rounded-full bg-white dark:bg-blue-4 text-16 ${tknUsdPrice ? 'text-primary' : 'text-grey-3'}`,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ml-10 font-medium ${!tknUsdPrice ? 'text-grey-3' : ''}`,\n        children: \"Enter stake amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(TokenInputField, {\n        input: bntAmount,\n        setInput: amount => onBntAmountChange(amount),\n        amountUsd: bntAmountUsd,\n        setAmountUsd: setBntAmountUsd,\n        token: bnt,\n        selectable: false,\n        disabled: !tknUsdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), errorBalanceBnt && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 pl-[140px] text-error\",\n        children: errorBalanceBnt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(TokenInputField, {\n        input: tknAmount,\n        setInput: amount => onTknAmountChange(amount),\n        amountUsd: tknAmountUsd,\n        setAmountUsd: setTknAmountUsd,\n        token: tknWithPrice,\n        selectable: false,\n        disabled: !tknUsdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), errorBalanceTkn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 pl-[140px] text-error\",\n        children: errorBalanceTkn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLiquidityEmptyStep2, \"Bxdh1nvzDt5olcIRN9PsZuH+XAk=\");\n\n_c = AddLiquidityEmptyStep2;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidityEmptyStep2\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep2.tsx"],"names":["TokenInputField","useEffect","useState","BigNumber","AddLiquidityEmptyStep2","bnt","tkn","tknAmount","setTknAmount","bntAmount","setBntAmount","bntTknRate","tknUsdPrice","errorBalanceBnt","setErrorBalanceBnt","errorBalanceTkn","setErrorBalanceTkn","bntAmountUsd","setBntAmountUsd","tknAmountUsd","setTknAmountUsd","tknWithPrice","usdPrice","onBntAmountChange","amount","times","toString","onTknAmountChange","div","gt","balance"],"mappings":"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","sourcesContent":["import { Token } from 'services/observables/tokens';\nimport { TokenInputField } from 'components/tokenInputField/TokenInputField';\nimport { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\n\ninterface Props {\n  bnt: Token;\n  tkn: Token;\n  tknAmount: string;\n  setTknAmount: Function;\n  bntAmount: string;\n  setBntAmount: Function;\n  bntTknRate: string;\n  tknUsdPrice: string;\n  errorBalanceBnt: string;\n  setErrorBalanceBnt: Function;\n  errorBalanceTkn: string;\n  setErrorBalanceTkn: Function;\n}\n\nexport const AddLiquidityEmptyStep2 = ({\n  bnt,\n  tkn,\n  tknAmount,\n  setTknAmount,\n  bntAmount,\n  setBntAmount,\n  bntTknRate,\n  tknUsdPrice,\n  errorBalanceBnt,\n  setErrorBalanceBnt,\n  errorBalanceTkn,\n  setErrorBalanceTkn,\n}: Props) => {\n  const [bntAmountUsd, setBntAmountUsd] = useState('');\n  const [tknAmountUsd, setTknAmountUsd] = useState('');\n\n  useEffect(() => {\n    setBntAmountUsd('');\n    setTknAmountUsd('');\n  }, [tknUsdPrice]);\n\n  const tknWithPrice: Token = { ...tkn, usdPrice: tknUsdPrice };\n\n  const onBntAmountChange = (amount: string) => {\n    setBntAmount(amount);\n    if (amount === '') {\n      setTknAmount('');\n      setTknAmountUsd('');\n      return;\n    }\n    const tknAmount = new BigNumber(amount).times(bntTknRate).toString();\n    setTknAmount(tknAmount);\n    const tknAmountUsd = new BigNumber(tknAmount).times(tknUsdPrice).toString();\n    setTknAmountUsd(tknAmountUsd);\n  };\n\n  const onTknAmountChange = (amount: string) => {\n    setTknAmount(amount);\n    if (amount === '') {\n      setBntAmount('');\n      setBntAmountUsd('');\n      return;\n    }\n    const bntAmount = new BigNumber(amount).div(bntTknRate).toString();\n    setBntAmount(bntAmount);\n    const bntAmountUsd = new BigNumber(bntAmount)\n      .times(bnt.usdPrice!)\n      .toString();\n    setBntAmountUsd(bntAmountUsd);\n  };\n\n  useEffect(() => {\n    if (new BigNumber(bntAmount).gt(bnt.balance || 0)) {\n      setErrorBalanceBnt('Insufficient Balance');\n    } else {\n      setErrorBalanceBnt('');\n    }\n\n    if (new BigNumber(tknAmount).gt(tkn.balance || 0)) {\n      setErrorBalanceTkn('Insufficient Balance');\n    } else {\n      setErrorBalanceTkn('');\n    }\n  }, [\n    bntAmount,\n    bnt.balance,\n    setErrorBalanceBnt,\n    tknAmount,\n    tkn.balance,\n    setErrorBalanceTkn,\n  ]);\n\n  return (\n    <div>\n      <div className=\"flex items-center mb-20\">\n        <div\n          className={`flex justify-center items-center w-[34px] h-[34px] border-2 border-blue-0 dark:border-blue-1 rounded-full bg-white dark:bg-blue-4 text-16 ${\n            tknUsdPrice ? 'text-primary' : 'text-grey-3'\n          }`}\n        >\n          2\n        </div>\n        <div\n          className={`ml-10 font-medium ${!tknUsdPrice ? 'text-grey-3' : ''}`}\n        >\n          Enter stake amount\n        </div>\n      </div>\n      <div className=\"mb-20\">\n        <TokenInputField\n          input={bntAmount}\n          setInput={(amount: string) => onBntAmountChange(amount)}\n          amountUsd={bntAmountUsd}\n          setAmountUsd={setBntAmountUsd}\n          token={bnt}\n          selectable={false}\n          disabled={!tknUsdPrice}\n        />\n        {errorBalanceBnt && (\n          <div className=\"mt-5 pl-[140px] text-error\">{errorBalanceBnt}</div>\n        )}\n      </div>\n      <div className=\"mb-20\">\n        <TokenInputField\n          input={tknAmount}\n          setInput={(amount: string) => onTknAmountChange(amount)}\n          amountUsd={tknAmountUsd}\n          setAmountUsd={setTknAmountUsd}\n          token={tknWithPrice}\n          selectable={false}\n          disabled={!tknUsdPrice}\n        />\n        {errorBalanceTkn && (\n          <div className=\"mt-5 pl-[140px] text-error\">{errorBalanceTkn}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}