{"ast":null,"code":"/* Autogenerated file. Do not edit manually. */\n\n/* tslint:disable */\n\n/* eslint-disable */\nimport { Contract, utils } from \"ethers\";\nconst _abi = [{\n  constant: false,\n  inputs: [{\n    name: \"_onlyOwnerCanUpdateRegistry\",\n    type: \"bool\"\n  }],\n  name: \"restrictRegistryUpdate\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_token\",\n    type: \"address\"\n  }, {\n    name: \"_register\",\n    type: \"bool\"\n  }],\n  name: \"registerEtherToken\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }],\n  name: \"getReturnByPath\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }, {\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_beneficiary\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateAccount\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateFee\",\n    type: \"uint256\"\n  }],\n  name: \"claimAndConvertFor2\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"onlyOwnerCanUpdateRegistry\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [],\n  name: \"updateRegistry\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_affiliateAccount\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateFee\",\n    type: \"uint256\"\n  }],\n  name: \"convert2\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"maxAffiliateFee\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_token\",\n    type: \"address\"\n  }, {\n    name: \"_to\",\n    type: \"address\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }],\n  name: \"withdrawTokens\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"prevRegistry\",\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [],\n  name: \"acceptOwnership\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"registry\",\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }],\n  name: \"rateByPath\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  name: \"etherTokens\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_bancorX\",\n    type: \"address\"\n  }, {\n    name: \"_conversionId\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_beneficiary\",\n    type: \"address\"\n  }],\n  name: \"completeXConversion\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"owner\",\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_beneficiary\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateAccount\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateFee\",\n    type: \"uint256\"\n  }],\n  name: \"convertFor2\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_beneficiary\",\n    type: \"address\"\n  }],\n  name: \"claimAndConvertFor\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [],\n  name: \"restoreRegistry\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_beneficiary\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateAccount\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateFee\",\n    type: \"uint256\"\n  }],\n  name: \"convertByPath\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_targetBlockchain\",\n    type: \"bytes32\"\n  }, {\n    name: \"_targetAccount\",\n    type: \"bytes32\"\n  }, {\n    name: \"_conversionId\",\n    type: \"uint256\"\n  }],\n  name: \"xConvert\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }],\n  name: \"claimAndConvert\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_beneficiary\",\n    type: \"address\"\n  }],\n  name: \"convertFor\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_targetBlockchain\",\n    type: \"bytes32\"\n  }, {\n    name: \"_targetAccount\",\n    type: \"bytes32\"\n  }, {\n    name: \"_conversionId\",\n    type: \"uint256\"\n  }, {\n    name: \"_affiliateAccount\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateFee\",\n    type: \"uint256\"\n  }],\n  name: \"xConvert2\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"newOwner\",\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [{\n    name: \"_sourceToken\",\n    type: \"address\"\n  }, {\n    name: \"_targetToken\",\n    type: \"address\"\n  }],\n  name: \"conversionPath\",\n  outputs: [{\n    name: \"\",\n    type: \"address[]\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }, {\n    name: \"_affiliateAccount\",\n    type: \"address\"\n  }, {\n    name: \"_affiliateFee\",\n    type: \"uint256\"\n  }],\n  name: \"claimAndConvert2\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_newOwner\",\n    type: \"address\"\n  }],\n  name: \"transferOwnership\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_path\",\n    type: \"address[]\"\n  }, {\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    name: \"_minReturn\",\n    type: \"uint256\"\n  }],\n  name: \"convert\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_maxAffiliateFee\",\n    type: \"uint256\"\n  }],\n  name: \"setMaxAffiliateFee\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"_registry\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"_smartToken\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"_fromToken\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"_toToken\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"_fromAmount\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"_toAmount\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"_trader\",\n    type: \"address\"\n  }],\n  name: \"Conversion\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"_prevOwner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"_newOwner\",\n    type: \"address\"\n  }],\n  name: \"OwnerUpdate\",\n  type: \"event\"\n}];\nexport class BancorNetwork__factory {\n  static createInterface() {\n    return new utils.Interface(_abi);\n  }\n\n  static connect(address, signerOrProvider) {\n    return new Contract(address, _abi, signerOrProvider);\n  }\n\n}\nBancorNetwork__factory.abi = _abi;","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/services/web3/abis/types/factories/BancorNetwork__factory.ts"],"names":["Contract","utils","_abi","constant","inputs","name","type","outputs","payable","stateMutability","anonymous","indexed","BancorNetwork__factory","createInterface","Interface","connect","address","signerOrProvider","abi"],"mappings":"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","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { BancorNetwork, BancorNetworkInterface } from \"../BancorNetwork\";\n\nconst _abi = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_onlyOwnerCanUpdateRegistry\",\n        type: \"bool\",\n      },\n    ],\n    name: \"restrictRegistryUpdate\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        name: \"_register\",\n        type: \"bool\",\n      },\n    ],\n    name: \"registerEtherToken\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getReturnByPath\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_beneficiary\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateAccount\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimAndConvertFor2\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"onlyOwnerCanUpdateRegistry\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"updateRegistry\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_affiliateAccount\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"convert2\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"maxAffiliateFee\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawTokens\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"prevRegistry\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"acceptOwnership\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"registry\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"rateByPath\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"etherTokens\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_bancorX\",\n        type: \"address\",\n      },\n      {\n        name: \"_conversionId\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_beneficiary\",\n        type: \"address\",\n      },\n    ],\n    name: \"completeXConversion\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_beneficiary\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateAccount\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"convertFor2\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_beneficiary\",\n        type: \"address\",\n      },\n    ],\n    name: \"claimAndConvertFor\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"restoreRegistry\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_beneficiary\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateAccount\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"convertByPath\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_targetBlockchain\",\n        type: \"bytes32\",\n      },\n      {\n        name: \"_targetAccount\",\n        type: \"bytes32\",\n      },\n      {\n        name: \"_conversionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"xConvert\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimAndConvert\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_beneficiary\",\n        type: \"address\",\n      },\n    ],\n    name: \"convertFor\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_targetBlockchain\",\n        type: \"bytes32\",\n      },\n      {\n        name: \"_targetAccount\",\n        type: \"bytes32\",\n      },\n      {\n        name: \"_conversionId\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_affiliateAccount\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"xConvert2\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"newOwner\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_sourceToken\",\n        type: \"address\",\n      },\n      {\n        name: \"_targetToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"conversionPath\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[]\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_affiliateAccount\",\n        type: \"address\",\n      },\n      {\n        name: \"_affiliateFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimAndConvert2\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_path\",\n        type: \"address[]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_minReturn\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"convert\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_maxAffiliateFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxAffiliateFee\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        name: \"_registry\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_smartToken\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"_toToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"_fromAmount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        name: \"_toAmount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        name: \"_trader\",\n        type: \"address\",\n      },\n    ],\n    name: \"Conversion\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdate\",\n    type: \"event\",\n  },\n];\n\nexport class BancorNetwork__factory {\n  static readonly abi = _abi;\n  static createInterface(): BancorNetworkInterface {\n    return new utils.Interface(_abi) as BancorNetworkInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): BancorNetwork {\n    return new Contract(address, _abi, signerOrProvider) as BancorNetwork;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}