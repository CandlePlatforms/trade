{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getShowBannerLS, setDarkModeLS, setShowBannerLS, setSlippageToleranceLS, setUsdToggleLS } from 'utils/localStorage';\nexport const initialState = {\n  account: undefined,\n  darkMode: false,\n  walletModal: false,\n  slippageTolerance: 0.005,\n  usdToggle: false,\n  locale: 'en',\n  loadingBalances: false,\n  showBanner: getShowBannerLS() !== false\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setAccount: (state, action) => {\n      state.account = action.payload;\n    },\n    setDarkMode: (state, action) => {\n      state.darkMode = action.payload;\n      const root = window.document.documentElement;\n      if (action.payload) root.classList.add('dark');else root.classList.remove('dark');\n      setDarkModeLS(action.payload);\n    },\n    setSlippageTolerance: (state, action) => {\n      setSlippageToleranceLS(action.payload);\n      state.slippageTolerance = action.payload;\n    },\n    setLocale: (state, action) => {\n      state.locale = action.payload;\n    },\n    openWalletModal: (state, action) => {\n      state.walletModal = action.payload;\n    },\n    setUsdToggle: (state, action) => {\n      setUsdToggleLS(action.payload);\n      state.usdToggle = action.payload;\n    },\n    setLoadingBalances: (state, action) => {\n      state.loadingBalances = action.payload;\n    },\n    setShowBanner: (state, action) => {\n      setShowBannerLS(action.payload);\n      state.showBanner = action.payload;\n    }\n  }\n});\nexport const {\n  setAccount,\n  setDarkMode,\n  setSlippageTolerance,\n  setLocale,\n  openWalletModal,\n  setUsdToggle,\n  setLoadingBalances,\n  setShowBanner\n} = userSlice.actions;\nexport const user = userSlice.reducer;","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/redux/user/user.ts"],"names":["createSlice","getShowBannerLS","setDarkModeLS","setShowBannerLS","setSlippageToleranceLS","setUsdToggleLS","initialState","account","undefined","darkMode","walletModal","slippageTolerance","usdToggle","locale","loadingBalances","showBanner","userSlice","name","reducers","setAccount","state","action","payload","setDarkMode","root","window","document","documentElement","classList","add","remove","setSlippageTolerance","setLocale","openWalletModal","setUsdToggle","setLoadingBalances","setShowBanner","actions","user","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  getShowBannerLS,\n  setDarkModeLS,\n  setShowBannerLS,\n  setSlippageToleranceLS,\n  setUsdToggleLS,\n} from 'utils/localStorage';\n\nexport interface UserState {\n  account: string | null | undefined;\n  darkMode: boolean;\n  walletModal: boolean;\n  slippageTolerance: number;\n  usdToggle: boolean;\n  locale: string;\n  loadingBalances: boolean;\n  showBanner: boolean;\n}\n\nexport const initialState: UserState = {\n  account: undefined,\n  darkMode: false,\n  walletModal: false,\n  slippageTolerance: 0.005,\n  usdToggle: false,\n  locale: 'en',\n  loadingBalances: false,\n  showBanner: getShowBannerLS() !== false,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setAccount: (state, action) => {\n      state.account = action.payload;\n    },\n    setDarkMode: (state, action: PayloadAction<boolean>) => {\n      state.darkMode = action.payload;\n\n      const root = window.document.documentElement;\n      if (action.payload) root.classList.add('dark');\n      else root.classList.remove('dark');\n\n      setDarkModeLS(action.payload);\n    },\n    setSlippageTolerance: (state, action) => {\n      setSlippageToleranceLS(action.payload);\n      state.slippageTolerance = action.payload;\n    },\n    setLocale: (state, action) => {\n      state.locale = action.payload;\n    },\n    openWalletModal: (state, action) => {\n      state.walletModal = action.payload;\n    },\n    setUsdToggle: (state, action: PayloadAction<boolean>) => {\n      setUsdToggleLS(action.payload);\n      state.usdToggle = action.payload;\n    },\n    setLoadingBalances: (state, action) => {\n      state.loadingBalances = action.payload;\n    },\n    setShowBanner: (state, action) => {\n      setShowBannerLS(action.payload);\n      state.showBanner = action.payload;\n    },\n  },\n});\n\nexport const {\n  setAccount,\n  setDarkMode,\n  setSlippageTolerance,\n  setLocale,\n  openWalletModal,\n  setUsdToggle,\n  setLoadingBalances,\n  setShowBanner,\n} = userSlice.actions;\n\nexport const user = userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}