{"ast":null,"code":"import axios from 'axios';\nimport { EthNetworks } from 'services/web3/types';\nimport { utils } from 'ethers';\nexport const getWelcomeData = async function () {\n  let network = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EthNetworks.Mainnet;\n\n  if (!(network === EthNetworks.Mainnet || network === EthNetworks.Ropsten)) {\n    throw new Error('API does not support this network');\n  }\n\n  try {\n    const {\n      data\n    } = await axios.get(network === EthNetworks.Mainnet ? 'https://api-v2.bancor.network/welcome' : 'https://serve-ropsten-ptdczarhfq-nw.a.run.app/welcome');\n    return { ...data,\n      network,\n      pools: data.pools.map(pool => ({ ...pool,\n        converter_dlt_id: utils.getAddress(pool.converter_dlt_id),\n        pool_dlt_id: utils.getAddress(pool.pool_dlt_id)\n      })),\n      tokens: data.tokens.map(token => ({ ...token,\n        dlt_id: utils.getAddress(token.dlt_id)\n      }))\n    };\n  } catch (e) {\n    console.error('Failed to load data from Bancor API', e);\n    throw new Error(e);\n  }\n};","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/services/api/bancor.ts"],"names":["axios","EthNetworks","utils","getWelcomeData","network","Mainnet","Ropsten","Error","data","get","pools","map","pool","converter_dlt_id","getAddress","pool_dlt_id","tokens","token","dlt_id","e","console","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAT,QAAsB,QAAtB;AAyFA,OAAO,MAAMC,cAAc,GAAG,kBAEA;AAAA,MAD5BC,OAC4B,uEADLH,WAAW,CAACI,OACP;;AAC5B,MAAI,EAAED,OAAO,KAAKH,WAAW,CAACI,OAAxB,IAAmCD,OAAO,KAAKH,WAAW,CAACK,OAA7D,CAAJ,EAA2E;AACzE,UAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACD;;AACD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,GAAN,CACrBL,OAAO,KAAKH,WAAW,CAACI,OAAxB,GACI,uCADJ,GAEI,uDAHiB,CAAvB;AAKA,WAAO,EACL,GAAGG,IADE;AAELJ,MAAAA,OAFK;AAGLM,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,IAAD,KAAW,EAC/B,GAAGA,IAD4B;AAE/BC,QAAAA,gBAAgB,EAAEX,KAAK,CAACY,UAAN,CAAiBF,IAAI,CAACC,gBAAtB,CAFa;AAG/BE,QAAAA,WAAW,EAAEb,KAAK,CAACY,UAAN,CAAiBF,IAAI,CAACG,WAAtB;AAHkB,OAAX,CAAf,CAHF;AAQLC,MAAAA,MAAM,EAAER,IAAI,CAACQ,MAAL,CAAYL,GAAZ,CAAiBM,KAAD,KAAY,EAClC,GAAGA,KAD+B;AAElCC,QAAAA,MAAM,EAAEhB,KAAK,CAACY,UAAN,CAAiBG,KAAK,CAACC,MAAvB;AAF0B,OAAZ,CAAhB;AARH,KAAP;AAaD,GAnBD,CAmBE,OAAOC,CAAP,EAAe;AACfC,IAAAA,OAAO,CAACC,KAAR,CAAc,qCAAd,EAAqDF,CAArD;AACA,UAAM,IAAIZ,KAAJ,CAAUY,CAAV,CAAN;AACD;AACF,CA7BM","sourcesContent":["import axios from 'axios';\nimport { EthNetworks } from 'services/web3/types';\nimport { utils } from 'ethers';\nimport { UTCTimestamp } from 'lightweight-charts';\n\ninterface TokenMeta {\n  id: string;\n  image: string;\n  contract: string;\n  symbol: string;\n  name: string;\n  precision?: number;\n}\n\nexport interface WelcomeData {\n  total_liquidity: {\n    usd: string;\n    bnt: string;\n  };\n  total_liquidity_24h_ago: {\n    usd: string;\n    bnt: string;\n  };\n  total_volume_24h: USDPrice;\n  total_volume_24h_ago: USDPrice;\n  total_fees_24h: USDPrice;\n  total_fees_24h_ago: USDPrice;\n  bnt_price_24h_ago: USDPrice;\n  bnt_price: USDPrice;\n  bnt_supply: string;\n  bnt_supply_24h_ago: string;\n  pools: APIPool[];\n  tokens: APIToken[];\n}\n\nexport interface USDPrice {\n  usd: null | string;\n}\n\nexport interface APIReserve {\n  address: string;\n  weight: string;\n  balance: string;\n  apr?: number;\n}\n\nexport interface APIReward {\n  starts_at: UTCTimestamp;\n  ends_at: UTCTimestamp;\n}\n\nexport interface APIPool {\n  pool_dlt_id: string;\n  converter_dlt_id: string;\n  reserves: APIReserve[];\n  name: string;\n  liquidity: USDPrice;\n  volume_24h: USDPrice;\n  fees_24h: USDPrice;\n  fee: string;\n  version: number;\n  supply: string;\n  decimals: number;\n  isWhitelisted: boolean;\n  reward?: APIReward;\n}\n\nexport interface APIToken {\n  symbol: string;\n  dlt_id: string;\n  liquidity: USDPrice;\n  rate: USDPrice;\n  rate_24h_ago: USDPrice;\n  decimals: number;\n  rates_7d: string[];\n}\n\nexport interface TokenMetaWithReserve extends TokenMeta {\n  reserveWeight: number;\n  decBalance: string;\n}\n\nexport interface NewPool extends APIPool {\n  reserveTokens: TokenMetaWithReserve[];\n  decFee: number;\n}\n\nexport interface WelcomeDataRes extends WelcomeData {\n  network: EthNetworks;\n}\n\nexport const getWelcomeData = async (\n  network: EthNetworks = EthNetworks.Mainnet\n): Promise<WelcomeDataRes> => {\n  if (!(network === EthNetworks.Mainnet || network === EthNetworks.Ropsten)) {\n    throw new Error('API does not support this network');\n  }\n  try {\n    const { data } = await axios.get<WelcomeData>(\n      network === EthNetworks.Mainnet\n        ? 'https://api-v2.bancor.network/welcome'\n        : 'https://serve-ropsten-ptdczarhfq-nw.a.run.app/welcome'\n    );\n    return {\n      ...data,\n      network,\n      pools: data.pools.map((pool) => ({\n        ...pool,\n        converter_dlt_id: utils.getAddress(pool.converter_dlt_id),\n        pool_dlt_id: utils.getAddress(pool.pool_dlt_id),\n      })),\n      tokens: data.tokens.map((token) => ({\n        ...token,\n        dlt_id: utils.getAddress(token.dlt_id),\n      })),\n    };\n  } catch (e: any) {\n    console.error('Failed to load data from Bancor API', e);\n    throw new Error(e);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}