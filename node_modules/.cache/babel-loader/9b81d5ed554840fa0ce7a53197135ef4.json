{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/modalApprove/modalApproveNew.tsx\";\nimport { ReactComponent as IconLock } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/lock.svg\";\nimport { Modal } from 'components/modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalApproveNew = _ref => {\n  let {\n    isOpen,\n    setIsOpen,\n    setApproval,\n    token,\n    amount,\n    isLoading\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: 'Swap',\n    setIsOpen: setIsOpen,\n    isOpen: isOpen,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center text-12 mb-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center w-[52px] h-[52px] bg-primary rounded-full mb-14\",\n          children: /*#__PURE__*/_jsxDEV(IconLock, {\n            className: \"w-[22px] text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-20 mb-8\",\n          children: [\"Approve \", token.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-grey-5\",\n          children: [\"Before you can proceed, you need to approve \", token.symbol, \" spending.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setApproval(),\n          className: 'btn-primary w-full my-15',\n          disabled: isLoading,\n          children: isLoading ? 'waiting for confirmation' : 'Approve'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-grey-5\",\n          children: \"Want to approve before each transaction?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setApproval(amount),\n          className: \"underline\",\n          disabled: isLoading,\n          children: \"Approve limited permission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalApproveNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalApproveNew\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/modalApprove/modalApproveNew.tsx"],"names":["Modal","ModalApproveNew","isOpen","setIsOpen","setApproval","token","amount","isLoading","symbol"],"mappings":";;AACA,SAASA,KAAT,QAAsB,wBAAtB;;AAYA,OAAO,MAAMC,eAAe,GAAG,QAOlB;AAAA,MAPmB;AAC9BC,IAAAA,MAD8B;AAE9BC,IAAAA,SAF8B;AAG9BC,IAAAA,WAH8B;AAI9BC,IAAAA,KAJ8B;AAK9BC,IAAAA,MAL8B;AAM9BC,IAAAA;AAN8B,GAOnB;AACX,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE,MAAd;AAAsB,IAAA,SAAS,EAAEJ,SAAjC;AAA4C,IAAA,MAAM,EAAED,MAApD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kFAAf;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,iCAAsCG,KAAK,CAACG,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,qEAC+CH,KAAK,CAACG,MADrD;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AACE,UAAA,OAAO,EAAE,MAAMJ,WAAW,EAD5B;AAEE,UAAA,SAAS,EAAE,0BAFb;AAGE,UAAA,QAAQ,EAAEG,SAHZ;AAAA,oBAKGA,SAAS,GAAG,0BAAH,GAAgC;AAL5C;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAkBE;AACE,UAAA,OAAO,EAAE,MAAMH,WAAW,CAACE,MAAD,CAD5B;AAEE,UAAA,SAAS,EAAC,WAFZ;AAGE,UAAA,QAAQ,EAAEC,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAxCM;KAAMN,e","sourcesContent":["import { ReactComponent as IconLock } from '../../assets/icons/lock.svg';\nimport { Modal } from 'components/modal/Modal';\nimport { Token } from 'services/observables/tokens';\n\ninterface Props {\n  isOpen: boolean;\n  setIsOpen: Function;\n  setApproval: Function;\n  token: Token;\n  amount: string;\n  isLoading: boolean;\n}\n\nexport const ModalApproveNew = ({\n  isOpen,\n  setIsOpen,\n  setApproval,\n  token,\n  amount,\n  isLoading,\n}: Props) => {\n  return (\n    <Modal title={'Swap'} setIsOpen={setIsOpen} isOpen={isOpen}>\n      <div className=\"p-10\">\n        <div className=\"flex flex-col items-center text-12 mb-20\">\n          <div className=\"flex justify-center items-center w-[52px] h-[52px] bg-primary rounded-full mb-14\">\n            <IconLock className=\"w-[22px] text-white\" />\n          </div>\n          <h2 className=\"text-20 mb-8\">Approve {token.symbol}</h2>\n          <p className=\"text-center text-grey-5\">\n            Before you can proceed, you need to approve {token.symbol} spending.\n          </p>\n          <button\n            onClick={() => setApproval()}\n            className={'btn-primary w-full my-15'}\n            disabled={isLoading}\n          >\n            {isLoading ? 'waiting for confirmation' : 'Approve'}\n          </button>\n          <p className=\"text-center text-grey-5\">\n            Want to approve before each transaction?\n          </p>\n          <button\n            onClick={() => setApproval(amount)}\n            className=\"underline\"\n            disabled={isLoading}\n          >\n            Approve limited permission\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}