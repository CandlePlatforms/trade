{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellActions.tsx\",\n    _s = $RefreshSig$();\n\nimport { ReactComponent as IconWithdraw } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/withdraw.svg\";\nimport { useCallback, useMemo, useState } from 'react';\nimport { WithdrawLiquidityWidget } from 'elements/earn/portfolio/withdrawLiquidity/WithdrawLiquidityWidget';\nimport { TableCellExpander } from 'components/table/TableCellExpander';\nimport { StakeRewardsBtn } from '../rewards/StakeRewardsBtn';\nimport BigNumber from 'bignumber.js';\nimport { sendLiquidityPoolClickEvent } from '../../../../../services/api/googleTagManager';\nimport { useWeb3React } from '@web3-react/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProtectedPositionTableCellActions = cellData => {\n  _s();\n\n  const {\n    chainId\n  } = useWeb3React();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    row\n  } = cellData;\n  const position = row.original;\n  const canStakeRewards = useMemo(() => new BigNumber(position.rewardsAmount).gt(0) && position.groupId, [position.groupId, position.rewardsAmount]);\n  const getCannotExpandContent = useCallback(() => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WithdrawLiquidityWidget, {\n      protectedPosition: position,\n      isModalOpen: isModalOpen,\n      setIsModalOpen: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        sendLiquidityPoolClickEvent('Withdraw', position.pool.name, position.reserveToken.symbol, chainId);\n        setIsModalOpen(true);\n      },\n      className: \"btn-outline-primary btn-sm rounded-[12px] !w-[35px] !h-[35px] p-0 border shadow-header\",\n      children: /*#__PURE__*/_jsxDEV(IconWithdraw, {\n        className: \"w-14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true), [chainId, isModalOpen, position]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-end\",\n    children: [canStakeRewards && /*#__PURE__*/_jsxDEV(StakeRewardsBtn, {\n      buttonLabel: \"Stake Rewards\",\n      buttonClass: \"btn-primary btn-sm rounded-[12px] !h-[35px] mr-10\",\n      posGroupId: position.groupId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), TableCellExpander({\n      cellData,\n      getCannotExpandContent\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedPositionTableCellActions, \"snFxa8XwH8gpXuqUZ74UR+P5b/Q=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = ProtectedPositionTableCellActions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedPositionTableCellActions\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/portfolio/liquidityProtection/protectedPositions/ProtectedPositionTableCellActions.tsx"],"names":["useCallback","useMemo","useState","WithdrawLiquidityWidget","TableCellExpander","StakeRewardsBtn","BigNumber","sendLiquidityPoolClickEvent","useWeb3React","ProtectedPositionTableCellActions","cellData","chainId","isModalOpen","setIsModalOpen","row","position","original","canStakeRewards","rewardsAmount","gt","groupId","getCannotExpandContent","pool","name","reserveToken","symbol"],"mappings":";;;;AAMA,SAA4BA,WAA5B,EAAyCC,OAAzC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,uBAAT,QAAwC,mEAAxC;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,2BAAT,QAA4C,8CAA5C;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAEA,OAAO,MAAMC,iCAAiC,GAC5CC,QAD+C,IAI5C;AAAA;;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAcH,YAAY,EAAhC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAUJ,QAAhB;AACA,QAAMK,QAAQ,GAAGD,GAAG,CAACE,QAArB;AACA,QAAMC,eAAe,GAAGhB,OAAO,CAC7B,MAAM,IAAIK,SAAJ,CAAcS,QAAQ,CAACG,aAAvB,EAAsCC,EAAtC,CAAyC,CAAzC,KAA+CJ,QAAQ,CAACK,OADjC,EAE7B,CAACL,QAAQ,CAACK,OAAV,EAAmBL,QAAQ,CAACG,aAA5B,CAF6B,CAA/B;AAKA,QAAMG,sBAAsB,GAAGrB,WAAW,CACxC,mBACE;AAAA,4BACE,QAAC,uBAAD;AACE,MAAA,iBAAiB,EAAEe,QADrB;AAEE,MAAA,WAAW,EAAEH,WAFf;AAGE,MAAA,cAAc,EAAEC;AAHlB;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AACE,MAAA,OAAO,EAAE,MAAM;AACbN,QAAAA,2BAA2B,CACzB,UADyB,EAEzBQ,QAAQ,CAACO,IAAT,CAAcC,IAFW,EAGzBR,QAAQ,CAACS,YAAT,CAAsBC,MAHG,EAIzBd,OAJyB,CAA3B;AAMAE,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OATH;AAUE,MAAA,SAAS,EAAC,wFAVZ;AAAA,6BAYE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBAFsC,EAwBxC,CAACF,OAAD,EAAUC,WAAV,EAAuBG,QAAvB,CAxBwC,CAA1C;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,eACGE,eAAe,iBACd,QAAC,eAAD;AACE,MAAA,WAAW,EAAC,eADd;AAEE,MAAA,WAAW,EAAC,mDAFd;AAGE,MAAA,UAAU,EAAEF,QAAQ,CAACK;AAHvB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQGhB,iBAAiB,CAAC;AACjBM,MAAAA,QADiB;AAEjBW,MAAAA;AAFiB,KAAD,CARpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxDM;;GAAMZ,iC;UAKSD,Y;;;KALTC,iC","sourcesContent":["import {\n  ProtectedPosition,\n  ProtectedPositionGrouped,\n} from 'services/web3/protection/positions';\nimport { CellProps } from 'react-table';\nimport { ReactComponent as IconWithdraw } from 'assets/icons/withdraw.svg';\nimport { PropsWithChildren, useCallback, useMemo, useState } from 'react';\nimport { WithdrawLiquidityWidget } from 'elements/earn/portfolio/withdrawLiquidity/WithdrawLiquidityWidget';\nimport { TableCellExpander } from 'components/table/TableCellExpander';\nimport { StakeRewardsBtn } from '../rewards/StakeRewardsBtn';\nimport BigNumber from 'bignumber.js';\nimport { sendLiquidityPoolClickEvent } from '../../../../../services/api/googleTagManager';\nimport { useWeb3React } from '@web3-react/core';\n\nexport const ProtectedPositionTableCellActions = (\n  cellData: PropsWithChildren<\n    CellProps<ProtectedPositionGrouped, ProtectedPosition[]>\n  >\n) => {\n  const { chainId } = useWeb3React();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { row } = cellData;\n  const position = row.original;\n  const canStakeRewards = useMemo(\n    () => new BigNumber(position.rewardsAmount).gt(0) && position.groupId,\n    [position.groupId, position.rewardsAmount]\n  );\n\n  const getCannotExpandContent = useCallback(\n    () => (\n      <>\n        <WithdrawLiquidityWidget\n          protectedPosition={position}\n          isModalOpen={isModalOpen}\n          setIsModalOpen={setIsModalOpen}\n        />\n        <button\n          onClick={() => {\n            sendLiquidityPoolClickEvent(\n              'Withdraw',\n              position.pool.name,\n              position.reserveToken.symbol,\n              chainId\n            );\n            setIsModalOpen(true);\n          }}\n          className=\"btn-outline-primary btn-sm rounded-[12px] !w-[35px] !h-[35px] p-0 border shadow-header\"\n        >\n          <IconWithdraw className=\"w-14\" />\n        </button>\n      </>\n    ),\n    [chainId, isModalOpen, position]\n  );\n\n  return (\n    <div className=\"flex justify-end\">\n      {canStakeRewards && (\n        <StakeRewardsBtn\n          buttonLabel=\"Stake Rewards\"\n          buttonClass=\"btn-primary btn-sm rounded-[12px] !h-[35px] mr-10\"\n          posGroupId={position.groupId}\n        />\n      )}\n      {TableCellExpander({\n        cellData,\n        getCannotExpandContent,\n      })}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}