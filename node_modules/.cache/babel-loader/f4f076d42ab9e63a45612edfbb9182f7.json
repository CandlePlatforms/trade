{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport const useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorage, \"S9iJyAQJ52SFrmaoYBfog+xYoKE=\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/hooks/useLocalStorage.ts"],"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","setValue","value","valueToStore","Function","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAIC,GAAJ,EAAiBC,YAAjB,KAAqC;AAAA;;AAClE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb;AACA,aAAOI,IAAI,GAAII,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAJ,GAA6BH,YAAxC;AACD,KAHD,CAGE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAOT,YAAP;AACD;AACF,GAR6C,CAA9C;;AAUA,QAAMW,QAAQ,GAAIC,KAAD,IAAc;AAC7B,QAAI;AACF,YAAMC,YAAY,GAChBD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACX,WAAD,CAAjC,GAAiDW,KADnD;AAEAV,MAAAA,cAAc,CAACW,YAAD,CAAd;AACAR,MAAAA,YAAY,CAACU,OAAb,CAAqBhB,GAArB,EAA0BQ,IAAI,CAACS,SAAL,CAAeH,YAAf,CAA1B;AACD,KALD,CAKE,OAAOJ,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;;AAUA,SAAO,CAACR,WAAD,EAAcU,QAAd,CAAP;AACD,CAtBM;;GAAMb,e","sourcesContent":["import { useState } from 'react';\n\nexport const useLocalStorage = <T>(key: string, initialValue: T) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? (JSON.parse(item) as T) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return [storedValue, setValue] as [T, (value: T) => void];\n};\n"]},"metadata":{},"sourceType":"module"}