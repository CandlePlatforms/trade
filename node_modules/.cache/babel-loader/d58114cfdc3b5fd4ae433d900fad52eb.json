{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmpty.tsx\",\n    _s = $RefreshSig$();\n\nimport { Widget } from 'components/widgets/Widget';\nimport { AddLiquidityEmptyStep1 } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep1';\nimport { useEffect, useState } from 'react';\nimport { AddLiquidityEmptyStep2 } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep2';\nimport { useAppSelector } from 'redux/index';\nimport { getTokenById } from 'redux/bancor/bancor';\nimport BigNumber from 'bignumber.js';\nimport { AddLiquidityEmptyCTA } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyCTA';\nimport { useNavigation } from 'services/router';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLiquidityEmpty = _ref => {\n  _s();\n\n  let {\n    pool\n  } = _ref;\n  const [tknReserve, bntReserve] = pool.reserves;\n  const tkn = useAppSelector(state => getTokenById(state, tknReserve.address));\n  const bnt = useAppSelector(state => getTokenById(state, bntReserve.address));\n  const [tknAmount, setTknAmount] = useState('');\n  const [bntAmount, setBntAmount] = useState('');\n  const [errorBalanceBnt, setErrorBalanceBnt] = useState('');\n  const [errorBalanceTkn, setErrorBalanceTkn] = useState('');\n  const [tknUsdPrice, setTknUsdPrice] = useState('');\n  useEffect(() => {\n    setBntAmount('');\n    setTknAmount('');\n  }, [tknUsdPrice]);\n  const {\n    pushLiquidityError,\n    pushPools\n  } = useNavigation();\n\n  if (!tkn || !bnt) {\n    pushLiquidityError();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  const bntTknRate = () => {\n    return new BigNumber(bnt.usdPrice).div(tknUsdPrice).toString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    title: \"Add Liquidity\",\n    goBack: pushPools,\n    children: [/*#__PURE__*/_jsxDEV(AddLiquidityEmptyStep1, {\n      tkn: tkn,\n      bnt: bnt,\n      tknUsdPrice: tknUsdPrice,\n      setTknUsdPrice: setTknUsdPrice,\n      bntTknRate: bntTknRate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-10 rounded bg-blue-0 dark:bg-blue-5 mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(AddLiquidityEmptyStep2, {\n        tkn: tkn,\n        bnt: bnt,\n        tknAmount: tknAmount,\n        setTknAmount: setTknAmount,\n        bntAmount: bntAmount,\n        setBntAmount: setBntAmount,\n        bntTknRate: bntTknRate(),\n        tknUsdPrice: tknUsdPrice,\n        errorBalanceBnt: errorBalanceBnt,\n        setErrorBalanceBnt: setErrorBalanceBnt,\n        errorBalanceTkn: errorBalanceTkn,\n        setErrorBalanceTkn: setErrorBalanceTkn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddLiquidityEmptyCTA, {\n        pool: pool,\n        bnt: bnt,\n        tkn: tkn,\n        amountBnt: bntAmount,\n        amountTkn: tknAmount,\n        errorMsg: errorBalanceTkn || errorBalanceBnt ? 'Insufficient Balance' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLiquidityEmpty, \"YS7QtDrE5VFiXVNScs11eTWCMkw=\", false, function () {\n  return [useAppSelector, useAppSelector, useNavigation];\n});\n\n_c = AddLiquidityEmpty;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidityEmpty\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmpty.tsx"],"names":["Widget","AddLiquidityEmptyStep1","useEffect","useState","AddLiquidityEmptyStep2","useAppSelector","getTokenById","BigNumber","AddLiquidityEmptyCTA","useNavigation","AddLiquidityEmpty","pool","tknReserve","bntReserve","reserves","tkn","state","address","bnt","tknAmount","setTknAmount","bntAmount","setBntAmount","errorBalanceBnt","setErrorBalanceBnt","errorBalanceTkn","setErrorBalanceTkn","tknUsdPrice","setTknUsdPrice","pushLiquidityError","pushPools","bntTknRate","usdPrice","div","toString"],"mappings":"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","sourcesContent":["import { Pool, Token } from 'services/observables/tokens';\nimport { Widget } from 'components/widgets/Widget';\nimport { AddLiquidityEmptyStep1 } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep1';\nimport { useEffect, useState } from 'react';\nimport { AddLiquidityEmptyStep2 } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep2';\nimport { useAppSelector } from 'redux/index';\nimport { getTokenById } from 'redux/bancor/bancor';\nimport BigNumber from 'bignumber.js';\n\nimport { AddLiquidityEmptyCTA } from 'elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyCTA';\nimport { useNavigation } from 'services/router';\n\ninterface Props {\n  pool: Pool;\n}\n\nexport const AddLiquidityEmpty = ({ pool }: Props) => {\n  const [tknReserve, bntReserve] = pool.reserves;\n  const tkn = useAppSelector<Token | undefined>((state: any) =>\n    getTokenById(state, tknReserve.address)\n  );\n  const bnt = useAppSelector<Token | undefined>((state: any) =>\n    getTokenById(state, bntReserve.address)\n  );\n  const [tknAmount, setTknAmount] = useState('');\n  const [bntAmount, setBntAmount] = useState('');\n  const [errorBalanceBnt, setErrorBalanceBnt] = useState('');\n  const [errorBalanceTkn, setErrorBalanceTkn] = useState('');\n  const [tknUsdPrice, setTknUsdPrice] = useState('');\n  useEffect(() => {\n    setBntAmount('');\n    setTknAmount('');\n  }, [tknUsdPrice]);\n\n  const { pushLiquidityError, pushPools } = useNavigation();\n  if (!tkn || !bnt) {\n    pushLiquidityError();\n    return <></>;\n  }\n\n  const bntTknRate = () => {\n    return new BigNumber(bnt.usdPrice!).div(tknUsdPrice).toString();\n  };\n  return (\n    <Widget title=\"Add Liquidity\" goBack={pushPools}>\n      <AddLiquidityEmptyStep1\n        tkn={tkn}\n        bnt={bnt}\n        tknUsdPrice={tknUsdPrice}\n        setTknUsdPrice={setTknUsdPrice}\n        bntTknRate={bntTknRate()}\n      />\n      <div className=\"p-10 rounded bg-blue-0 dark:bg-blue-5 mt-20\">\n        <AddLiquidityEmptyStep2\n          tkn={tkn}\n          bnt={bnt}\n          tknAmount={tknAmount}\n          setTknAmount={setTknAmount}\n          bntAmount={bntAmount}\n          setBntAmount={setBntAmount}\n          bntTknRate={bntTknRate()}\n          tknUsdPrice={tknUsdPrice}\n          errorBalanceBnt={errorBalanceBnt}\n          setErrorBalanceBnt={setErrorBalanceBnt}\n          errorBalanceTkn={errorBalanceTkn}\n          setErrorBalanceTkn={setErrorBalanceTkn}\n        />\n        <AddLiquidityEmptyCTA\n          pool={pool}\n          bnt={bnt}\n          tkn={tkn}\n          amountBnt={bntAmount}\n          amountTkn={tknAmount}\n          errorMsg={\n            errorBalanceTkn || errorBalanceBnt ? 'Insufficient Balance' : ''\n          }\n        />\n      </div>\n    </Widget>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}