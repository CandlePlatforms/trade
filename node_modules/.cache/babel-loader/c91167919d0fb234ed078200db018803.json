{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/swapMarket/SwapMarket.tsx\",\n    _s = $RefreshSig$();\n\nimport { TokenInputField } from 'components/tokenInputField/TokenInputField';\nimport { Tooltip } from 'components/tooltip/Tooltip';\nimport { useDebounce } from 'hooks/useDebounce';\nimport { useEffect, useState } from 'react';\nimport { getRateAndPriceImapct, swap } from 'services/web3/swap/market';\nimport { ReactComponent as IconSync } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/sync.svg\";\nimport { useDispatch } from 'react-redux';\nimport { addNotification, NotificationType } from 'redux/notification/notification';\nimport { useWeb3React } from '@web3-react/core';\nimport { ApprovalContract, getNetworkContractApproval } from 'services/web3/approval';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport { ethToken, wethToken } from 'services/web3/config';\nimport { useAppSelector } from 'redux/index';\nimport BigNumber from 'bignumber.js';\nimport { openWalletModal } from 'redux/user/user';\nimport { ModalApprove } from 'elements/modalApprove/modalApprove';\nimport { sanitizeNumberInput } from 'utils/pureFunctions';\nimport { ConversionEvents, sendConversionEvent, sendConversionFailEvent, sendConversionSuccessEvent, setCurrentConversion } from 'services/api/googleTagManager';\nimport { withdrawWeth } from 'services/web3/swap/limit';\nimport { updateTokens } from 'redux/bancor/bancor';\nimport { fetchTokenBalances } from 'services/observables/balances';\nimport { wait } from 'utils/pureFunctions';\nimport { useInterval } from 'hooks/useInterval';\nimport { rejectNotification, swapFailedNotification, swapNotification } from 'services/notifications/notifications';\nimport { useAsyncEffect } from 'use-async-effect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SwapMarket = _ref => {\n  _s();\n\n  let {\n    fromToken,\n    setFromToken,\n    toToken,\n    setToToken,\n    switchTokens\n  } = _ref;\n  const {\n    chainId\n  } = useWeb3React();\n  const account = useAppSelector(state => state.user.account);\n  const [fromAmount, setFromAmount] = useState('');\n  const [fromDebounce, setFromDebounce] = useDebounce('');\n  const [toAmount, setToAmount] = useState('');\n  const [toAmountUsd, setToAmountUsd] = useState('');\n  const [fromAmountUsd, setFromAmountUsd] = useState('');\n  const [rate, setRate] = useState('');\n  const [priceImpact, setPriceImpact] = useState('');\n  const [fromError, setFromError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [rateToggle, setRateToggle] = useState(false);\n  const [isLoadingRate, setIsLoadingRate] = useState(false);\n  const fiatToggle = useAppSelector(state => state.user.usdToggle);\n  const dispatch = useDispatch();\n  const tokens = useAppSelector(state => state.bancor.tokens);\n  const slippageTolerance = useAppSelector(state => state.user.slippageTolerance);\n\n  const loadRateAndPriceImapct = async function (fromToken, toToken, amount) {\n    let showAnimation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    if (showAnimation) setIsLoadingRate(true);\n    const res = await getRateAndPriceImapct(fromToken, toToken, amount);\n    if (showAnimation) setIsLoadingRate(false);\n    return res;\n  };\n\n  useInterval(() => {\n    if (toToken && fromToken.address !== wethToken) {\n      loadRateAndPriceImapct(fromToken, toToken, fromAmount ? fromAmount : '1', false);\n    }\n  }, 15000);\n  useEffect(() => {\n    setIsLoadingRate(true);\n  }, [fromAmount]);\n  useEffect(() => {\n    if (fromToken && fromToken.address === wethToken) {\n      const eth = tokens.find(x => x.address === ethToken);\n      setRate('1');\n      setPriceImpact('0.00');\n      const usdAmount = new BigNumber(fromDebounce).times(1).times(eth === null || eth === void 0 ? void 0 : eth.usdPrice).toString();\n      setToAmountUsd(usdAmount);\n      setToAmount(fromDebounce);\n      setIsLoadingRate(false);\n    }\n  }, [fromDebounce, fromToken, toToken, tokens]);\n  useAsyncEffect(async isMounted => {\n    if (isMounted() && fromToken && fromToken.address !== wethToken) {\n      if ((!fromDebounce || !parseFloat(fromDebounce)) && fromToken && toToken) {\n        setToAmount('');\n        setToAmountUsd('');\n        const res = await loadRateAndPriceImapct(fromToken, toToken, '1');\n        setRate(res.rate);\n        if (fromDebounce) setPriceImpact(res.priceImpact);else setPriceImpact('0.00');\n      } else if (fromToken && toToken) {\n        const result = await loadRateAndPriceImapct(fromToken, toToken, fromDebounce);\n        const rate = new BigNumber(result.rate).div(fromDebounce);\n        setToAmount(sanitizeNumberInput(new BigNumber(fromDebounce).times(rate).toString(), toToken.decimals));\n        const usdAmount = new BigNumber(fromDebounce).times(rate).times(toToken.usdPrice).toString();\n        setToAmountUsd(usdAmount);\n        setRate(rate.toString());\n        if (fromDebounce) setPriceImpact(result.priceImpact);else setPriceImpact('0.00');\n      }\n    }\n  }, [fromToken === null || fromToken === void 0 ? void 0 : fromToken.address, toToken === null || toToken === void 0 ? void 0 : toToken.address, fromDebounce]);\n\n  const usdSlippage = () => {\n    if (!toAmountUsd || !fromAmountUsd) return;\n    const difference = new BigNumber(toAmountUsd).minus(fromAmountUsd);\n    const percentage = new BigNumber(difference).div(fromAmountUsd).times(100).toFixed(2);\n    return parseFloat(percentage);\n  }; //Check if approval is required\n\n\n  const checkApproval = async () => {\n    try {\n      const isApprovalReq = await getNetworkContractApproval(fromToken, ApprovalContract.BancorNetwork, fromAmount);\n\n      if (isApprovalReq) {\n        sendConversionEvent(ConversionEvents.approvePop);\n        setShowModal(true);\n      } else await handleSwap(true);\n    } catch (e) {\n      dispatch(addNotification({\n        type: NotificationType.error,\n        title: 'Transaction Failed',\n        msg: `${fromToken.symbol} approval had failed. Please try again or contact support.`\n      }));\n    }\n  };\n\n  const onConfirmation = async () => {\n    if (!(chainId && toToken && account)) return;\n    await wait(4000);\n    const balances = await fetchTokenBalances([fromToken, toToken], account);\n    dispatch(updateTokens(balances));\n  };\n\n  const handleSwap = async function () {\n    let approved = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!account) {\n      dispatch(openWalletModal(true));\n      return;\n    }\n\n    if (!(chainId && toToken)) return;\n    if (!approved) return checkApproval();\n\n    if (fromToken.address === wethToken) {\n      dispatch(addNotification(await withdrawWeth(fromAmount)));\n      return;\n    }\n\n    await swap(slippageTolerance, fromToken, toToken, fromAmount, toAmount, txHash => swapNotification(dispatch, fromToken, toToken, fromAmount, toAmount, txHash), () => {\n      sendConversionSuccessEvent(fromToken.usdPrice);\n      onConfirmation();\n    }, () => {\n      sendConversionFailEvent('User rejected transaction');\n      rejectNotification(dispatch);\n    }, error => {\n      sendConversionFailEvent(error);\n      swapFailedNotification(dispatch, fromToken, toToken, fromAmount, toAmount);\n    });\n    setShowModal(false);\n  };\n\n  const handleSwitch = () => {\n    if (!toToken) return;\n    switchTokens();\n    setFromAmountUsd(new BigNumber(fromAmount).times(toToken.usdPrice).toString());\n  }; // handle input errors\n\n\n  useEffect(() => {\n    const isInsufficient = fromToken && fromToken.balance && new BigNumber(fromAmount).gt(fromToken.balance);\n    if (isInsufficient) setFromError('Token balance is currently insufficient');else setFromError('');\n  }, [fromAmount, fromToken]);\n\n  const isSwapDisabled = () => {\n    if (isLoadingRate) return true;\n    if (fromError !== '') return true;\n    if (rate === '0') return true;\n    if (fromAmount === '' || new BigNumber(fromAmount).eq(0)) return true;\n    if (!toToken) return true;\n    if (toToken.address === wethToken) return true;\n    if (!account) return false;\n    return false;\n  };\n\n  const swapButtonText = () => {\n    if (!toToken) return 'Select a token';else if (toToken.address === wethToken) return 'Please change WETH to ETH';\n\n    if (fromToken.balance) {\n      const isInsufficientBalance = new BigNumber(fromToken.balance).lt(fromAmount);\n      if (isInsufficientBalance) return 'Insufficient balance';\n    }\n\n    const isInputZero = fromAmount === '' || new BigNumber(fromAmount).eq(0);\n    if (isInputZero) return 'Enter Amount';\n    if (rate === '0') return 'Insufficient liquidity';\n    if (!account) return 'Connect your wallet';\n    const isHighSlippage = new BigNumber(priceImpact).gte(5);\n    if (isHighSlippage) return 'Trade with high slippage';\n    return 'Trade';\n  };\n\n  const buttonVariant = () => {\n    const isHighSlippage = new BigNumber(priceImpact).gte(10);\n    if (isHighSlippage) return 'btn-error';\n    return 'btn-primary';\n  };\n\n  const handleSwapClick = () => {\n    const conversionSettings = slippageTolerance === 0.005 ? 'Regular' : 'Advanced';\n    const tokenPair = fromToken.symbol + '/' + (toToken === null || toToken === void 0 ? void 0 : toToken.symbol);\n    setCurrentConversion('Market', chainId, tokenPair, fromToken.symbol, toToken === null || toToken === void 0 ? void 0 : toToken.symbol, fromAmount, fromAmountUsd, toAmount, toAmountUsd, fiatToggle, rate, undefined, undefined, conversionSettings);\n    sendConversionEvent(ConversionEvents.click);\n    handleSwap();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-20\",\n        children: /*#__PURE__*/_jsxDEV(TokenInputField, {\n          dataCy: \"fromAmount\",\n          label: \"You Pay\",\n          token: fromToken,\n          setToken: setFromToken,\n          input: fromAmount,\n          setInput: setFromAmount,\n          amountUsd: fromAmountUsd,\n          setAmountUsd: setFromAmountUsd,\n          debounce: setFromDebounce,\n          border: true,\n          selectable: true,\n          excludedTokens: toToken ? [toToken.address] : [],\n          errorMsg: fromError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget-block-icon cursor-pointer\",\n          children: /*#__PURE__*/_jsxDEV(IconSync, {\n            className: \"transform hover:rotate-180 transition duration-500 w-[25px] text-primary dark:text-primary-light\",\n            onClick: () => fromToken.address !== wethToken && handleSwitch()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-10 mb-16 pt-16\",\n          children: [/*#__PURE__*/_jsxDEV(TokenInputField, {\n            label: \"You Receive\",\n            dataCy: \"toAmount\",\n            token: toToken,\n            setToken: setToToken,\n            input: toAmount,\n            setInput: setToAmount,\n            amountUsd: toAmountUsd,\n            setAmountUsd: setToAmountUsd,\n            disabled: true,\n            selectable: fromToken && fromToken.address !== wethToken,\n            startEmpty: true,\n            excludedTokens: [fromToken && fromToken.address, wethToken],\n            usdSlippage: usdSlippage(),\n            isLoading: isLoadingRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), toToken && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mt-15\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this), isLoadingRate ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-skeleton h-10 w-[140px]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex items-center\",\n                onClick: () => setRateToggle(!rateToggle),\n                children: [rateToggle ? `1 ${fromToken === null || fromToken === void 0 ? void 0 : fromToken.symbol} = ${prettifyNumber(rate)} ${toToken === null || toToken === void 0 ? void 0 : toToken.symbol}` : `1 ${toToken === null || toToken === void 0 ? void 0 : toToken.symbol} = ${prettifyNumber(rate === '0' ? 0 : 1 / Number(rate))} ${fromToken === null || fromToken === void 0 ? void 0 : fromToken.symbol}`, /*#__PURE__*/_jsxDEV(IconSync, {\n                  className: \"w-12 ml-[3px]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-5\",\n                  children: \"Price Impact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: \"The difference between market price and estimated price due to trade size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this), isLoadingRate ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-skeleton h-10 w-[80px]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                \"data-cy\": \"priceImpact\",\n                className: `${new BigNumber(priceImpact).gte(3) ? 'text-error' : ''}`,\n                children: [priceImpact, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSwapClick(),\n          className: `${buttonVariant()} rounded w-full`,\n          disabled: isSwapDisabled(),\n          children: swapButtonText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalApprove, {\n      isOpen: showModal,\n      setIsOpen: setShowModal,\n      amount: fromAmount,\n      fromToken: fromToken,\n      handleApproved: () => handleSwap(true),\n      waitForApproval: true,\n      contract: ApprovalContract.BancorNetwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SwapMarket, \"vf3oU00bSq+VUNQq8yQfwwDYjds=\", false, function () {\n  return [useWeb3React, useAppSelector, useDebounce, useAppSelector, useDispatch, useAppSelector, useAppSelector, useInterval, useAsyncEffect];\n});\n\n_c = SwapMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapMarket\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/swapMarket/SwapMarket.tsx"],"names":["TokenInputField","Tooltip","useDebounce","useEffect","useState","getRateAndPriceImapct","swap","useDispatch","addNotification","NotificationType","useWeb3React","ApprovalContract","getNetworkContractApproval","prettifyNumber","ethToken","wethToken","useAppSelector","BigNumber","openWalletModal","ModalApprove","sanitizeNumberInput","ConversionEvents","sendConversionEvent","sendConversionFailEvent","sendConversionSuccessEvent","setCurrentConversion","withdrawWeth","updateTokens","fetchTokenBalances","wait","useInterval","rejectNotification","swapFailedNotification","swapNotification","useAsyncEffect","SwapMarket","fromToken","setFromToken","toToken","setToToken","switchTokens","chainId","account","state","user","fromAmount","setFromAmount","fromDebounce","setFromDebounce","toAmount","setToAmount","toAmountUsd","setToAmountUsd","fromAmountUsd","setFromAmountUsd","rate","setRate","priceImpact","setPriceImpact","fromError","setFromError","showModal","setShowModal","rateToggle","setRateToggle","isLoadingRate","setIsLoadingRate","fiatToggle","usdToggle","dispatch","tokens","bancor","slippageTolerance","loadRateAndPriceImapct","amount","showAnimation","res","address","eth","find","x","usdAmount","times","usdPrice","toString","isMounted","parseFloat","result","div","decimals","usdSlippage","difference","minus","percentage","toFixed","checkApproval","isApprovalReq","BancorNetwork","approvePop","handleSwap","e","type","error","title","msg","symbol","onConfirmation","balances","approved","txHash","handleSwitch","isInsufficient","balance","gt","isSwapDisabled","eq","swapButtonText","isInsufficientBalance","lt","isInputZero","isHighSlippage","gte","buttonVariant","handleSwapClick","conversionSettings","tokenPair","undefined","click","Number"],"mappings":"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","sourcesContent":["import { TokenInputField } from 'components/tokenInputField/TokenInputField';\nimport { Tooltip } from 'components/tooltip/Tooltip';\nimport { useDebounce } from 'hooks/useDebounce';\nimport { Token } from 'services/observables/tokens';\nimport { useEffect, useState } from 'react';\nimport { getRateAndPriceImapct, swap } from 'services/web3/swap/market';\nimport { ReactComponent as IconSync } from 'assets/icons/sync.svg';\nimport { useDispatch } from 'react-redux';\nimport {\n  addNotification,\n  NotificationType,\n} from 'redux/notification/notification';\nimport { useWeb3React } from '@web3-react/core';\nimport {\n  ApprovalContract,\n  getNetworkContractApproval,\n} from 'services/web3/approval';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport { ethToken, wethToken } from 'services/web3/config';\nimport { useAppSelector } from 'redux/index';\nimport BigNumber from 'bignumber.js';\nimport { openWalletModal } from 'redux/user/user';\nimport { ModalApprove } from 'elements/modalApprove/modalApprove';\nimport { sanitizeNumberInput } from 'utils/pureFunctions';\nimport {\n  ConversionEvents,\n  sendConversionEvent,\n  sendConversionFailEvent,\n  sendConversionSuccessEvent,\n  setCurrentConversion,\n} from 'services/api/googleTagManager';\nimport { withdrawWeth } from 'services/web3/swap/limit';\nimport { updateTokens } from 'redux/bancor/bancor';\nimport { fetchTokenBalances } from 'services/observables/balances';\nimport { wait } from 'utils/pureFunctions';\nimport { useInterval } from 'hooks/useInterval';\nimport {\n  rejectNotification,\n  swapFailedNotification,\n  swapNotification,\n} from 'services/notifications/notifications';\nimport { useAsyncEffect } from 'use-async-effect';\n\ninterface SwapMarketProps {\n  fromToken: Token;\n  setFromToken: Function;\n  toToken?: Token;\n  setToToken: Function;\n  switchTokens: Function;\n}\n\nexport const SwapMarket = ({\n  fromToken,\n  setFromToken,\n  toToken,\n  setToToken,\n  switchTokens,\n}: SwapMarketProps) => {\n  const { chainId } = useWeb3React();\n  const account = useAppSelector<string | undefined>(\n    (state) => state.user.account\n  );\n  const [fromAmount, setFromAmount] = useState('');\n  const [fromDebounce, setFromDebounce] = useDebounce('');\n  const [toAmount, setToAmount] = useState('');\n  const [toAmountUsd, setToAmountUsd] = useState('');\n  const [fromAmountUsd, setFromAmountUsd] = useState('');\n  const [rate, setRate] = useState('');\n  const [priceImpact, setPriceImpact] = useState('');\n  const [fromError, setFromError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [rateToggle, setRateToggle] = useState(false);\n  const [isLoadingRate, setIsLoadingRate] = useState(false);\n  const fiatToggle = useAppSelector<boolean>((state) => state.user.usdToggle);\n\n  const dispatch = useDispatch();\n\n  const tokens = useAppSelector<Token[]>((state) => state.bancor.tokens);\n  const slippageTolerance = useAppSelector<number>(\n    (state) => state.user.slippageTolerance\n  );\n\n  const loadRateAndPriceImapct = async (\n    fromToken: Token,\n    toToken: Token,\n    amount: string,\n    showAnimation = true\n  ) => {\n    if (showAnimation) setIsLoadingRate(true);\n    const res = await getRateAndPriceImapct(fromToken, toToken, amount);\n    if (showAnimation) setIsLoadingRate(false);\n    return res;\n  };\n\n  useInterval(() => {\n    if (toToken && fromToken.address !== wethToken) {\n      loadRateAndPriceImapct(\n        fromToken,\n        toToken,\n        fromAmount ? fromAmount : '1',\n        false\n      );\n    }\n  }, 15000);\n\n  useEffect(() => {\n    setIsLoadingRate(true);\n  }, [fromAmount]);\n\n  useEffect(() => {\n    if (fromToken && fromToken.address === wethToken) {\n      const eth = tokens.find((x) => x.address === ethToken);\n      setRate('1');\n      setPriceImpact('0.00');\n      const usdAmount = new BigNumber(fromDebounce)\n        .times(1)\n        .times(eth?.usdPrice!)\n        .toString();\n      setToAmountUsd(usdAmount);\n      setToAmount(fromDebounce);\n      setIsLoadingRate(false);\n    }\n  }, [fromDebounce, fromToken, toToken, tokens]);\n\n  useAsyncEffect(\n    async (isMounted) => {\n      if (isMounted() && fromToken && fromToken.address !== wethToken) {\n        if (\n          (!fromDebounce || !parseFloat(fromDebounce)) &&\n          fromToken &&\n          toToken\n        ) {\n          setToAmount('');\n          setToAmountUsd('');\n          const res = await loadRateAndPriceImapct(fromToken, toToken, '1');\n          setRate(res.rate);\n          if (fromDebounce) setPriceImpact(res.priceImpact);\n          else setPriceImpact('0.00');\n        } else if (fromToken && toToken) {\n          const result = await loadRateAndPriceImapct(\n            fromToken,\n            toToken,\n            fromDebounce\n          );\n          const rate = new BigNumber(result.rate).div(fromDebounce);\n          setToAmount(\n            sanitizeNumberInput(\n              new BigNumber(fromDebounce).times(rate).toString(),\n              toToken.decimals\n            )\n          );\n\n          const usdAmount = new BigNumber(fromDebounce)\n            .times(rate)\n            .times(toToken.usdPrice!)\n            .toString();\n\n          setToAmountUsd(usdAmount);\n          setRate(rate.toString());\n          if (fromDebounce) setPriceImpact(result.priceImpact);\n          else setPriceImpact('0.00');\n        }\n      }\n    },\n    [fromToken?.address, toToken?.address, fromDebounce]\n  );\n\n  const usdSlippage = () => {\n    if (!toAmountUsd || !fromAmountUsd) return;\n    const difference = new BigNumber(toAmountUsd).minus(fromAmountUsd);\n    const percentage = new BigNumber(difference)\n      .div(fromAmountUsd)\n      .times(100)\n      .toFixed(2);\n    return parseFloat(percentage);\n  };\n\n  //Check if approval is required\n  const checkApproval = async () => {\n    try {\n      const isApprovalReq = await getNetworkContractApproval(\n        fromToken,\n        ApprovalContract.BancorNetwork,\n        fromAmount\n      );\n      if (isApprovalReq) {\n        sendConversionEvent(ConversionEvents.approvePop);\n        setShowModal(true);\n      } else await handleSwap(true);\n    } catch (e: any) {\n      dispatch(\n        addNotification({\n          type: NotificationType.error,\n          title: 'Transaction Failed',\n          msg: `${fromToken.symbol} approval had failed. Please try again or contact support.`,\n        })\n      );\n    }\n  };\n\n  const onConfirmation = async () => {\n    if (!(chainId && toToken && account)) return;\n\n    await wait(4000);\n    const balances = await fetchTokenBalances([fromToken, toToken], account);\n    dispatch(updateTokens(balances));\n  };\n\n  const handleSwap = async (approved: boolean = false) => {\n    if (!account) {\n      dispatch(openWalletModal(true));\n      return;\n    }\n\n    if (!(chainId && toToken)) return;\n\n    if (!approved) return checkApproval();\n\n    if (fromToken.address === wethToken) {\n      dispatch(addNotification(await withdrawWeth(fromAmount)));\n      return;\n    }\n\n    await swap(\n      slippageTolerance,\n      fromToken,\n      toToken,\n      fromAmount,\n      toAmount,\n      (txHash: string) =>\n        swapNotification(\n          dispatch,\n          fromToken,\n          toToken,\n          fromAmount,\n          toAmount,\n          txHash\n        ),\n      () => {\n        sendConversionSuccessEvent(fromToken.usdPrice);\n        onConfirmation();\n      },\n      () => {\n        sendConversionFailEvent('User rejected transaction');\n        rejectNotification(dispatch);\n      },\n      (error: string) => {\n        sendConversionFailEvent(error);\n        swapFailedNotification(\n          dispatch,\n          fromToken,\n          toToken,\n          fromAmount,\n          toAmount\n        );\n      }\n    );\n\n    setShowModal(false);\n  };\n\n  const handleSwitch = () => {\n    if (!toToken) return;\n    switchTokens();\n    setFromAmountUsd(\n      new BigNumber(fromAmount).times(toToken.usdPrice!).toString()\n    );\n  };\n\n  // handle input errors\n  useEffect(() => {\n    const isInsufficient =\n      fromToken &&\n      fromToken.balance &&\n      new BigNumber(fromAmount).gt(fromToken.balance);\n    if (isInsufficient) setFromError('Token balance is currently insufficient');\n    else setFromError('');\n  }, [fromAmount, fromToken]);\n\n  const isSwapDisabled = () => {\n    if (isLoadingRate) return true;\n    if (fromError !== '') return true;\n    if (rate === '0') return true;\n    if (fromAmount === '' || new BigNumber(fromAmount).eq(0)) return true;\n    if (!toToken) return true;\n    if (toToken.address === wethToken) return true;\n    if (!account) return false;\n    return false;\n  };\n\n  const swapButtonText = () => {\n    if (!toToken) return 'Select a token';\n    else if (toToken.address === wethToken) return 'Please change WETH to ETH';\n    if (fromToken.balance) {\n      const isInsufficientBalance = new BigNumber(fromToken.balance).lt(\n        fromAmount\n      );\n      if (isInsufficientBalance) return 'Insufficient balance';\n    }\n    const isInputZero = fromAmount === '' || new BigNumber(fromAmount).eq(0);\n    if (isInputZero) return 'Enter Amount';\n    if (rate === '0') return 'Insufficient liquidity';\n    if (!account) return 'Connect your wallet';\n    const isHighSlippage = new BigNumber(priceImpact).gte(5);\n    if (isHighSlippage) return 'Trade with high slippage';\n    return 'Trade';\n  };\n\n  const buttonVariant = () => {\n    const isHighSlippage = new BigNumber(priceImpact).gte(10);\n    if (isHighSlippage) return 'btn-error';\n    return 'btn-primary';\n  };\n\n  const handleSwapClick = () => {\n    const conversionSettings =\n      slippageTolerance === 0.005 ? 'Regular' : 'Advanced';\n    const tokenPair = fromToken.symbol + '/' + toToken?.symbol;\n    setCurrentConversion(\n      'Market',\n      chainId,\n      tokenPair,\n      fromToken.symbol,\n      toToken?.symbol,\n      fromAmount,\n      fromAmountUsd,\n      toAmount,\n      toAmountUsd,\n      fiatToggle,\n      rate,\n      undefined,\n      undefined,\n      conversionSettings\n    );\n    sendConversionEvent(ConversionEvents.click);\n    handleSwap();\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"px-20\">\n          <TokenInputField\n            dataCy=\"fromAmount\"\n            label=\"You Pay\"\n            token={fromToken}\n            setToken={setFromToken}\n            input={fromAmount}\n            setInput={setFromAmount}\n            amountUsd={fromAmountUsd}\n            setAmountUsd={setFromAmountUsd}\n            debounce={setFromDebounce}\n            border\n            selectable\n            excludedTokens={toToken ? [toToken.address] : []}\n            errorMsg={fromError}\n          />\n        </div>\n\n        <div className=\"widget-block\">\n          <div className=\"widget-block-icon cursor-pointer\">\n            <IconSync\n              className=\"transform hover:rotate-180 transition duration-500 w-[25px] text-primary dark:text-primary-light\"\n              onClick={() => fromToken.address !== wethToken && handleSwitch()}\n            />\n          </div>\n          <div className=\"mx-10 mb-16 pt-16\">\n            <TokenInputField\n              label=\"You Receive\"\n              dataCy=\"toAmount\"\n              token={toToken}\n              setToken={setToToken}\n              input={toAmount}\n              setInput={setToAmount}\n              amountUsd={toAmountUsd}\n              setAmountUsd={setToAmountUsd}\n              disabled\n              selectable={fromToken && fromToken.address !== wethToken}\n              startEmpty\n              excludedTokens={[fromToken && fromToken.address, wethToken]}\n              usdSlippage={usdSlippage()}\n              isLoading={isLoadingRate}\n            />\n            {toToken && (\n              <>\n                <div className=\"flex justify-between items-center mt-15\">\n                  <span>Rate</span>\n                  {isLoadingRate ? (\n                    <div className=\"loading-skeleton h-10 w-[140px]\"></div>\n                  ) : (\n                    <button\n                      className=\"flex items-center\"\n                      onClick={() => setRateToggle(!rateToggle)}\n                    >\n                      {rateToggle\n                        ? `1 ${fromToken?.symbol} = ${prettifyNumber(rate)} ${\n                            toToken?.symbol\n                          }`\n                        : `1 ${toToken?.symbol} = ${prettifyNumber(\n                            rate === '0' ? 0 : 1 / Number(rate)\n                          )} ${fromToken?.symbol}`}\n                      <IconSync className=\"w-12 ml-[3px]\" />\n                    </button>\n                  )}\n                </div>\n                <div className=\"flex justify-between\">\n                  <div className=\"flex items-center\">\n                    <span className=\"mr-5\">Price Impact</span>\n                    <Tooltip content=\"The difference between market price and estimated price due to trade size\" />\n                  </div>\n                  {isLoadingRate ? (\n                    <div className=\"loading-skeleton h-10 w-[80px]\"></div>\n                  ) : (\n                    <span\n                      data-cy=\"priceImpact\"\n                      className={`${\n                        new BigNumber(priceImpact).gte(3) ? 'text-error' : ''\n                      }`}\n                    >\n                      {priceImpact}%\n                    </span>\n                  )}\n                </div>\n              </>\n            )}\n          </div>\n\n          <button\n            onClick={() => handleSwapClick()}\n            className={`${buttonVariant()} rounded w-full`}\n            disabled={isSwapDisabled()}\n          >\n            {swapButtonText()}\n          </button>\n        </div>\n      </div>\n      <ModalApprove\n        isOpen={showModal}\n        setIsOpen={setShowModal}\n        amount={fromAmount}\n        fromToken={fromToken}\n        handleApproved={() => handleSwap(true)}\n        waitForApproval={true}\n        contract={ApprovalContract.BancorNetwork}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}