{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep1.tsx\";\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport BigNumber from 'bignumber.js';\nimport { sanitizeNumberInput } from 'utils/pureFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddLiquidityEmptyStep1 = _ref => {\n  let {\n    bnt,\n    tkn,\n    tknUsdPrice,\n    setTknUsdPrice,\n    bntTknRate\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center w-[34px] h-[34px] border-2 border-blue-0 dark:border-blue-1 rounded-full text-primary text-16\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-10 font-medium\",\n        children: \"Please enter the token prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 mt-20 gap-30\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-20 ml-10 mb-6\",\n          children: \"1 BNT =\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"px-20 py-12 border-2 border-blue-0 dark:border-blue-1 dark:bg-blue-4 text-20 text-right rounded-20 w-full focus:outline-none text-grey-3\",\n          value: `~${prettifyNumber(bnt.usdPrice, true)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-20 ml-10 mb-6\",\n          children: [\"1 \", tkn.symbol, \" =\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"px-20 py-12 border-2 border-blue-0 dark:border-blue-1 dark:bg-blue-4 text-20 text-right rounded-20 w-full focus:outline-none focus:border-primary\",\n          placeholder: \"~$0.00\",\n          value: tknUsdPrice ? `~$${tknUsdPrice}` : '',\n          onChange: e => setTknUsdPrice(sanitizeNumberInput(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-10 mt-10 text-grey-4 dark:text-grey-0\",\n      children: [\"1 BNT (\", prettifyNumber(bnt.usdPrice, true), \") =\", ' ', new BigNumber(tknUsdPrice).gt(0) ? prettifyNumber(bntTknRate) : 0, ' ', tkn.symbol, \" (\", prettifyNumber(new BigNumber(bntTknRate).times(tknUsdPrice), true), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = AddLiquidityEmptyStep1;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidityEmptyStep1\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/elements/earn/pools/addLiquidity/empty/AddLiquidityEmptyStep1.tsx"],"names":["prettifyNumber","BigNumber","sanitizeNumberInput","AddLiquidityEmptyStep1","bnt","tkn","tknUsdPrice","setTknUsdPrice","bntTknRate","usdPrice","symbol","e","target","value","gt","times"],"mappings":";AACA,SAASA,cAAT,QAA+B,uBAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,mBAAT,QAAoC,qBAApC;;AAUA,OAAO,MAAMC,sBAAsB,GAAG,QAMzB;AAAA,MAN0B;AACrCC,IAAAA,GADqC;AAErCC,IAAAA,GAFqC;AAGrCC,IAAAA,WAHqC;AAIrCC,IAAAA,cAJqC;AAKrCC,IAAAA;AALqC,GAM1B;AACX,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gIAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,8BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,0IAFZ;AAGE,UAAA,KAAK,EAAG,IAAGR,cAAc,CAACI,GAAG,CAACK,QAAL,EAAgB,IAAhB,CAAsB;AAHjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,2BAAuCJ,GAAG,CAACK,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,mJAFZ;AAGE,UAAA,WAAW,EAAC,QAHd;AAIE,UAAA,KAAK,EAAEJ,WAAW,GAAI,KAAIA,WAAY,EAApB,GAAwB,EAJ5C;AAKE,UAAA,QAAQ,EAAGK,CAAD,IACRJ,cAAc,CAACL,mBAAmB,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB;AANlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eA6BE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,4BACUb,cAAc,CAACI,GAAG,CAACK,QAAL,EAAgB,IAAhB,CADxB,SACkD,GADlD,EAEG,IAAIR,SAAJ,CAAcK,WAAd,EAA2BQ,EAA3B,CAA8B,CAA9B,IAAmCd,cAAc,CAACQ,UAAD,CAAjD,GAAgE,CAFnE,EAEsE,GAFtE,EAGGH,GAAG,CAACK,MAHP,QAIGV,cAAc,CAAC,IAAIC,SAAJ,CAAcO,UAAd,EAA0BO,KAA1B,CAAgCT,WAAhC,CAAD,EAA+C,IAA/C,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA7CM;KAAMH,sB","sourcesContent":["import { Token } from 'services/observables/tokens';\nimport { prettifyNumber } from 'utils/helperFunctions';\nimport BigNumber from 'bignumber.js';\nimport { sanitizeNumberInput } from 'utils/pureFunctions';\n\ninterface Props {\n  bnt: Token;\n  tkn: Token;\n  bntTknRate: string;\n  tknUsdPrice: string;\n  setTknUsdPrice: Function;\n}\n\nexport const AddLiquidityEmptyStep1 = ({\n  bnt,\n  tkn,\n  tknUsdPrice,\n  setTknUsdPrice,\n  bntTknRate,\n}: Props) => {\n  return (\n    <div className=\"px-10\">\n      <div className=\"flex items-center\">\n        <div className=\"flex justify-center items-center w-[34px] h-[34px] border-2 border-blue-0 dark:border-blue-1 rounded-full text-primary text-16\">\n          1\n        </div>\n        <div className=\"ml-10 font-medium\">Please enter the token prices</div>\n      </div>\n      <div className=\"grid grid-cols-2 mt-20 gap-30\">\n        <div>\n          <div className=\"text-20 ml-10 mb-6\">1 BNT =</div>\n          <input\n            type=\"text\"\n            className=\"px-20 py-12 border-2 border-blue-0 dark:border-blue-1 dark:bg-blue-4 text-20 text-right rounded-20 w-full focus:outline-none text-grey-3\"\n            value={`~${prettifyNumber(bnt.usdPrice!, true)}`}\n          />\n        </div>\n        <div>\n          <div className=\"text-20 ml-10 mb-6\">1 {tkn.symbol} =</div>\n          <input\n            type=\"text\"\n            className=\"px-20 py-12 border-2 border-blue-0 dark:border-blue-1 dark:bg-blue-4 text-20 text-right rounded-20 w-full focus:outline-none focus:border-primary\"\n            placeholder=\"~$0.00\"\n            value={tknUsdPrice ? `~$${tknUsdPrice}` : ''}\n            onChange={(e) =>\n              setTknUsdPrice(sanitizeNumberInput(e.target.value))\n            }\n          />\n        </div>\n      </div>\n      <div className=\"ml-10 mt-10 text-grey-4 dark:text-grey-0\">\n        1 BNT ({prettifyNumber(bnt.usdPrice!, true)}) ={' '}\n        {new BigNumber(tknUsdPrice).gt(0) ? prettifyNumber(bntTknRate) : 0}{' '}\n        {tkn.symbol} (\n        {prettifyNumber(new BigNumber(bntTknRate).times(tknUsdPrice), true)})\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}