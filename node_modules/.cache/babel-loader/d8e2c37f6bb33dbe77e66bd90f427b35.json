{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/selectToken/SelectToken.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { classNameGenerator } from 'utils/pureFunctions';\nimport { SearchableTokenList } from 'components/searchableTokenList/SearchableTokenList';\nimport { ReactComponent as IconChevronDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/chevronDown.svg\";\nimport { Image } from 'components/image/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SelectToken = _ref => {\n  _s();\n\n  let {\n    label,\n    selectable,\n    token,\n    tokens,\n    setToken,\n    startEmpty,\n    excludedTokens = [],\n    includedTokens = []\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [showSelectToken, setSelectToken] = useState(!!startEmpty);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-blue-4 dark:text-grey-0 font-medium\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), !showSelectToken || token ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center ${classNameGenerator({\n          'cursor-pointer': selectable\n        })}`,\n        onClick: () => selectable ? setIsOpen(true) : {},\n        children: [token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: token.logoURI,\n            alt: \"Token\",\n            className: \"bg-grey-2 rounded-full h-28 w-28\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-20 mx-10\",\n            children: token.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-skeleton h-28 w-28\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-skeleton mx-10 h-16 w-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), selectable && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IconChevronDown, {\n            className: \"w-[10px] mr-10 text-grey-4 dark:text-grey-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectable ? setIsOpen(true) : {},\n        className: \"flex items-center text-primary font-medium text-20\",\n        children: [\"Select a token\", /*#__PURE__*/_jsxDEV(IconChevronDown, {\n          className: \"w-[10px] ml-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchableTokenList, {\n      onClick: token => {\n        if (setToken) setToken(token);\n        setSelectToken(false);\n      },\n      isOpen: isOpen,\n      limit: true,\n      setIsOpen: setIsOpen,\n      tokens: tokens ? tokens : [],\n      excludedTokens: excludedTokens,\n      includedTokens: includedTokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SelectToken, \"IQ3L6GdpsQ+93gUuwpBqGeyp6Ic=\");\n\n_c = SelectToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectToken\");","map":{"version":3,"sources":["/Users/safahi/Desktop/webapp-v2-feature-gtm_events/src/components/selectToken/SelectToken.tsx"],"names":["useState","classNameGenerator","SearchableTokenList","Image","SelectToken","label","selectable","token","tokens","setToken","startEmpty","excludedTokens","includedTokens","isOpen","setIsOpen","showSelectToken","setSelectToken","logoURI","symbol"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,mBAAT,QAAoC,oDAApC;;AAGA,SAASC,KAAT,QAAsB,wBAAtB;;;AAaA,OAAO,MAAMC,WAAW,GAAG,QASH;AAAA;;AAAA,MATI;AAC1BC,IAAAA,KAD0B;AAE1BC,IAAAA,UAF0B;AAG1BC,IAAAA,KAH0B;AAI1BC,IAAAA,MAJ0B;AAK1BC,IAAAA,QAL0B;AAM1BC,IAAAA,UAN0B;AAO1BC,IAAAA,cAAc,GAAG,EAPS;AAQ1BC,IAAAA,cAAc,GAAG;AARS,GASJ;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,eAAD,EAAkBC,cAAlB,IAAoChB,QAAQ,CAAC,CAAC,CAACU,UAAH,CAAlD;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,kBAA2DL;AAA3D;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAACU,eAAD,IAAoBR,KAApB,gBACC;AACE,QAAA,SAAS,EAAG,qBAAoBN,kBAAkB,CAAC;AACjD,4BAAkBK;AAD+B,SAAD,CAE/C,EAHL;AAIE,QAAA,OAAO,EAAE,MAAOA,UAAU,GAAGQ,SAAS,CAAC,IAAD,CAAZ,GAAqB,EAJjD;AAAA,mBAMGP,KAAK,gBACJ;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,GAAG,EAAEA,KAAK,CAACU,OADb;AAEE,YAAA,GAAG,EAAC,OAFN;AAGE,YAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,sBAAiCV,KAAK,CAACW;AAAvC;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,wBADI,gBAUJ;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBAhBJ,EAsBGZ,UAAU,iBACT;AAAA,iCACE,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBA8BC;AACE,QAAA,OAAO,EAAE,MAAOA,UAAU,GAAGQ,SAAS,CAAC,IAAD,CAAZ,GAAqB,EADjD;AAEE,QAAA,SAAS,EAAC,oDAFZ;AAAA,kDAKE,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA2CE,QAAC,mBAAD;AACE,MAAA,OAAO,EAAGP,KAAD,IAAkB;AACzB,YAAIE,QAAJ,EAAcA,QAAQ,CAACF,KAAD,CAAR;AACdS,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAJH;AAKE,MAAA,MAAM,EAAEH,MALV;AAME,MAAA,KAAK,MANP;AAOE,MAAA,SAAS,EAAEC,SAPb;AAQE,MAAA,MAAM,EAAEN,MAAM,GAAGA,MAAH,GAAY,EAR5B;AASE,MAAA,cAAc,EAAEG,cATlB;AAUE,MAAA,cAAc,EAAEC;AAVlB;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA,kBADF;AA0DD,CAvEM;;GAAMR,W;;KAAAA,W","sourcesContent":["import { useState } from 'react';\nimport { classNameGenerator } from 'utils/pureFunctions';\nimport { SearchableTokenList } from 'components/searchableTokenList/SearchableTokenList';\nimport { Token } from 'services/observables/tokens';\nimport { ReactComponent as IconChevronDown } from 'assets/icons/chevronDown.svg';\nimport { Image } from 'components/image/Image';\n\ninterface SelectTokenProps {\n  label?: string;\n  selectable?: boolean;\n  token?: Token | null;\n  tokens?: Token[];\n  setToken?: Function;\n  startEmpty?: boolean;\n  excludedTokens?: string[];\n  includedTokens?: string[];\n}\n\nexport const SelectToken = ({\n  label,\n  selectable,\n  token,\n  tokens,\n  setToken,\n  startEmpty,\n  excludedTokens = [],\n  includedTokens = [],\n}: SelectTokenProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [showSelectToken, setSelectToken] = useState(!!startEmpty);\n\n  return (\n    <>\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-blue-4 dark:text-grey-0 font-medium\">{label}</div>\n        {!showSelectToken || token ? (\n          <div\n            className={`flex items-center ${classNameGenerator({\n              'cursor-pointer': selectable,\n            })}`}\n            onClick={() => (selectable ? setIsOpen(true) : {})}\n          >\n            {token ? (\n              <>\n                <Image\n                  src={token.logoURI}\n                  alt=\"Token\"\n                  className=\"bg-grey-2 rounded-full h-28 w-28\"\n                />\n                <span className=\"text-20 mx-10\">{token.symbol}</span>\n              </>\n            ) : (\n              <>\n                <div className=\"loading-skeleton h-28 w-28\"></div>\n                <div className=\"loading-skeleton mx-10 h-16 w-50\"></div>\n              </>\n            )}\n\n            {selectable && (\n              <div>\n                <IconChevronDown className=\"w-[10px] mr-10 text-grey-4 dark:text-grey-3\" />\n              </div>\n            )}\n          </div>\n        ) : (\n          <button\n            onClick={() => (selectable ? setIsOpen(true) : {})}\n            className=\"flex items-center text-primary font-medium text-20\"\n          >\n            Select a token\n            <IconChevronDown className=\"w-[10px] ml-10\" />\n          </button>\n        )}\n      </div>\n\n      <SearchableTokenList\n        onClick={(token: Token) => {\n          if (setToken) setToken(token);\n          setSelectToken(false);\n        }}\n        isOpen={isOpen}\n        limit\n        setIsOpen={setIsOpen}\n        tokens={tokens ? tokens : []}\n        excludedTokens={excludedTokens}\n        includedTokens={includedTokens}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}